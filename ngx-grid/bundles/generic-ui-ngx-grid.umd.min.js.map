{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-grid/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.public-api.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/gui.grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/gui.grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/gui.grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/gui.grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/coloring/gui.grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/gui.grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/gui.grid.paging.converter.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/row-selection/gui.grid.row-selection.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-gateway.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.providers.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid.register.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/api/gui.grid.api-provider.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.id.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.global-id.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive/reactive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.id.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/schema.global-id.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/core/modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/class/class-modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/style/style-name.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/style/style-modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/attribute/attribute-modifier.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive/stream-closer.ts","ng://@generic-ui/ngx-grid/common/cdk/component/gui-component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/smart-component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-grid/structure/shared/css-class/css-class.ts","ng://@generic-ui/ngx-grid/structure/shared/css-class/css-class.modifier.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-grid/common/cdk/component/pure-component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/api/structre.api.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.service.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/translation.service-impl.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/common/cdk/component/static-component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.global-id.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/group/composition.group.repository.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/icon-component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter.service.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/icon/filter-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/config/filter-container-token.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/enabled/searching.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.module.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.feature-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/source-counter.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/structure.gateway.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.warehouse.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.event-repository.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-grid/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-grid/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/vertical-grid/schema.vertical-grid-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.api.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-grid/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-translations.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/empty/empty-source.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/empty/empty-source.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.api.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/feature/column/column-query.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/gate.ts","ng://@generic-ui/ngx-grid/structure/search/feature/gate/searching.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/searching/structure-searching.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/gate/paging.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/paging/structure-paging.gate.ts","ng://@generic-ui/ngx-grid/structure/source/feature/gate/selection.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/source/structure-selection.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/panel/structure-panel.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/summaries/structure-summaries.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/structure.gates.ts","ng://@generic-ui/ngx-grid/structure/shared/css-class/css-class.module.ts","ng://@generic-ui/ngx-grid/structure/shared/structure-shared.module.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","ROW","SINGLE","MULTIPLE","GuiDefaultTranslation","GuiGridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GuiGridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GuiGridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GuiGridColumnSortingConverter","sortingConfig","GuiGridColumnCellEditingConverter","config","GuiGridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GuiGridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","configs","map","columns","convertColumn","header","guiColumn","columnConfig","field","width","summaries","sorting","cellEditing","formatter","matcher","GuiGridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GuiGridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GuiGridColumnMenuConverter","Injectable","GuiGridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GenericBuilder","build","buildObject","RowSelection","mode","isModeDefined","isTypeDefined","isEnabledDefined","isEnabled","getMode","getType","Builder","_super","RowSelectionBuilder","tslib_1.__extends","withEnabled","withType","withMode","GuiGridRowSelectionConverter","selection","builder","convertMode","RowSelectionMode","GuiRowSelectionMode","RowSelectionType","GuiRowSelectionType","GuiGridGateway","source","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","gridRowSelectionConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","rowSelection","rowSelectionConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onRowsSelect","rows","guiRows","row","index","getIndex","data","getData","itemId","getItemId","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","StructurePagingDefinitionBuilder","PagingDefinition","StructurePagingDefinitionDefaultBuilder","defaultEnabled","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","guiGridStructureDefinition","guiGridProviders","provide","useValue","structureParentComponent","InjectionToken","GuiGridIdGenerator","generateId","PREFIX","GuiGridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","SelectedRow","GuiGridApiProvider","schemaId","formationCommandDispatcher","formationWarehouse","sourceCommandInvoker","searchCommandInvoker","gridThemeCommandInvoker","structureCommandDispatcher","formationCommandInvoker","fcd","fw","scd","setSource","setOrigin","showLoading","setLoading","hideLoading","deleteRow","deleteRows","deleteSelectedRows","getSelectedRows","selectAll","unselectAll","search","phrase","clearSearchPhrase","scrollToTop","scrollToBottom","scrollToRowByIndex","scrollToIndex","setTheme","setVerticalGrid","setHorizontalGrid","setRowColoring","StructureCommand","Command","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","commandDispatcher","toggleSelectedRow","dispatch","CommandDispatcher","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","structureGlobalId","SetEnabledSelectionCommand","SetSelectionModeCommand","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","params","getParams","SourceDispatcher","editItem","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","StructureSourceOriginRepository","origin","origin$","ReplaySubject","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structureRepository","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","onStructure","structure","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","take","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","getValue","FieldReadModelRepository","AggregateArchive","FieldWarehouse","fieldReadModelRepository","onFields","on","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandInvoker","sourceDispatcher","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","fields","deleteItemById","deleteItemByIndex","deleteManyItemsByItemIds","deleteManyItemsByIndex","RowSelectedRepository","RowSelectionModeRepository","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","selectedItemIds","getSelectedItemIds","selectedItems","some","onRowSelectedReadModel","getAll","onSelectedRows","rm","onMode","SetConfigSearchingCommand","searchConfig","getConfig","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","SearchCommandInvoker","searchDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","GuiGridThemeCommandInvoker","schemaCommandInvoker","schemaTheme","schemaRowColoring","verticalGrid","horizontalGrid","SchemaCommand","SetSchemaThemeCommand","getTheme","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","SetConfigFilterCommand","filterConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","SetScrollBarPositionCommand","StructureCommandDispatcher","structureFilterCommandService","createStructure","enableVerticalScroll","disableVerticalScroll","Number","MAX_SAFE_INTEGER","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","SchemaCommandInvoker","schemaDispatcher","structureCommandService","fabricModalThemeService","changeTheme","toFabricTheme","toSchemaRowColoring","SchemaRowColoring","Theme","FabricModalThemeService","Modifier","hostElement","getElement","htmlElement","createModifier","getHost","Error","ClassModifier","_a","class_1","classes","_i","addClassToDomElement","remove","removeClassFromDomElement","clear","removeAttribute","CLASS","classList","StyleModifier","setStyleByName","name","setWidth","StyleName","toPx","setHeight","setPaddingTop","styleName","STYLE","removeStyleByName","AttributeModifier","setAttribute","GuiGridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","sourceCommandDispatcher","classModifier","nativeElement","styleModifier","attributeModifier","ngOnInit","initApi","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","api","getElementRef","getGridId","detectChanges","GUI_GRID_ID","schemaReadModelRootId","Component","args","selector","template","providers","useExisting","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","StreamCloser","GuiComponent","innerElementRef","innerClassModifier","addHostClass","addClassToHost","className","removeClassFromHost","hasChanged","prop","getSelectorName","SmartComponent","detector","viewInDom","streamCloser","ngAfterViewInit","reRender","isViewInDom","subscribeAndRender","obs$","callback","subscribeArguments","subscribeWithoutRender","PagingRepository","filter","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","SetPagingCommand","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","PagingCommandInvoker","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","PagingDisplayModeArchive","Archive","TOP","BOTTOM","CssClassModifier","select","CssClass","unselect","clazzName","toggle","PagingComponent","elRef","cssClassModifier","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","structurePagingDisplayModeArchive","alternativeDisplay","isPagingVisible","localStreamCloser","PagingPosition","a","compare","calculatePagingVisibility","size","sourceSize","isPagerTop","isPagerBottom","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","JSON","stringify","ReadModelObject","Boolean","PureComponent","subClassConstructor","subClassNgOnInit","hasConstructorOnlyElementRefInjected","throwError","isElementRef","reason","PagingSelectComponent","selectPageSizes","getSelectPageSizes","selectPageSize","getSelectPageSize","selectOption","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","Math","ceil","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","StructureDomainEvent","DomainEvent","NextPageEvent","aggregateId","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventRepository","eventBus","pagingReadModelService","getAggregateId","switchMap","onEvent","DomainEventBus","EventRepository","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","aggregate","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","PagingApiModule","ApiModule","PagingNavigatorComponent","PagingStatsComponent","firstItemIndex","lastItemIndex","TranslationApiModule","TranslationPipe","translationService","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationService","Dictionary","resolver","changeTranslation","_b","keys","_c","getTranslation","from","reduce","obj","setResolver","TranslationServiceImpl","dictionary","dictionary$","setDefaultTranslation","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","useClass","entryComponents","Optional","FeatureModule","PagingFeatureModule","pagingApiModule","FabricModule","NumberFormatterPipe","number","replace","NumberFormatterModule","StaticComponent","detach","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","StructureThemeConverter","convertTheme","SchemaThemeRepository","SchemaCssClassesRepository","theme$","setCssClass","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onSingleTheme","onCssClasses","StructureDialogColumnManagerService","injector","schemaWarehouse","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","parentInjector","Injector","parent","FabricDialogService","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","structureInfoPanelEnabledArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","preparedItems","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","CompositionReadModelRootRepository","ReadModelRootRepository","compositionGlobalId","GroupCollection","groups","showGroups","getGroups","isVisible","CompositionGroupRepository","CompositionWarehouse","compositionRepository","compositionGroupRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","onGroups","CompositionCommand","CreateCompositionCommand","SetColumnsCommand","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","SetGroupsCommand","getConfigs","CompositionDispatcher","createComposition","setColumns","setGroups","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandInvoker","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandInvoker","compositionWarehouse","enabledColumnsCount","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","StructureMenuColumnManagerComponent","IconComponent","StructureColumnManagerIconComponent","StructureColumnManagerModule","StructureInfoIconComponent","cdr","StructureInfoPanelConfigConverter","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","val","isInteger","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","toLowerCase","StructureSchemaManagerIconComponent","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","schemaReadModelRepository","ActiveFilterMenuTriggerDirective","el","activeFilterService","Directive","FilterIconComponent","FilterEnabledRepository","enabled$","setEnabled","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","filterContainerToken","FilterMenuTriggerComponent","drawerService","filterContainerRef","openDrawer","FabricDrawerService","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","formBuilder","valueChanged","controlsConfig","FORM_FILTER_VALUE","filterForm","group","controls","valueChanges","FormBuilder","FieldSelectorComponent","fieldSelected","ToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","FilterToggledEvent","ToggleFilterCommandHandler","externalFieldId","toggleFilter","AddFilterCommandHandler","publishFromAggregate","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","Filter","FilterSettings","filteringEnabled","searchEnabled","quickFiltersEnabled","isFilteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","entity","ContainsFilterType","getName","includes","FilterTypeId","FilterTypeIdGenerator","generate","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","addFields","getFilterType","getFieldIdsToFilterTypes","readModels","f","fields_1","fields_1_1","addField","dataType","getDataType","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","filters","getSettings","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","ConfigQuickFilterSetEventHandler","forEvent","handle","ofMessageType","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypesInitedEvent","getMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEvent","getFilters","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueValuesReadModel","allSelected","allDisabled","calculateSelection","areAllSelected","areAllDisabled","isSelectAllChecked","isIndeterminate","values","UniqueValueReadModel","geDisplayValue","displayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","uv","getDisplayValue","uniqueValues","FieldsInitedEvent","fieldConfigs","getFields","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","domainEventHandlers","registerDomainEventHandler","FilterApiModule","ActiveFilterListComponent","SearchingRepository","onSearchingEnabled","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchWarehouse","structureSearchingRepository","searchPhraseRepository","onSearchEnabled","ActiveSearchComponent","searchCommandDispatcher","searchWarehouse","clearSearch","ActiveFilterListModule","filterApiModule","FilterMenuFeatureModule","ReactiveFormsModule","SourceCounterFeatureModule","StructureInfoPanelModule","StructureIdGenerator","increment","Override","container","getPrototypeOf","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","LocalPagingWarehouse","Observable","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","LocalFormationWarehouse","rowSelectedArchive","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","FieldId","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","version","RandomStringGenerator","getUiId","getVersion","isSelected","isEven","isOdd","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaDomainEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","VerticalFormationScrollBarPositionRepository","StructureVerticalFormationWarehouse","verticalFormationRepository","positionRepository","onScrollBarPosition","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","cssClass","init","cssHostRef","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","SUBMIT","CANCEL","InitFieldsCommand","getFieldConfigs","ColumnFieldId","ColumnParams","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnConfigs","groupConfigs","columnField","getAccessorMethod","getSearchAccessorMethod","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","changeAfterInit","structureColumnInputHandler","editMode","autoResizeWidth","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","onColumnsChanged","onContainerWidthChanged","onSourceEdited","state","StructureCellEditState","connectSchemaEvents","componentInitialized","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","isInitialized","isNotInitialized","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionDomainEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","SelectedRowChangedEvent","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","s$","itemsMap","j","onItemSelected","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","nextConfig","menuConfig","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","DomSanitizer","StructureRowDetailService","ref","turnOn","turnOff","close","StructureTitlePanelConfigArchive","titlePanelConfig","StructureFooterPanelConfigArchive","footerPanelConfig","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","SetSortingCommand","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","sortingApiModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","SearchManagerFactory","SearchPhraseSetEventHandler","structureSearchPhraseRepository","ConfigSearchingSetEventHandler","SearchDomainModule","SearchApiModule","SearchIconComponent","SearchComponent","structureWarehouse","verticalFormationWarehouse","searchingEnabled","FORM_SEARCH_NAME","searchForm","observeChanges","stopObserveChanges","setValue","reset","searchInputSubscription","debounceTime","SearchFeatureModule","searchApiModule","FieldReadModel","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","Field","of","dataField","getKey","getAccessor","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","getSortMatcher","getSearchValue","DataField","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","assignDefaultSummaries","UnknownDataField","one","two","NumberDataField","numOne","numTwo","StringDataField","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","createFields","FieldsInitedEventHandler","fieldUiConverter","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","fieldApiModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","isArray","deleteOneOriginItem","deleteOriginItemByIndex","findOriginItemIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","findIndex","FormationManager","setMode","allItemIds","RowSelectToggleType","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaRowClassArchive","SchemaRowStyleArchive","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","createEvent","addEvent","AggregateRoot","SchemaAggregateFactory","AggregateFactory","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","save","schemaAggregate","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","SchemaVerticalGridSetEventHandler","SchemaCssClass","SchemaCssClassesEventHandler","schemaKey","SchemaDomainModule","registerMultiDomainEventHandler","SchemaApiModule","defineAggregate","SchemaFeatureModule","schemaApiModule","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","compositionEventRepository","pagingDisplayModeArchive","detectorRef","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","host","[class.gui-structure-border]","[id]","CellTemplateWithContext","viewTemplate","editTemplate","context","sortStatus","sortable","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","StructureColumnConfigComponent","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","StructureColumnConfigService","inlineDialogService","placement","FabricPlacement","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","cd","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","collection","headerHeight","filtersRef","read","ChangedValueEmitter","subject$","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","rowDetailOpened","combineLatest","schemaRowClass","schemaRowStyle","trackByFn","translateY","StructureRowComponent","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","previousValue","updateRowStyle","rowClass","rowStyle","prevValue","selectRow","calculateRowStyle","style","styleFunction","prevEntity","rowStylesToRemove","removeRowStyles","rowStylesToAdd","renderRowStyles","styles","split","separatedStyles","trim","toRemoveClass","calculateRowClass","toAddClass","class","clazz","classFunction","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getCellView","txt","lowerCasedText","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","log","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","scrollPosition","scrollTop","destroy","runOutsideAngular","fromEvent","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","pagingWarehouse","topSummariesPanelEnabled","bottomSummariesPanelEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanel","titlePanelEnabled","footerPanel","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterAddedEvent","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","update","SummariesManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","calculateSourceBasedOnVirtualScroll","setConfig","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multi","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","getNotSelected","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","StructureSummariesRepository","onSummariesEnabled","StructureCreatedEventHandler","structureSummariesRepository","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","compositionCommandService","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","[class.gui-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesUiEventsRepository","onSummariesChanged","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","summariesTranslations","isSummariesTypePresent","StructureSummariesPanelModule","CreateStructureCommandHandler","getAggregateRepository","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureBannerPanel","getBannerPanelConfig","title","bannerPanel","StructureTitlePanelComponent","getPanelTitle","StructureFooterPanelComponent","EmptySourceComponent","EmptySourceFeatureModule","StructureThemeGateway","theme2","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesEnabledSetEventHandler","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","provideSummariesCalculator","summariesProviders","SummariesDomainModule","StructureSummariesWarehouse","SummariesApiModule","SummariesFeatureModule","summariesApiModule","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","ScrollBarPositionSetEventHandler","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","setSortStatus","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","presentation","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommandHandler","compositionEventConverter","publishEvents","setColumnsParams","domainEvents","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateRef","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","CompositionDomainModule","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","ContentChild","FunctionViewComponent","BarViewComponent","showPercentage","PercentageViewComponent","TextViewComponent","isBold","isItalic","renderer","isHtml","Attribute","Renderer2","components","exportDeclarations","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","Gate","isDefined","propertyName","SearchingGate","searching","StructureSearchingGate","StructureColumnHeaderGate","columnHeaderTop","columnHeaderBottom","PagingGate","StructurePagingGate","SelectionGate","StructureSelectionGate","StructureL10nGate","localization","translationResolver","StructurePanelGate","StructureRowDetailGate","rowDetail","StructureColumnMenuGate","StructureSummariesGate","StructureInfoPanelGate","StructureRowClassGate","StructureRowColoringGate","StructureRowStyleGate","structureGates","CssClassModule","StructureSharedModule","createStructureDefinition","StructureModule","HERMES_API","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GuiGridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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jP,KAAA,CAAC,CACTkP,QAAS,CACRC,EAAAA,aACAsgC,IAEDrgC,aAAc,GACdC,QAAS,gDAXDogC,GAAev6D,WAAA,CAAA,CAAA+G,KAsBV+1B,EAAAA,cAOd29B,GAhByC19B,EAAAA,eC6DzC,SAAgB49B,GAAmBC,GAClC,OAAO,IAAIziD,GAAY,OAASyiD,EAAUvmD,cAI3C,SAAgBwmD,GAAqBD,GACpC,OAAO,IAAIj9B,GAAc,OAASi9B,EAAUvmD,cAI7C,SAAgBymD,GAAgBF,GAC/B,OAAO,IAAI34C,GAAsB,OAAS24C,EAAUvmD,cAIrD,IAAa0mD,GAA+Bp5D,EAAA,CAC3C,CACCqS,QAASmE,GACT6iD,WAAYL,GACZM,KAAM,CACL1lB,KAGF,CACCvhC,QAAS2pB,GACTq9B,WAAYH,GACZI,KAAM,CACL1lB,KAGF,CACCvhC,QAASiO,GACT+4C,WAAYF,GACZG,KAAM,CACL1lB,MAGC4G,GAAc,CAEjBC,GACA0B,GACAoI,GACAnI,GACAC,GACA7d,GACA8nB,GACA3J,GACAK,GACAkH,GAEA7oB,GAAoBL,eACpBmtB,GAAqBntB,eACrBo1B,GAAmBp1B,eACnBowB,GAAoBpwB,eACpB46B,GAAoB56B,eACpB89B,GAAoB99B,eACpBF,GAAyBE,eAEzBqpB,GACAO,GACAD,GACAS,GACAS,GACAK,GACAE,KAIDmT,GAAA,SAAAztD,GAmDC,SAAAytD,EAAYrmD,EACTuqB,EACApO,EACAuvB,EACA72B,EACAi3B,EACAH,EACA1L,EACA2L,EACAG,EACAC,EACAsa,EACApa,EACAn6B,EACAo6B,EACAC,EACAkH,EACAjH,EACAC,EACAC,EACAzB,EACA0B,EACA+Z,EACA9Z,EACAC,EACAC,EACAC,EACAnsC,EACAosC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAlnB,EACiBxR,EACA+xC,EACDt8B,EACCu8B,EACAC,EACAC,EACAC,EACA7wC,EACjBvQ,EACAzC,EACiB8jD,GA9CpB,IAAAhzD,EAgDC+E,EAAA5N,KAAAZ,KACCo8D,EACA/xC,EACAjP,EACAzC,EACA/C,E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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateFunction = (cellValue: any, item?: any) => string;\n\nexport interface GuiMultiColumn {\n\n\theader?: string;\n\n\tcolumns?: Array<GuiColumn>;\n\n}\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\theader?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tformatter?: (item: any, index: number) => any;\n\n\tmatcher?: (item: any) => any;\n\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiRowStyle {\n\n\tstyle?: string;\n\n\tstyleFunction?: (data: any, index: number) => string;\n\n}\n\nexport interface GuiRowClass {\n\n\tclass?: string;\n\n\tclassFunction?: (data: any, index: number) => string;\n\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any, index: number) => string;\n\n}\n\nexport interface GuiTitlePanel {\n\n\tenabled?: boolean;\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiFooterPanel {\n\n\tenabled?: boolean\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiInfoPanel {\n\n\tenabled?: boolean;\n\n\tinfoDialog?: boolean;\n\n\tcolumnsManager?: boolean;\n\n\tschemaManager?: boolean;\n\n\tsourceSize?: boolean\n\n}\n\nexport enum GuiRowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum GuiRowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport interface GuiRowSelection {\n\n\tenabled?: boolean;\n\n\ttype?: string | GuiRowSelectionType;\n\n\tmode?: string | GuiRowSelectionMode;\n\n}\n\nexport interface GuiSelectedRow {\n\n\tdata?: any;\n\n\tindex: number;\n\n\titemId: any;\n\n}\n\nexport interface GuiLocalization {\n\n\ttranslation?: GuiTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiTranslation = TranslationChange;\n\nexport const GuiDefaultTranslation = defaultTranslation;\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../core/api/gui.grid.public-api';\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nexport class GuiGridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../structure/summaries/core/domain/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../gui.grid.index';\n\n\nexport class GuiGridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateFunction } from '../../../core/api/gui.grid.public-api';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\nexport class GuiGridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateFunction): CellView | ViewTemplateFunction {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../composition/core/api/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../gui.grid.index';\n\nexport class GuiGridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../gui.grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../composition/core/api/column/column-cell-editing.config';\n\nexport class GuiGridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../core/api/gui.grid.public-api';\nimport { ColumnAlign } from '../../../../../../composition/core/domain/column/column-align';\n\nexport class GuiGridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn, GuiMultiColumn } from '../../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnTypeConverter } from './gui.grid.column-type.converter';\nimport { GuiGridColumnSummariesConverter } from './summaries/gui.grid.column-summaries.converter';\nimport { GuiGridColumnViewConverter } from './gui.grid.column-view.converter';\nimport { GuiGridColumnSortingConverter } from './sorting/gui.grid.column-sorting.converter';\nimport { GuiGridColumnCellEditingConverter } from './cell-editing/gui.grid.column-cell-editing.converter';\nimport { GuiGridColumnAlignConverter } from './align/gui.grid.column-align.converter';\n\n\nexport class GuiGridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GuiGridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GuiGridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GuiGridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GuiGridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GuiGridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GuiGridColumnAlignConverter();\n\n\tconvert(configs: Array<GuiColumn | GuiMultiColumn>): Array<ColumnConfig | MultiColumnConfig> {\n\n\t\treturn configs.map((config) => {\n\n\t\t\tif ((config as GuiMultiColumn).columns !== undefined) {\n\n\t\t\t\tconst columns = ((config as GuiMultiColumn).columns).map((c) => this.convertColumn(c));\n\n\t\t\t\treturn {\n\t\t\t\t\theader: config.header,\n\t\t\t\t\tcolumns: columns\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\treturn this.convertColumn(config);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.formatter !== undefined && guiColumn.formatter !== null) {\n\t\t\tcolumnConfig.formatter = guiColumn.formatter;\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\n\n\nexport class GuiGridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../../core/api/gui.grid.public-api';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring';\n\n\nexport class GuiGridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../core/api/gui.grid.public-api';\n\nimport { ColumnMenuConfig } from '../../../../../../structure/grid/core/api/column-menu-config';\n\n@Injectable()\nexport class GuiGridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../core/api/gui.grid.public-api';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/paging-config';\n\n\nexport class GuiGridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { GuiRowSelection, GuiRowSelectionMode, GuiRowSelectionType } from '../../../core/api/gui.grid.public-api';\nimport { RowSelection, RowSelectionMode, RowSelectionType } from '../../../../../structure/source/core/api/row-selection';\n\nexport class GuiGridRowSelectionConverter {\n\n\tconvert(selection: boolean | GuiRowSelection): RowSelection {\n\n\t\tlet builder = new RowSelection.Builder();\n\n\t\tif (typeof selection === 'boolean') {\n\t\t\treturn builder.withEnabled(selection).build();\n\t\t} else {\n\n\t\t\tif (selection.enabled !== undefined) {\n\t\t\t\tbuilder.withEnabled(selection.enabled);\n\t\t\t}\n\n\t\t\tif (selection.mode !== undefined) {\n\t\t\t\tconst mode = this.convertMode(selection.mode);\n\n\t\t\t\tbuilder.withMode(mode);\n\t\t\t}\n\n\t\t\tif (selection.type !== undefined) {\n\t\t\t\tconst type = this.convertType(selection.type);\n\n\t\t\t\tbuilder.withType(type);\n\t\t\t}\n\n\t\t\treturn builder.build();\n\t\t}\n\n\t}\n\n\tprivate convertMode(mode: string | GuiRowSelectionMode): RowSelectionMode {\n\n\t\tif (typeof mode === 'string') {\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'single':\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t\tcase 'multiple':\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mode) {\n\n\t\t\t\tcase GuiRowSelectionMode.SINGLE:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\n\t\t\t\tcase GuiRowSelectionMode.MULTIPLE:\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate convertType(type: string | GuiRowSelectionType): RowSelectionType {\n\n\t\tif (typeof type === 'string') {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'row':\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase GuiRowSelectionType.ROW:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\n\t\t\t\tcase GuiRowSelectionType.CHECKBOX:\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiLocalization,\n\tGuiMultiColumn,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowClass,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiRowSelection,\n\tGuiRowStyle,\n\tGuiSearching,\n\tGuiSelectedRow,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnConverter } from './column/gui.grid.column.converter';\nimport { GuiGridThemeConverter } from './theme/gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './theme/coloring/gui.grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../structure/grid/core/api/column-menu-config';\nimport { GuiGridColumnMenuConverter } from './column/menu/gui.grid.column-menu.converter';\nimport { GuiGridPagingConverter } from './paging/gui.grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { RowColoring } from '../../../../schema/core/api/row-coloring';\nimport { GuiGridRowSelectionConverter } from './row-selection/gui.grid.row-selection.converter';\nimport { RowSelection } from '../../../../structure/source/core/api/row-selection';\nimport { SelectedRow } from '../../../../structure/source/core/api/formation/selected-row';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class GuiGridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn | GuiMultiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelection: boolean | GuiRowSelection;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<GuiSelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig | MultiColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\trowSelectionConfig: RowSelection;\n\n\tprotected readonly gridColumnConverter: GuiGridColumnConverter = new GuiGridColumnConverter();\n\n\tprotected readonly gridThemeConverter: GuiGridThemeConverter = new GuiGridThemeConverter();\n\n\tprotected readonly gridRowColoringConverter: GuiGridRowColoringConverter = new GuiGridRowColoringConverter();\n\n\tprotected readonly gridColumnMenuConverter: GuiGridColumnMenuConverter = new GuiGridColumnMenuConverter();\n\n\tprotected readonly gridPagingConverter: GuiGridPagingConverter = new GuiGridPagingConverter();\n\n\tprotected readonly gridRowSelectionConverter: GuiGridRowSelectionConverter = new GuiGridRowSelectionConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: NgChanges<GuiGridGateway>): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\tif (changes.rowSelection !== undefined && changes.rowSelection.currentValue !== undefined) {\n\t\t\tthis.rowSelectionConfig = this.gridRowSelectionConverter.convert(this.rowSelection);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonRowsSelect(rows: Array<SelectedRow>): void {\n\n\t\tconst guiRows: Array<GuiSelectedRow> = rows.map((row) => {\n\t\t\treturn {\n\t\t\t\tindex: row.getIndex(),\n\t\t\t\tdata: row.getData(),\n\t\t\t\titemId: row.getItemId()\n\t\t\t};\n\t\t});\n\n\t\tthis.selectedRows.emit(guiRows);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\n/** @internal */\nexport const guiGridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\nimport { guiGridStructureDefinition } from './gui.grid-structure-definition';\n\nexport const guiGridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: guiGridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuiGridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGuiGridIdGenerator.index++;\n\n\t\treturn GuiGridIdGenerator.PREFIX + GuiGridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiGridComponent } from '../gui.grid.component';\n\n@Injectable()\nexport class GuiGridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GuiGridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly data: any;\n\n\tconstructor(data: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.data = data;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { GuiRowColoring, GuiSelectedRow, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { FormationCommandInvoker } from '../../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { SourceCommandInvoker } from '../../../../../structure/source/core/api/source.command-invoker';\nimport { SelectedRow } from '../../../../../structure/source/core/api/formation/selected-row';\nimport { FormationWarehouse } from '../../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../../structure/search/core/api/search.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { GuiGridThemeCommandInvoker } from '../theme/gui.grid.theme.command-invoker';\nimport { StructureCommandDispatcher } from '../../../../../structure/core/api/structure.command-dispatcher';\n\n\nexport interface GuiGridApi {\n\n\tsetSource(source: Array<any>): void\n\n\tshowLoading(): void;\n\n\thideLoading(): void;\n\n\tgetSelectedRows(): Array<GuiSelectedRow>;\n\n\tselectAll(): void;\n\n\tunselectAll(): void;\n\n\tdeleteSelectedRows(): void;\n\n\tdeleteRow(row: GuiSelectedRow): void;\n\n\tdeleteRows(rows: Array<GuiSelectedRow>): void;\n\n\t// Searching\n\tsearch(phrase: string): void;\n\n\tclearSearchPhrase(): void;\n\n\t// View port\n\tscrollToTop(): void;\n\n\tscrollToBottom(): void;\n\n\tscrollToRowByIndex(index: number): void;\n\n\t// Visual\n\tsetTheme(theme: string | GuiTheme): void;\n\n\tsetVerticalGrid(enabled: boolean): void;\n\n\tsetHorizontalGrid(enabled: boolean): void;\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring): void;\n\n}\n\n\nexport class GuiGridApiProvider {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate readonly schemaId: SchemaReadModelRootId;\n\n\tprivate readonly formationCommandInvoker: FormationCommandInvoker;\n\n\tprivate readonly formationWarehouse: FormationWarehouse;\n\n\tprivate readonly sourceCommandInvoker: SourceCommandInvoker;\n\n\tprivate readonly searchCommandInvoker: SearchCommandInvoker;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly structureCommandDispatcher: StructureCommandDispatcher;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tschemaId: SchemaReadModelRootId,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tformationWarehouse: FormationWarehouse,\n\t\t\t\tsourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tgridThemeCommandInvoker: GuiGridThemeCommandInvoker,\n\t\t\t\tstructureCommandDispatcher: StructureCommandDispatcher) {\n\t\tthis.structureId = structureId;\n\t\tthis.schemaId = schemaId;\n\t\tthis.formationCommandInvoker = formationCommandDispatcher;\n\t\tthis.formationWarehouse = formationWarehouse;\n\t\tthis.sourceCommandInvoker = sourceCommandInvoker;\n\t\tthis.searchCommandInvoker = searchCommandInvoker;\n\t\tthis.gridThemeCommandInvoker = gridThemeCommandInvoker;\n\t\tthis.structureCommandDispatcher = structureCommandDispatcher;\n\t}\n\n\tprovide(): GuiGridApi {\n\n\t\tconst structureId = this.structureId,\n\t\t\tschemaId = this.schemaId,\n\t\t\tfcd = this.formationCommandInvoker,\n\t\t\tfw = this.formationWarehouse,\n\t\t\tscd = this.sourceCommandInvoker,\n\t\t\tsearchCommandInvoker = this.searchCommandInvoker,\n\t\t\tgridThemeCommandInvoker = this.gridThemeCommandInvoker,\n\t\t\tstructureCommandDispatcher = this.structureCommandDispatcher;\n\n\t\treturn {\n\n\t\t\tsetSource(source: Array<any>): void {\n\t\t\t\tscd.setOrigin(source, structureId);\n\t\t\t},\n\n\t\t\tshowLoading(): void {\n\t\t\t\tscd.setLoading(true, structureId);\n\t\t\t},\n\n\t\t\thideLoading(): void {\n\t\t\t\tscd.setLoading(false, structureId);\n\t\t\t},\n\n\t\t\tdeleteRow(row: GuiSelectedRow): void {\n\t\t\t\tscd.deleteRow(new SelectedRow(row.data, row.index, row.itemId), structureId);\n\t\t\t},\n\n\t\t\tdeleteRows(rows: Array<GuiSelectedRow>): void {\n\t\t\t\tconst selectedRows = rows.map((row: GuiSelectedRow) => new SelectedRow(row.data, row.index, row.itemId));\n\n\t\t\t\tscd.deleteRows(selectedRows, structureId);\n\t\t\t},\n\n\t\t\tdeleteSelectedRows(): void {\n\t\t\t\t// this.sourceCommandDispatcher.\n\t\t\t},\n\n\t\t\tgetSelectedRows(): Array<GuiSelectedRow> {\n\n\t\t\t\tconst rows = fw.getSelectedRows(structureId);\n\n\t\t\t\treturn rows.map((r: SelectedRow) => {\n\t\t\t\t\treturn { data: r.getData(), index: r.getIndex(), itemId: r.getItemId() };\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tselectAll(): void {\n\t\t\t\tfcd.selectAll(structureId);\n\t\t\t},\n\n\t\t\tunselectAll(): void {\n\t\t\t\tfcd.unselectAll(structureId);\n\t\t\t},\n\n\t\t\tsearch(phrase: string): void {\n\t\t\t\tsearchCommandInvoker.search(phrase, structureId);\n\t\t\t},\n\n\t\t\tclearSearchPhrase(): void {\n\t\t\t\tsearchCommandInvoker.search('', structureId);\n\t\t\t},\n\n\t\t\t// View port\n\t\t\tscrollToTop(): void {\n\t\t\t\tstructureCommandDispatcher.scrollToTop(structureId);\n\t\t\t},\n\n\t\t\tscrollToBottom(): void {\n\t\t\t\tstructureCommandDispatcher.scrollToBottom(structureId);\n\t\t\t},\n\n\t\t\tscrollToRowByIndex(index: number): void {\n\t\t\t\tstructureCommandDispatcher.scrollToIndex(index, structureId);\n\t\t\t},\n\n\t\t\tsetTheme(theme: string | GuiTheme): void {\n\t\t\t\tgridThemeCommandInvoker.setTheme(theme, schemaId, structureId);\n\t\t\t},\n\n\t\t\tsetVerticalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setVerticalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetHorizontalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setHorizontalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetRowColoring(rowColoring: string | GuiRowColoring): void {\n\t\t\t\tgridThemeCommandInvoker.setRowColoring(rowColoring, schemaId);\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from './structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<OriginItemEntity>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<OriginItemEntity>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SourceWarehouse implements Warehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   // tap(() => {\n\t\t\t\t\t   //    console.log('onEntities');\n\t\t\t\t\t   // }),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandInvoker extends Reactive implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tlet selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tlet item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { schemaGlobalId } from '../../../../../schema/core/domain-read/schema.global-id';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { structureGlobalId } from '../../../../../structure/core/api/structure.global-id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring';\nimport { GuiRowColoring, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { GuiGridThemeConverter } from './gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './coloring/gui.grid.row-coloring.converter';\n\nexport class GuiGridThemeCommandInvoker {\n\n\tconstructor(private readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly gridThemeConverter: GuiGridThemeConverter,\n\t\t\t\tprivate readonly gridRowColoringConverter: GuiGridRowColoringConverter) {\n\t}\n\n\tsetTheme(theme: string | GuiTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tconst schemaTheme = this.gridThemeConverter.convert(theme);\n\n\t\tthis.schemaCommandInvoker.setTheme(schemaTheme, schemaId, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: RowColoring = this.gridRowColoringConverter.convert(rowColoring);\n\n\t\tthis.schemaCommandInvoker.setRowColoring(schemaRowColoring, schemaId);\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, schemaId);\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, schemaId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/schema-theme';\nimport { SchemaId } from '../api/schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from './structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/core/api/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './schema-theme';\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { structureGlobalId } from '../../../structure/core/api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../../structure/core/api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\n\n\n@Injectable()\nexport class SchemaCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t}\n\t}\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import { AttributeModifierApi } from './attribute-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class AttributeModifier extends Modifier<AttributeModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): AttributeModifierApi {\n\t\treturn new AttributeModifier.AttributeModifier(htmlElement);\n\t}\n\n\tprivate static readonly AttributeModifier = class implements AttributeModifierApi {\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetAttribute(name: string, value: string): void {\n\t\t\tthis.htmlElement.setAttribute(name, value);\n\t\t}\n\n\t\tremoveAttribute(name: string): void {\n\t\t\tthis.htmlElement.removeAttribute(name);\n\t\t}\n\n\t};\n\n}\n","import {\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnDestroy,\n\tOnInit,\n\tPLATFORM_ID,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GuiGridGateway } from './gui.grid-gateway';\nimport { guiGridProviders } from './gui.grid.providers';\n\nimport { structureParentComponent } from '../../../../structure/grid/feature/structure-parent-component';\n\nimport { GuiGridIdGenerator } from './register/gui.grid-id.generator';\nimport { GuiGridRegister } from './register/gui.grid.register';\nimport { GuiGridApi, GuiGridApiProvider } from './api/gui.grid.api-provider';\nimport { FormationCommandInvoker } from '../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { SourceCommandInvoker } from '../../../../structure/source/core/api/source.command-invoker';\nimport { FormationWarehouse } from '../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../structure/search/core/api/search.command-invoker';\nimport { GuiGridThemeCommandInvoker } from './theme/gui.grid.theme.command-invoker';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandDispatcher } from '../../../../structure/core/api/structure.command-dispatcher';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport { AttributeModifier } from '../../../../common/cdk/dom/attribute/attribute-modifier';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './gui.grid.component.html',\n\tstyleUrls: [\n\t\t'../gui.grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiGridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GuiGridComponent\n\t\t}\n\t],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiGridComponent extends GuiGridGateway implements OnInit, OnDestroy {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tpublic api: GuiGridApi;\n\n\tprivate static readonly GUI_GRID_ID = 'gui-grid-id';\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly attributeModifier: AttributeModifier;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly gridRegister: GuiGridRegister,\n\t\t\t\tprivate readonly gridIdGenerator: GuiGridIdGenerator,\n\t\t\t\t// delegate\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly sourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tprivate readonly searchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly structureCommandDispatcher: StructureCommandDispatcher\n\t) {\n\t\tsuper();\n\n\t\tthis.gridThemeCommandInvoker = new GuiGridThemeCommandInvoker(\n\t\t\tthis.schemaCommandInvoker,\n\t\t\tthis.gridThemeConverter,\n\t\t\tthis.gridRowColoringConverter\n\t\t);\n\n\t\tthis.classModifier = new ClassModifier(this.elementRef.nativeElement);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tthis.attributeModifier = new AttributeModifier(this.elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\t\tthis.classModifier.getHost().add('gui-grid');\n\t\t// this.styleModifier.getHost().setHeight(this.maxHeight);\n\n\t\tthis.initApi();\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn this.api;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.attributeModifier.getHost().setAttribute(GuiGridComponent.GUI_GRID_ID, this.localGridId);\n\t}\n\n\tprivate initApi(): void {\n\t\tthis.api = new GuiGridApiProvider(\n\t\t\tthis.structureRef.structureId,\n\t\t\tthis.structureRef.schemaReadModelRootId,\n\t\t\tthis.formationCommandDispatcher,\n\t\t\tthis.formationWarehouse,\n\t\t\tthis.sourceCommandDispatcher,\n\t\t\tthis.searchCommandInvoker,\n\t\t\tthis.gridThemeCommandInvoker,\n\t\t\tthis.structureCommandDispatcher\n\t\t).provide();\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { GuiComponent } from './gui-component';\nimport { Subscription } from 'rxjs';\n\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\tsubscribeAndRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tsubscribeWithoutRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse implements Warehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../shared/css-class/css-class.modifier';\nimport { CssClass } from '../../shared/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged(),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged((a: Paging, b: Paging) => {\n\t\t\t\t\treturn a.compare(b);\n\t\t\t\t}),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: `./paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: `./alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: `./alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(structureId, PagesizeChangedEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandInvoker,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: `./paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: `./paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Observable } from 'rxjs';\nimport { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\n\nexport abstract class TranslationService {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): Observable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TranslationService } from '../core/api/translation.service';\nimport { Translation } from '../core/api/translation';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: Subscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationService) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { TranslationService } from '../api/translation.service';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\n\n\n@Injectable()\nexport class TranslationServiceImpl extends TranslationService {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: Subject<Translation> = new ReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): Observable<Translation> {\n\t\treturn this.dictionary$\n\t\t\t\t   .asObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationService } from '../core/api/translation.service';\nimport { TranslationServiceImpl } from '../core/domain/translation.service-impl';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationService, useClass: TranslationServiceImpl }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() pagingApiModule: PagingApiModule) {\n\t\tsuper();\n\t\tif (pagingApiModule === null) {\n\t\t\tthrow new Error('PagingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: `./structure-info-modal.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../api/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse implements Warehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/domain-read/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from './composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupRepository extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], true);\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../domain-read/composition.read-model-root-repository';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from '../domain-read/composition.read-mode-root';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class CompositionWarehouse implements Warehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId = compositionGlobalId): Observable<GroupCollection> {\n\t\treturn this.compositionGroupRepository.on(compositionId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from './column/column.id';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class CompositionCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionWarehouse\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/domain-read/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: `./structure.schema-manger.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandService: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: `./structure.schema-manager-icon.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: `./filter-type-selector.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tOutput,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (let fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (let filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (let filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tlet activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (let key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tlet uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tlet uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingManagerFactory } from '../../../../paging/core/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../paging/core/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../paging/core/api/paging.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingRepository } from '../../../../paging/core/api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../paging/core/api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationDispatcher } from '../../../../source/core/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../source/core/api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { FilterConfig } from '../../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tscrollToTop(): void {\n\t\tsuper.scrollToTop(this.structureId);\n\t}\n\n\t@Override\n\tscrollToBottom(): void {\n\t\tsuper.scrollToBottom(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../core/api/structure.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../field/core/api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../source/core/api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../source/core/api/prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { CompositionDispatcher } from '../../../../../composition/core/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../../composition/core/domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionDispatcher, compositionGroupRepository);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setGroups(configs, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../../composition/core/domain-read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionRepository, compositionGroupRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../search/core/domain/search.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../../../search/core/api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../search/core/api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../search/core/api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/core/domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/core/domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/core/domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/core/domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/core/api/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/core/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring';\nimport { FabricModalThemeService } from '@generic-ui/fabric';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher,\n\t\t\t\tfabricModalThemeService: FabricModalThemeService) {\n\t\tsuper(schemaDispatcher, structureCommandService, fabricModalThemeService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\tPageChangedEvent as any,\n\t\t\t\tPagingSetEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionRepository extends AggregateArchive<number> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { VerticalFormationRepository } from '../../../../vertical-formation/core/api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionRepository } from '../../../../vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tpositionRepository: VerticalFormationScrollBarPositionRepository) {\n\t\tsuper(verticalFormationRepository, positionRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n\n\t@Override\n\tonScrollBarPosition(): Observable<number> {\n\t\treturn super.onScrollBarPosition(this.structureId);\n\t}\n}\n","import { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { SearchDispatcher } from '../../../search/core/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandInvoker, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandInvoker, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../domain/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../../summaries/core/api/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway>): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = changes.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(changes.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { SortingConfig } from '../../../sorting/core/api/sorting-config';\nimport { FilterConfig } from '../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../filter/core/api/quick-filters.config';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationService } from '../../../../l10n/core/api/translation.service';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t// @Input()\n\t// rowColoring: RowColoring;\n\n\t// @Input()\n\t// rowStyle: GuiRowStyle;\n\n\t// @Input()\n\t// rowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t// @Input()\n\t// infoPanel: boolean | InfoPanelConfig;\n\n\t// @Input()\n\t// summaries: SummariesConfig;\n\n\t// @Input()\n\t// columnMenu: ColumnMenuConfig;\n\t//\n\t// @Input()\n\t// rowDetail: RowDetailConfig;\n\n\t// @Input()\n\t// titlePanel: TitlePanelConfig;\n\t//\n\t// @Input()\n\t// footerPanel: FooterPanelConfig;\n\t//\n\t// @Input()\n\t// localization: GuiLocalization;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t// @Output()\n\t// rowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationService\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\t// if (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t// \tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t// }\n\n\t\t// if (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t// \tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t// }\n\t\t//\n\t\t// if (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t// \tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t// \tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t// }\n\n\t\t// if (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (typeof this.infoPanel === 'boolean') {\n\t\t// \t\tthis.infoPanel = {\n\t\t// \t\t\tenabled: this.infoPanel\n\t\t// \t\t};\n\t\t// \t}\n\t\t//\n\t\t// \tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t// \tthis.structureSummariesConfigService.set(this.summaries);\n\t\t// }\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (changes.loading !== undefined && changes.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(changes);\n\t\t}\n\n\t\tif (changes.verticalGrid !== undefined && changes.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (changes.horizontalGrid !== undefined && changes.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\t// if (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t// \tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t// }\n\n\t\t// if (simpleChanges.rowClass !== undefined && simpleChanges.rowClass.currentValue !== undefined) {\n\t\t// \tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t// }\n\n\t\t// if (simpleChanges.rowStyle !== undefined && simpleChanges.rowStyle.currentValue !== undefined) {\n\t\t// \tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t// }\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (changes.virtualScroll !== undefined && changes.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (changes.sorting !== undefined && changes.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (changes.filtering !== undefined && changes.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (changes.quickFilters !== undefined && changes.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\t// if (simpleChanges.localization !== undefined && simpleChanges.localization.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (this.localization.translationResolver) {\n\t\t// \t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t// \t}\n\t\t//\n\t\t// \tif (this.localization.translation) {\n\t\t// \t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t// \t}\n\t\t// }\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\n\t\tthis.componentInitialized();\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\t// this.schemaEventRepository\n\t\t// \t.onRowColoring(this.schemaId)\n\t\t// \t.pipe(this.takeUntil())\n\t\t// \t.subscribe((coloring: SchemaRowColoring) => {\n\t\t// \t\tthis.rowColoringChanged.emit(coloring);\n\t\t// \t});\n\t}\n\n\tprivate isInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate isNotInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionReadModelRootId } from '../domain-read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly s$ = new Subject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   take(1),\n\t\t\t\t\t\t\t\t   map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   let item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.s$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\t\treturn this.s$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): Observable<string> {\n\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/row-coloring/row-coloring-set.event';\nimport { SchemaId } from './schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValue: SelectedRow;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getData(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getData();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureTitlePanelConfigArchive.titlePanelConfig);\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureFooterPanelConfigArchive.footerPanelConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class SortingWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SortingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() sortingApiModule: SortingApiModule) {\n\t\tsuper();\n\t\tif (sortingApiModule === null) {\n\t\t\tthrow new Error('SortingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../api/enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandInvoker,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../core/api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../core/api/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\"\n\t\t\t\t  class=\"gui-flex gui-relative gui-w-full\">\n\n\t\t\t\t<div gui-search-icon></div>\n\n\t\t\t\t<input formControlName=\"searchPhrase\"\n\t\t\t\t\t   class=\"gui-border-0 gui-w-full gui-h-full gui-py-5 gui-pr-5 gui-pl-21\"\n\t\t\t\t\t   [placeholder]=\"placeholder\">\n\n\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\"\n\t\t\t\t\t  class=\"gui-clear-search-icon\"\n\t\t\t\t\t  (click)=\"clear()\">\n\t\t\t\t</span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.api';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() fieldApiModule: FieldApiModule) {\n\t\tsuper();\n\t\tif (fieldApiModule === null) {\n\t\t\tthrow new Error('FieldApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (let element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tlet rows = Array.from(this.selectedRows),\n\t\t\t\tequal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandInvoker,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaTheme } from '../api/schema-theme';\nimport { SchemaRowColoring } from '../api/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../api/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaVerticalGridRepository } from './schema.vertical-grid.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaVerticalGridSetEvent> {\n\n\tconstructor(private schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n\thandle(event: SchemaVerticalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.schemaVerticalGridRepository.next(event.getAggregateId(), event.getVerticalGrid());\n\t\t}\n\n\t}\n\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaTheme } from '../../api/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaThemeSetEventHandler } from '../domain-read/theme/schema-theme-set.event-handler';\nimport { SchemaHorizontalGridSetEventHandler } from '../domain-read/horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from '../domain-read/row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaVerticalGridSetEventHandler } from '../domain-read/vertical-grid/schema.vertical-grid-set.event-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from '../api/schema.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridSetEventHandler),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { schemaKey } from './schema.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandInvoker,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/api/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandDispatcher } from '../../core/api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationService,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueValuesReadModel } from '../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'gui-column-config',\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [dropdownTextTranslation]=\"dropdownTextTranslation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<div gui-unique-value-list\n\t\t\t\t\t\t\t [fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<div gui-structure-menu-column-manager>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\tthis.config = config;\n\t\t\t\t\treturn this.translationService.onTranslation();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tInput,\n\tOnInit,\n\tOutput,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onGroups(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((collection: GroupCollection) => {\n\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchPhraseRepository } from '../../../search/core/api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../search/core/api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: `./structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.reRender();\n\t\t });\n\n\t\tthis.schemaRowClassArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.schemaRowStyleArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../shared/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: `./structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getData(), entity.getPosition());\n\t\t}\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity) {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getData(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getData());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getData());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: `./structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: `./structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tconsole.log(containerHeight)\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceWarehouse.onEntities(),\n\t\t\tthis.compositionWarehouse.onTemplateColumns()\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onScrollBarPosition()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: `./structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.filterWarehouse\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.api';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (let value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (let entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (let field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (let notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tlet map = new Map();\n\n\t\tfor (let field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SummariesManager } from '../../domain/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../summaries/core/api/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\tStructureCommandDispatcher\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"dropdownTextTranslation\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortAscending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortDescending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\t{{'headerMenuMainTabColumnSortNone' | guiTranslate}}\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\t{{'headerMenuMainTabHideColumn' | guiTranslate}}\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\t{{'headerMenuMainTabMoveLeft' | guiTranslate}}\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\t{{'headerMenuMainTabMoveRight' | guiTranslate}}\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-arrow-icon',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): Observable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../../summaries/core/api/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../../summaries/core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from './structure.summaries-translations';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.countTooltip\">{{'summariesCount' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.distinctTooltip\">{{'summariesDist' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\t{{'summariesSum' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.averageTooltip\">{{'summariesAvg' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.minTooltip\">\n\t\t\t\t\t\t\t{{'summariesMin' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.maxTooltip\">\n\t\t\t\t\t\t\t{{'summariesMax' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.medTooltip\">{{'summariesMed' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesTruthy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesFalsy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.getBannerPanelConfig()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = title.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getBannerPanelConfig(): Observable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { Observable } from 'rxjs';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-title-panel gui-p-6 gui-border-b gui-border-b-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.onValue();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-footer-panel gui-p-6 gui-border-t gui-border-t-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.onValue();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: `./empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandInvoker) {\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureThemeGateway>): void {\n\n\t\tif (changes.theme2 !== undefined && changes.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../domain/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.api';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from '../api/enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSummariesCommandDispatcher } from './structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './structure-summaries.ui-events-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\nimport { StructureSummariesWarehouse } from './structure-summaries.warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\tStructureSummariesCommandDispatcher,\n\t\tStructureSummariesUiEventsRepository,\n\n\t\tStructureSummariesRepository,\n\t\tStructureSummariesWarehouse\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionRepository } from './vertical-formation.scroll-bar-position.repository';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.api';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureVerticalFormationWarehouse } from './structure-vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\tStructureVerticalFormationWarehouse,\n\t\tVerticalFormationScrollBarPositionRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../api/composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../../api/composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../../api/composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../../api/composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from '../api/composition.api';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from './composition.api';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport {\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupRepository,\n\n\t\tCompositionCommandInvoker,\n\t\tCompositionWarehouse,\n\t\tCompositionEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\n\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\nimport { StructureSummariesConfigService } from '../../panel/summaries/structure.summaries-config.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureSummariesConfigService: StructureSummariesConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StreamCloser } from '../../../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from './summaries/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { StructureThemeGateway } from '../../feature/gate/schema/structure-theme.gateway';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.api';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../shared/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway,\n\n\t...structureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule,\n\t...structureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GuiGridComponent } from '../../feature/grid/gui.grid.component';\n\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\n\nimport { GuiGridIdGenerator } from '../../feature/grid/register/gui.grid-id.generator';\nimport { GuiGridRegister } from '../../feature/grid/register/gui.grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiGridComponent\n];\n\nconst providers = [\n\tGuiGridIdGenerator,\n\tGuiGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}