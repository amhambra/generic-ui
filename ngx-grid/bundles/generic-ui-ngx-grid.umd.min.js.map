{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-grid/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.public-api.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/gui.grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/gui.grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/gui.grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/gui.grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/row-coloring/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/coloring/gui.grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/gui.grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/gui.grid.paging.converter.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/row-selection/gui.grid.row-selection.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-gateway.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.providers.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid.register.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/api/gui.grid.api-provider.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.id.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.global-id.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive/reactive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.id.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.global-id.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.command-invoker.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/core/modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/class/class-modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/style/style-name.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/style/style-modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/attribute/attribute-modifier.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive/stream-closer.ts","ng://@generic-ui/ngx-grid/common/cdk/component/gui-component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/smart-component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-grid/structure/common/css-class/css-class.ts","ng://@generic-ui/ngx-grid/structure/common/css-class/css-class.modifier.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-grid/common/cdk/component/pure-component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/api/structre.key.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.service.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/translation.service-impl.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/common/cdk/component/static-component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/icon-component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/row-coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter.service.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/icon/filter-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/config/filter-container-token.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.module.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.feature-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/source-counter.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.key.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/schema.domain-warehouse.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-event-repository.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.global-id.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/group/composition.group.repository.ts","ng://@generic-ui/ngx-grid/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/compositon.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/structure.gateway.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.warehouse.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.event-repository.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/enabled/searching.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain-read/search.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-grid/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-grid/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-grid/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/structure-summaries.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-translations.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/empty/empty-source.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/empty/empty-source.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.key.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-event-repository.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/feature/column/column-query.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/gate.ts","ng://@generic-ui/ngx-grid/structure/search/feature/gate/searching.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/searching/structure-searching.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/gate/paging.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/paging/structure-paging.gate.ts","ng://@generic-ui/ngx-grid/structure/source/feature/gate/selection.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/source/structure-selection.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/panel/structure-panel.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/summaries/structure-summaries.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/structure.gates.ts","ng://@generic-ui/ngx-grid/structure/common/css-class/css-class.module.ts","ng://@generic-ui/ngx-grid/structure/common/structure-shared.module.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","ROW","SINGLE","MULTIPLE","GuiDefaultTranslation","GuiGridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GuiGridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GuiGridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GuiGridColumnSortingConverter","sortingConfig","GuiGridColumnCellEditingConverter","config","GuiGridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GuiGridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","configs","map","columns","convertColumn","header","guiColumn","columnConfig","field","width","summaries","sorting","cellEditing","formatter","matcher","GuiGridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GuiGridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GuiGridColumnMenuConverter","Injectable","GuiGridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GenericBuilder","build","buildObject","RowSelection","mode","isModeDefined","isTypeDefined","isEnabledDefined","isEnabled","getMode","getType","Builder","_super","RowSelectionBuilder","tslib_1.__extends","withEnabled","withType","withMode","GuiGridRowSelectionConverter","selection","builder","convertMode","RowSelectionMode","GuiRowSelectionMode","RowSelectionType","GuiRowSelectionType","GuiGridGateway","source","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","gridRowSelectionConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","rowSelection","rowSelectionConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onRowsSelect","rows","guiRows","row","index","getIndex","getData","itemId","getItemId","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","StructurePagingDefinitionBuilder","PagingDefinition","StructurePagingDefinitionDefaultBuilder","defaultEnabled","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","guiGridStructureDefinition","guiGridProviders","provide","useValue","structureParentComponent","InjectionToken","GuiGridIdGenerator","generateId","PREFIX","GuiGridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","SelectedRow","GuiGridApiProvider","schemaId","formationCommandDispatcher","formationWarehouse","sourceCommandInvoker","searchCommandInvoker","gridThemeCommandInvoker","structureCommandDispatcher","formationCommandInvoker","fcd","fw","scd","setSource","setOrigin","showLoading","setLoading","hideLoading","deleteRow","data","deleteRows","deleteSelectedRows","getSelectedRows","selectAll","unselectAll","search","phrase","clearSearchPhrase","scrollToTop","scrollToBottom","scrollToRowByIndex","scrollToIndex","setTheme","setVerticalGrid","setHorizontalGrid","setRowColoring","StructureCommand","Command","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","commandDispatcher","toggleSelectedRow","dispatch","CommandDispatcher","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","structureGlobalId","SetEnabledSelectionCommand","SetSelectionModeCommand","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","params","getParams","SourceDispatcher","editItem","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","StructureSourceOriginRepository","origin","origin$","ReplaySubject","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structureRepository","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","onStructure","structure","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","take","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","getValue","FieldReadModelRepository","AggregateArchive","FieldWarehouse","fieldReadModelRepository","onFields","on","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandInvoker","sourceDispatcher","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","fields","deleteItemById","deleteItemByIndex","deleteManyItemsByItemIds","deleteManyItemsByIndex","RowSelectedRepository","RowSelectionModeRepository","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","selectedItemIds","getSelectedItemIds","selectedItems","some","onRowSelectedReadModel","getValueOrNullOrThrowError","getAll","onSelectedRows","rm","onMode","SetConfigSearchingCommand","searchConfig","getConfig","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","SearchCommandInvoker","searchDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","GuiGridThemeCommandInvoker","schemaCommandInvoker","schemaTheme","schemaRowColoring","verticalGrid","horizontalGrid","SchemaCommandInvoker","StructureCommandInvoker","Modifier","hostElement","getElement","htmlElement","createModifier","getHost","Error","ClassModifier","_a","class_1","add","classes","_i","addClassToDomElement","remove","removeClassFromDomElement","clear","removeAttribute","CLASS","classList","StyleModifier","setStyleByName","name","setWidth","StyleName","toPx","setHeight","setPaddingTop","styleName","STYLE","removeStyleByName","AttributeModifier","setAttribute","GuiGridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","sourceCommandDispatcher","classModifier","nativeElement","styleModifier","attributeModifier","ngOnInit","initApi","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","api","getElementRef","getGridId","detectChanges","GUI_GRID_ID","schemaReadModelRootId","Component","args","selector","template","providers","useExisting","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","StreamCloser","GuiComponent","innerElementRef","innerClassModifier","addHostClass","addClassToHost","className","removeClassFromHost","hasChanged","prop","getSelectorName","SmartComponent","detector","viewInDom","streamCloser","ngAfterViewInit","reRender","isViewInDom","subscribeAndRender","obs$","callback","subscribeArguments","subscribeWithoutRender","PagingRepository","filter","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","SetPagingCommand","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","PagingCommandInvoker","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","PagingDisplayModeArchive","Archive","TOP","BOTTOM","CssClassModifier","select","CssClass","unselect","clazzName","toggle","PagingComponent","elRef","cssClassModifier","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","structurePagingDisplayModeArchive","alternativeDisplay","isPagingVisible","localStreamCloser","position","PagingPosition","a","compare","calculatePagingVisibility","size","sourceSize","isPagerTop","isPagerBottom","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","JSON","stringify","ReadModelObject","Boolean","Number","PureComponent","subClassConstructor","subClassNgOnInit","hasConstructorOnlyElementRefInjected","throwError","isElementRef","reason","PagingSelectComponent","selectPageSizes","getSelectPageSizes","selectPageSize","getSelectPageSize","selectOption","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","Math","ceil","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","StructureDomainEvent","DomainEvent","NextPageEvent","aggregateId","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventRepository","eventBus","pagingReadModelService","getAggregateId","switchMap","onEvent","DomainEventBus","EventRepository","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","handle","structureAggregate","command","changePaging","publish","aggregate","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","PagingApiModule","ApiModule","PagingNavigatorComponent","PagingStatsComponent","firstItemIndex","lastItemIndex","TranslationApiModule","TranslationPipe","translationService","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationService","Dictionary","resolver","changeTranslation","_b","keys","_c","getTranslation","from","reduce","obj","setResolver","TranslationServiceImpl","dictionary","dictionary$","setDefaultTranslation","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","useClass","entryComponents","Optional","FeatureModule","PagingFeatureModule","pagingApiModule","FabricModule","NumberFormatterPipe","number","replace","NumberFormatterModule","StaticComponent","detach","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","StructureThemeConverter","convertTheme","Theme","SchemaWarehouse","StructureDialogColumnManagerService","injector","schemaWarehouse","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","parentInjector","Injector","parent","onSingleTheme","FabricDialogService","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","structureInfoPanelEnabledArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","preparedItems","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","CompositionWarehouse","CompositionCommandInvoker","StructureColumnManagerComponent","compositionCommandInvoker","compositionWarehouse","onAllColumns","enabledColumnsCount","accumulator","toggleColumn","column","stopPropagation","disableColumn","getColumnDefinitionId","enableColumn","StructureMenuColumnManagerComponent","IconComponent","StructureColumnManagerIconComponent","StructureColumnManagerModule","StructureInfoIconComponent","cdr","StructureInfoPanelConfigConverter","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","coloring","SchemaRowColoring","val","isInteger","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","toLowerCase","StructureSchemaManagerIconComponent","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","schemaReadModelRepository","ActiveFilterMenuTriggerDirective","el","activeFilterService","Directive","FilterIconComponent","FilterEnabledRepository","enabled$","setEnabled","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","SetConfigFilterCommand","filterConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","activeFilters","filterTypeMap","fieldReadModels","onHeaderColumns","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","filterContainerToken","FilterMenuTriggerComponent","drawerService","filterContainerRef","openDrawer","FabricDrawerService","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","formBuilder","valueChanged","controlsConfig","FORM_FILTER_VALUE","filterForm","group","controls","valueChanges","FormBuilder","FieldSelectorComponent","fieldSelected","ToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","FilterToggledEvent","ToggleFilterCommandHandler","externalFieldId","toggleFilter","AddFilterCommandHandler","publishFromAggregate","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","getEnabled","SetConfigFilterCommandHandler","setFilterConfig","SetConfigQuickFilterCommand","quickFiltersConfig","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","setQuickFiltersConfig","Filter","FilterSettings","filteringEnabled","searchEnabled","quickFiltersEnabled","isFilteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","entity","ContainsFilterType","getName","includes","FilterTypeId","FilterTypeIdGenerator","generate","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","addFields","getFilterType","getFieldIdsToFilterTypes","readModels","f","fields_1","fields_1_1","addField","dataType","getDataType","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","filters","getSettings","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","ConfigQuickFilterSetEventHandler","forEvent","ofMessageType","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypesInitedEvent","getMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEvent","getFilters","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueValuesReadModel","allSelected","allDisabled","calculateSelection","areAllSelected","areAllDisabled","isSelectAllChecked","isIndeterminate","values","UniqueValueReadModel","geDisplayValue","displayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","uv","getDisplayValue","uniqueValues","FieldsInitedEvent","fieldConfigs","getFields","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","domainEventHandlers","registerDomainEventHandler","FilterApiModule","ActiveFilterListComponent","SearchWarehouse","ActiveSearchComponent","searchCommandDispatcher","searchWarehouse","onPhrase","clearSearch","ActiveFilterListModule","filterApiModule","FilterMenuFeatureModule","ReactiveFormsModule","SourceCounterFeatureModule","StructureInfoPanelModule","StructureIdGenerator","increment","Override","container","getPrototypeOf","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","LocalPagingWarehouse","Observable","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","LocalFormationWarehouse","rowSelectedArchive","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollBarPositionCommand","getPosition","SetScrollPositionCommand","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","getTheme","StructureDomainCommandInvoker","structureFilterCommandService","enableVerticalScroll","disableVerticalScroll","MAX_SAFE_INTEGER","setScrollPosition","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","SchemaDomainEvent","SchemaThemeSetEvent","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetEvent","getRowColoring","RowColoringSetAggregateEvent","SchemaVerticalGridSetEvent","getVerticalGrid","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","createEvent","changeTheme","addEvent","AggregateRoot","SchemaAggregateFactory","AggregateFactory","SchemaAggregateRepository","InMemorySchemaStore","InMemoryStore","InMemorySchemaAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","findById","save","schemaAggregate","CreateSchemaCommand","CreateAggregateCommand","CreateSchemaCommandHandler","SchemaCommand","SetSchemaThemeCommand","SetSchemaThemeCommandHandler","SetRowColoringCommand","getColoring","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommand","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommand","SetSchemaVerticalGridCommandHandler","SchemaCssClassesRepository","theme$","setCssClass","SchemaCssClass","SchemaCssClassesEventHandler","schemaCssClassesRepository","schemaKey","SchemaVerticalGridRepository","EventDrivenRepository","SchemaThemeRepository","SchemaRowColoringRepository","SchemaHorizontalGridRepository","SchemaDomainModule","registerMultiDomainEventHandler","SchemaDispatcher","SchemaEventRepository","SchemaDomainCommandInvoker","schemaDispatcher","structureCommandService","fabricModalThemeService","toFabricTheme","toSchemaRowColoring","FabricModalThemeService","SchemaDomainWarehouse","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onCssClasses","SchemaDomainEventRepository","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","SchemaApiModule","defineAggregate","SchemaRowClassArchive","SchemaRowStyleArchive","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","LocalSourceCommandDispatcher","LocalSourceWarehouse","CompositionCommand","CreateCompositionCommand","SetColumnsCommand","SetCompositionWidthCommand","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","SetGroupsCommand","getConfigs","CompositionDispatcher","createComposition","setColumns","setGroups","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","compositionGlobalId","ColumnDefinitionId","ReadModelEntityId","GroupCollection","groups","showGroups","getGroups","isVisible","CompositionGroupRepository","ColumnId","EntityId","CompositionDomainCommandInvoker","compositionDispatcher","compositionGroupRepository","columnDefinitionId","toColumnId","defId","LocalCompositionCommandDispatcher","columnDefId","CompositionReadModelRootRepository","ReadModelRootRepository","FieldId","CompositionDomainWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","getActiveHeaderColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","onGroups","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","version","RandomStringGenerator","getUiId","getVersion","isSelected","isEven","isOdd","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","VerticalFormationScrollBarPositionRepository","StructureVerticalFormationWarehouse","verticalFormationRepository","positionRepository","onScrollBarPosition","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","cssClass","init","cssHostRef","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","SUBMIT","CANCEL","InitFieldsCommand","getFieldConfigs","ColumnFieldId","ColumnParams","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnConfigs","groupConfigs","columnField","getAccessorMethod","getSearchAccessorMethod","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","compositionCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","changeAfterInit","structureColumnInputHandler","editMode","autoResizeWidth","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","onColumnsChanged","onContainerWidthChanged","onSourceEdited","state","StructureCellEditState","connectSchemaEvents","componentInitialized","isInitialized","isNotInitialized","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionEventRepository","SelectedRowChangedEvent","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","s$","itemsMap","j","onItemSelected","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","nextConfig","menuConfig","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","DomSanitizer","StructureRowDetailService","ref","turnOn","turnOff","close","StructureTitlePanelConfigArchive","titlePanelConfig","StructureFooterPanelConfigArchive","footerPanelConfig","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","SetSortingCommand","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","sortingApiModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","SearchManagerFactory","SearchPhraseRepository","phrase$","setPhrase","observePhrases","SearchPhraseSetEventHandler","structureSearchPhraseRepository","SearchingRepository","onSearchingEnabled","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","SearchDomainWarehouse","searchPhraseRepository","onSearchEnabled","SearchApiModule","SearchIconComponent","SearchComponent","structureWarehouse","verticalFormationWarehouse","searchingEnabled","FORM_SEARCH_NAME","searchForm","observeChanges","stopObserveChanges","setValue","reset","searchInputSubscription","debounceTime","SearchFeatureModule","searchApiModule","FieldReadModel","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","Field","of","dataField","getKey","getAccessor","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","getSortMatcher","getSearchValue","DataField","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","assignDefaultSummaries","UnknownDataField","one","two","NumberDataField","numOne","numTwo","StringDataField","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","createFields","FieldsInitedEventHandler","fieldUiConverter","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","fieldApiModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","isArray","deleteOneOriginItem","deleteOriginItemByIndex","findOriginItemIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","findIndex","FormationManager","setMode","allItemIds","RowSelectToggleType","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaFeatureModule","schemaApiModule","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","schemaCommandDispatcher","compositionEventRepository","pagingDisplayModeArchive","detectorRef","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","host","[class.gui-structure-border]","[id]","CellTemplateWithContext","viewTemplate","editTemplate","context","sortStatus","sortable","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","StructureColumnConfigComponent","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","StructureColumnConfigService","inlineDialogService","placement","FabricPlacement","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","cd","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","collection","headerHeight","filtersRef","read","ChangedValueEmitter","subject$","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","rowDetailOpened","combineLatest","schemaRowClass","schemaRowStyle","trackByFn","translateY","StructureRowComponent","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","previousValue","updateRowStyle","rowClass","rowStyle","prevValue","selectRow","calculateRowStyle","style","styleFunction","prevEntity","rowStylesToRemove","removeRowStyles","rowStylesToAdd","renderRowStyles","styles","split","separatedStyles","trim","toRemoveClass","calculateRowClass","toAddClass","class","clazz","classFunction","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getCellView","txt","lowerCasedText","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","scrollPosition","scrollTop","destroy","runOutsideAngular","fromEvent","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","pagingWarehouse","topSummariesPanelEnabled","bottomSummariesPanelEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanel","titlePanelEnabled","footerPanel","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterAddedEvent","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getVisibleContainerHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","update","SummariesManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","calculateSourceBasedOnVirtualScroll","setConfig","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multi","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","getNotSelected","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","StructureSummariesRepository","onSummariesEnabled","StructureCreatedEventHandler","structureSummariesRepository","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","compositionCommandService","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","[class.gui-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesEventRepository","onSummariesChanged","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","summariesTranslations","isSummariesTypePresent","StructureSummariesPanelModule","CreateStructureCommandHandler","getAggregateRepository","publishDomainEvents","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureBannerPanel","getBannerPanelConfig","title","bannerPanel","StructureTitlePanelComponent","getPanelTitle","StructureFooterPanelComponent","EmptySourceComponent","EmptySourceFeatureModule","StructureThemeGateway","theme2","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesEnabledSetEventHandler","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","provideSummariesCalculator","summariesProviders","SummariesDomainModule","StructureSummariesWarehouse","SummariesApiModule","SummariesFeatureModule","summariesApiModule","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","ScrollBarPositionSetEventHandler","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionDomainEvent","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","setSortStatus","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","presentation","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","CompositionColumnsSetEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","domainEvents","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateRef","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","CompositionDomainModule","CompositionDomainEventRepository","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","ContentChild","FunctionViewComponent","BarViewComponent","showPercentage","PercentageViewComponent","TextViewComponent","isBold","isItalic","renderer","isHtml","Attribute","Renderer2","components","exportDeclarations","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","Gate","isDefined","propertyName","SearchingGate","searching","StructureSearchingGate","StructureColumnHeaderGate","columnHeaderTop","columnHeaderBottom","PagingGate","StructurePagingGate","SelectionGate","StructureSelectionGate","StructureL10nGate","localization","translationResolver","StructurePanelGate","StructureRowDetailGate","rowDetail","StructureColumnMenuGate","StructureSummariesGate","StructureInfoPanelGate","StructureRowClassGate","StructureRowColoringGate","StructureRowStyleGate","structureGates","CssClassModule","StructureSharedModule","createStructureDefinition","StructureModule","HERMES_API","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GuiGridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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AAY,OAASsiD,EAAUrmD,cAI3C,SAAgBsmD,GAAqBD,GACpC,OAAO,IAAIphC,GAAc,OAASohC,EAAUrmD,cAI7C,SAAgBumD,GAAgBF,GAC/B,OAAO,IAAIv4C,GAAsB,OAASu4C,EAAUrmD,cAIrD,IAAawmD,GAA+Bj5D,EAAA,CAC3C,CACCoS,QAASoE,GACT0iD,WAAYL,GACZM,KAAM,CACLhtB,KAGF,CACC/5B,QAASslB,GACTwhC,WAAYH,GACZI,KAAM,CACLhtB,KAGF,CACC/5B,QAASmO,GACT24C,WAAYF,GACZG,KAAM,CACLhtB,MAGCsR,GAAc,CAEjBC,GACA0B,GACA6H,GACA5H,GACAC,GACAhmB,GACAmvB,GACA7I,GACAK,GACA2G,GAEA7vB,GAAoBL,eACpB4zB,GAAqB5zB,eACrBu8B,GAAmBv8B,eACnBu3B,GAAoBv3B,eACpB+hC,GAAoB/hC,eACpBiiC,GAAoBjiC,eACpBF,GAAyBE,eAEzBqwB,GACAO,GACAD,GACAE,GACAS,GACAK,GACAE,KAID6Q,GAAA,SAAAttD,GAmDC,SAAAstD,EAAYnmD,EACTqlB,EACAxN,EACA+2B,EACAr+B,EACAy+B,EACAH,EACArW,EACAsW,EACAsX,EACAnX,EACAoX,EACAlX,EACAnP,EACAoP,EACAC,EACAqG,EACApG,EACAC,EACAC,EACAxB,EACAyB,EACA6W,EACA5W,EACAC,EACAC,EACAC,EACApvC,EACAqvC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAxuB,EACiBzR,EACAo2C,EACDvhC,EACCwhC,EACAC,EACAC,EACAC,EACAl1C,EACjBhM,EACAzC,EACiB4jD,GA9CpB,IAAA9yD,EAgDC+E,EAAA5N,KAAAZ,KACCk8D,EACAp2C,EACA1K,EACAzC,EACAhD,EACAqlB,EACA5T,EACAuuB,EACAnoB,EACA+2B,EACAC,EACArW,EACAsW,EACAv+B,EACAy+B,EACAoX,EACAnX,EACAoX,EACAlX,EACAC,EACAC,EACAqG,EACApG,EACAC,EACAC,EACAxB,EACAyB,EACA6W,EACA5W,EACAC,EACAC,EACA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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateFunction = (cellValue: any, item?: any) => string;\n\nexport interface GuiMultiColumn {\n\n\theader?: string;\n\n\tcolumns?: Array<GuiColumn>;\n\n}\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\theader?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tformatter?: (item: any, index: number) => any;\n\n\tmatcher?: (item: any) => any;\n\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiRowStyle {\n\n\tstyle?: string;\n\n\tstyleFunction?: (source: any, index: number) => string;\n\n}\n\nexport interface GuiRowClass {\n\n\tclass?: string;\n\n\tclassFunction?: (source: any, index: number) => string;\n\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any, index: number) => string;\n\n}\n\nexport interface GuiTitlePanel {\n\n\tenabled?: boolean;\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiFooterPanel {\n\n\tenabled?: boolean\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiInfoPanel {\n\n\tenabled?: boolean;\n\n\tinfoDialog?: boolean;\n\n\tcolumnsManager?: boolean;\n\n\tschemaManager?: boolean;\n\n\tsourceSize?: boolean\n\n}\n\nexport enum GuiRowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum GuiRowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport interface GuiRowSelection {\n\n\tenabled?: boolean;\n\n\ttype?: string | GuiRowSelectionType;\n\n\tmode?: string | GuiRowSelectionMode;\n\n}\n\nexport interface GuiSelectedRow {\n\n\t// eslint-disable-next-line id-blacklist\n\tdata?: any;\n\n\tindex: number;\n\n\titemId: any;\n\n}\n\nexport interface GuiLocalization {\n\n\ttranslation?: GuiTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiTranslation = TranslationChange;\n\nexport const GuiDefaultTranslation = defaultTranslation;\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../core/api/gui.grid.public-api';\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nexport class GuiGridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../structure/summaries/core/domain/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../gui.grid.index';\n\n\nexport class GuiGridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tconst columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateFunction } from '../../../core/api/gui.grid.public-api';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\nexport class GuiGridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateFunction): CellView | ViewTemplateFunction {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../composition/core/api/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../gui.grid.index';\n\nexport class GuiGridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../gui.grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../composition/core/api/column/column-cell-editing.config';\n\nexport class GuiGridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../core/api/gui.grid.public-api';\nimport { ColumnAlign } from '../../../../../../composition/core/domain/column/column-align';\n\nexport class GuiGridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn, GuiMultiColumn } from '../../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnTypeConverter } from './gui.grid.column-type.converter';\nimport { GuiGridColumnSummariesConverter } from './summaries/gui.grid.column-summaries.converter';\nimport { GuiGridColumnViewConverter } from './gui.grid.column-view.converter';\nimport { GuiGridColumnSortingConverter } from './sorting/gui.grid.column-sorting.converter';\nimport { GuiGridColumnCellEditingConverter } from './cell-editing/gui.grid.column-cell-editing.converter';\nimport { GuiGridColumnAlignConverter } from './align/gui.grid.column-align.converter';\n\n\nexport class GuiGridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GuiGridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GuiGridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GuiGridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GuiGridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GuiGridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GuiGridColumnAlignConverter();\n\n\tconvert(configs: Array<GuiColumn | GuiMultiColumn>): Array<ColumnConfig | MultiColumnConfig> {\n\n\t\treturn configs.map((config) => {\n\n\t\t\tif ((config as GuiMultiColumn).columns !== undefined) {\n\n\t\t\t\tconst columns = ((config as GuiMultiColumn).columns).map((c) => this.convertColumn(c));\n\n\t\t\t\treturn {\n\t\t\t\t\theader: config.header,\n\t\t\t\t\tcolumns: columns\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\treturn this.convertColumn(config);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tconst columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.formatter !== undefined && guiColumn.formatter !== null) {\n\t\t\tcolumnConfig.formatter = guiColumn.formatter;\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\n\n\nexport class GuiGridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../../core/api/gui.grid.public-api';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\n\n\nexport class GuiGridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../core/api/gui.grid.public-api';\n\nimport { ColumnMenuConfig } from '../../../../../../structure/grid/core/api/column-menu-config';\n\n@Injectable()\nexport class GuiGridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../core/api/gui.grid.public-api';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/paging-config';\n\n\nexport class GuiGridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tconst pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { GuiRowSelection, GuiRowSelectionMode, GuiRowSelectionType } from '../../../core/api/gui.grid.public-api';\nimport { RowSelection, RowSelectionMode, RowSelectionType } from '../../../../../structure/source/core/api/row-selection';\n\nexport class GuiGridRowSelectionConverter {\n\n\tconvert(selection: boolean | GuiRowSelection): RowSelection {\n\n\t\tconst builder = new RowSelection.Builder();\n\n\t\tif (typeof selection === 'boolean') {\n\t\t\treturn builder.withEnabled(selection).build();\n\t\t} else {\n\n\t\t\tif (selection.enabled !== undefined) {\n\t\t\t\tbuilder.withEnabled(selection.enabled);\n\t\t\t}\n\n\t\t\tif (selection.mode !== undefined) {\n\t\t\t\tconst mode = this.convertMode(selection.mode);\n\n\t\t\t\tbuilder.withMode(mode);\n\t\t\t}\n\n\t\t\tif (selection.type !== undefined) {\n\t\t\t\tconst type = this.convertType(selection.type);\n\n\t\t\t\tbuilder.withType(type);\n\t\t\t}\n\n\t\t\treturn builder.build();\n\t\t}\n\n\t}\n\n\tprivate convertMode(mode: string | GuiRowSelectionMode): RowSelectionMode {\n\n\t\tif (typeof mode === 'string') {\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'single':\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t\tcase 'multiple':\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mode) {\n\n\t\t\t\tcase GuiRowSelectionMode.SINGLE:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\n\t\t\t\tcase GuiRowSelectionMode.MULTIPLE:\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate convertType(type: string | GuiRowSelectionType): RowSelectionType {\n\n\t\tif (typeof type === 'string') {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'row':\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase GuiRowSelectionType.ROW:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\n\t\t\t\tcase GuiRowSelectionType.CHECKBOX:\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiLocalization,\n\tGuiMultiColumn,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowClass,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiRowSelection,\n\tGuiRowStyle,\n\tGuiSearching,\n\tGuiSelectedRow,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnConverter } from './column/gui.grid.column.converter';\nimport { GuiGridThemeConverter } from './theme/gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './theme/coloring/gui.grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../structure/grid/core/api/column-menu-config';\nimport { GuiGridColumnMenuConverter } from './column/menu/gui.grid.column-menu.converter';\nimport { GuiGridPagingConverter } from './paging/gui.grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { RowColoring } from '../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiGridRowSelectionConverter } from './row-selection/gui.grid.row-selection.converter';\nimport { RowSelection } from '../../../../structure/source/core/api/row-selection';\nimport { SelectedRow } from '../../../../structure/source/core/api/formation/selected-row';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class GuiGridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn | GuiMultiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelection: boolean | GuiRowSelection;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<GuiSelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig | MultiColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\trowSelectionConfig: RowSelection;\n\n\tprotected readonly gridColumnConverter: GuiGridColumnConverter = new GuiGridColumnConverter();\n\n\tprotected readonly gridThemeConverter: GuiGridThemeConverter = new GuiGridThemeConverter();\n\n\tprotected readonly gridRowColoringConverter: GuiGridRowColoringConverter = new GuiGridRowColoringConverter();\n\n\tprotected readonly gridColumnMenuConverter: GuiGridColumnMenuConverter = new GuiGridColumnMenuConverter();\n\n\tprotected readonly gridPagingConverter: GuiGridPagingConverter = new GuiGridPagingConverter();\n\n\tprotected readonly gridRowSelectionConverter: GuiGridRowSelectionConverter = new GuiGridRowSelectionConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: NgChanges<GuiGridGateway>): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\tif (changes.rowSelection !== undefined && changes.rowSelection.currentValue !== undefined) {\n\t\t\tthis.rowSelectionConfig = this.gridRowSelectionConverter.convert(this.rowSelection);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonRowsSelect(rows: Array<SelectedRow>): void {\n\n\t\tconst guiRows: Array<GuiSelectedRow> = rows.map((row) => {\n\t\t\treturn {\n\t\t\t\tindex: row.getIndex(),\n\t\t\t\tsource: row.getData(),\n\t\t\t\titemId: row.getItemId()\n\t\t\t};\n\t\t});\n\n\t\tthis.selectedRows.emit(guiRows);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\n/** @internal */\nexport const guiGridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\nimport { guiGridStructureDefinition } from './gui.grid-structure-definition';\n\nexport const guiGridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: guiGridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuiGridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGuiGridIdGenerator.index++;\n\n\t\treturn GuiGridIdGenerator.PREFIX + GuiGridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiGridComponent } from '../gui.grid.component';\n\n@Injectable()\nexport class GuiGridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GuiGridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly source: any;\n\n\tconstructor(source: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.source = source;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.source;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { GuiRowColoring, GuiSelectedRow, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { FormationCommandInvoker } from '../../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { SourceCommandInvoker } from '../../../../../structure/source/core/api/source.command-invoker';\nimport { SelectedRow } from '../../../../../structure/source/core/api/formation/selected-row';\nimport { FormationWarehouse } from '../../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../../structure/search/core/api/search.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { GuiGridThemeCommandInvoker } from '../theme/gui.grid.theme.command-invoker';\nimport { StructureCommandInvoker } from '../../../../../structure/core/api/structure.command-invoker';\n\n\nexport interface GuiGridApi {\n\n\tsetSource(source: Array<any>): void\n\n\tshowLoading(): void;\n\n\thideLoading(): void;\n\n\tgetSelectedRows(): Array<GuiSelectedRow>;\n\n\tselectAll(): void;\n\n\tunselectAll(): void;\n\n\tdeleteSelectedRows(): void;\n\n\tdeleteRow(row: GuiSelectedRow): void;\n\n\tdeleteRows(rows: Array<GuiSelectedRow>): void;\n\n\t// Searching\n\tsearch(phrase: string): void;\n\n\tclearSearchPhrase(): void;\n\n\t// View port\n\tscrollToTop(): void;\n\n\tscrollToBottom(): void;\n\n\tscrollToRowByIndex(index: number): void;\n\n\t// Visual\n\tsetTheme(theme: string | GuiTheme): void;\n\n\tsetVerticalGrid(enabled: boolean): void;\n\n\tsetHorizontalGrid(enabled: boolean): void;\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring): void;\n\n}\n\n\nexport class GuiGridApiProvider {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate readonly schemaId: SchemaReadModelRootId;\n\n\tprivate readonly formationCommandInvoker: FormationCommandInvoker;\n\n\tprivate readonly formationWarehouse: FormationWarehouse;\n\n\tprivate readonly sourceCommandInvoker: SourceCommandInvoker;\n\n\tprivate readonly searchCommandInvoker: SearchCommandInvoker;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly structureCommandDispatcher: StructureCommandInvoker;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tschemaId: SchemaReadModelRootId,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tformationWarehouse: FormationWarehouse,\n\t\t\t\tsourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tgridThemeCommandInvoker: GuiGridThemeCommandInvoker,\n\t\t\t\tstructureCommandDispatcher: StructureCommandInvoker) {\n\t\tthis.structureId = structureId;\n\t\tthis.schemaId = schemaId;\n\t\tthis.formationCommandInvoker = formationCommandDispatcher;\n\t\tthis.formationWarehouse = formationWarehouse;\n\t\tthis.sourceCommandInvoker = sourceCommandInvoker;\n\t\tthis.searchCommandInvoker = searchCommandInvoker;\n\t\tthis.gridThemeCommandInvoker = gridThemeCommandInvoker;\n\t\tthis.structureCommandDispatcher = structureCommandDispatcher;\n\t}\n\n\tprovide(): GuiGridApi {\n\n\t\tconst structureId = this.structureId,\n\t\t\tschemaId = this.schemaId,\n\t\t\tfcd = this.formationCommandInvoker,\n\t\t\tfw = this.formationWarehouse,\n\t\t\tscd = this.sourceCommandInvoker,\n\t\t\tsearchCommandInvoker = this.searchCommandInvoker,\n\t\t\tgridThemeCommandInvoker = this.gridThemeCommandInvoker,\n\t\t\tstructureCommandDispatcher = this.structureCommandDispatcher;\n\n\t\treturn {\n\n\t\t\tsetSource(source: Array<any>): void {\n\t\t\t\tscd.setOrigin(source, structureId);\n\t\t\t},\n\n\t\t\tshowLoading(): void {\n\t\t\t\tscd.setLoading(true, structureId);\n\t\t\t},\n\n\t\t\thideLoading(): void {\n\t\t\t\tscd.setLoading(false, structureId);\n\t\t\t},\n\n\t\t\tdeleteRow(row: GuiSelectedRow): void {\n\t\t\t\tscd.deleteRow(new SelectedRow(row.data, row.index, row.itemId), structureId);\n\t\t\t},\n\n\t\t\tdeleteRows(rows: Array<GuiSelectedRow>): void {\n\t\t\t\tconst selectedRows = rows.map((row: GuiSelectedRow) => new SelectedRow(row.data, row.index, row.itemId));\n\n\t\t\t\tscd.deleteRows(selectedRows, structureId);\n\t\t\t},\n\n\t\t\tdeleteSelectedRows(): void {\n\t\t\t\t// this.sourceCommandDispatcher.\n\t\t\t},\n\n\t\t\tgetSelectedRows(): Array<GuiSelectedRow> {\n\n\t\t\t\tconst rows = fw.getSelectedRows(structureId);\n\n\t\t\t\treturn rows.map((r: SelectedRow) => {\n\t\t\t\t\t// eslint-disable-next-line id-blacklist\n\t\t\t\t\treturn { data: r.getData(), index: r.getIndex(), itemId: r.getItemId() } as GuiSelectedRow;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tselectAll(): void {\n\t\t\t\tfcd.selectAll(structureId);\n\t\t\t},\n\n\t\t\tunselectAll(): void {\n\t\t\t\tfcd.unselectAll(structureId);\n\t\t\t},\n\n\t\t\tsearch(phrase: string): void {\n\t\t\t\tsearchCommandInvoker.search(phrase, structureId);\n\t\t\t},\n\n\t\t\tclearSearchPhrase(): void {\n\t\t\t\tsearchCommandInvoker.search('', structureId);\n\t\t\t},\n\n\t\t\t// View port\n\t\t\tscrollToTop(): void {\n\t\t\t\tstructureCommandDispatcher.scrollToTop(structureId);\n\t\t\t},\n\n\t\t\tscrollToBottom(): void {\n\t\t\t\tstructureCommandDispatcher.scrollToBottom(structureId);\n\t\t\t},\n\n\t\t\tscrollToRowByIndex(index: number): void {\n\t\t\t\tstructureCommandDispatcher.scrollToIndex(index, structureId);\n\t\t\t},\n\n\t\t\tsetTheme(theme: string | GuiTheme): void {\n\t\t\t\tgridThemeCommandInvoker.setTheme(theme, schemaId, structureId);\n\t\t\t},\n\n\t\t\tsetVerticalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setVerticalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetHorizontalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setHorizontalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetRowColoring(rowColoring: string | GuiRowColoring): void {\n\t\t\t\tgridThemeCommandInvoker.setRowColoring(rowColoring, schemaId);\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<OriginItemEntity>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<OriginItemEntity>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SourceWarehouse implements Warehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   // tap(() => {\n\t\t\t\t\t   //    console.log('onEntities');\n\t\t\t\t\t   // }),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandInvoker extends Reactive implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tconst selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tconst item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getValueOrNullOrThrowError().getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../../../../../schema/core/api/schema.global-id';\nimport { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { structureGlobalId } from '../../../../../structure/core/api/structure.global-id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiRowColoring, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { GuiGridThemeConverter } from './gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './coloring/gui.grid.row-coloring.converter';\n\nexport class GuiGridThemeCommandInvoker {\n\n\tconstructor(private readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly gridThemeConverter: GuiGridThemeConverter,\n\t\t\t\tprivate readonly gridRowColoringConverter: GuiGridRowColoringConverter) {\n\t}\n\n\tsetTheme(theme: string | GuiTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tconst schemaTheme = this.gridThemeConverter.convert(theme);\n\n\t\tthis.schemaCommandInvoker.setTheme(schemaTheme, schemaId, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: RowColoring = this.gridRowColoringConverter.convert(rowColoring);\n\n\t\tthis.schemaCommandInvoker.setRowColoring(schemaRowColoring, schemaId);\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, schemaId);\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, schemaId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { StructureId } from '../../../structure/core/domain/structure.id';\nimport { RowColoring } from './row-coloring/row-coloring';\n\n\n@Injectable()\nexport abstract class SchemaCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(schemaId?: SchemaReadModelRootId): void;\n\n\tabstract setTheme(\n\t\ttheme: SchemaTheme,\n\t\tschemaId?: SchemaReadModelRootId,\n\t\tstructureId?: StructureId\n\t): void;\n\n\tabstract setRowColoring(rowColoring: RowColoring, schemaId?: SchemaReadModelRootId): void;\n\n\tabstract setVerticalGrid(verticalGrid: boolean, schemaId?: SchemaReadModelRootId): void;\n\n\tabstract setHorizontalGrid(horizontalGrid: boolean, schemaId?: SchemaReadModelRootId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../domain/structure.id';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport abstract class StructureCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(structureId?: StructureId): void;\n\n\tabstract enableVerticalScroll(structureId?: StructureId): void;\n\n\tabstract disableVerticalScroll(structureId?: StructureId): void;\n\n\tabstract scrollToTop(structureId?: StructureId): void;\n\n\tabstract scrollToBottom(structureId?: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId?: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId?: StructureId): void;\n\n\tabstract setOrigin(items: Array<any>, structureId?: StructureId): void;\n\n\tabstract setFilterConfig(config: FilterConfig, structureId?: StructureId): void;\n\n\tabstract setQuickFiltersConfig(config: QuickFiltersConfig, structureId?: StructureId): void;\n\n\tabstract setRowHeight(rowHeight: number, structureId?: StructureId): void;\n\n\tabstract setContainerHeight(height: number, structureId?: StructureId): void;\n\n\tabstract setRowHeightBasedOnTheme(theme: SchemaTheme, structureId?: StructureId): void;\n\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import { AttributeModifierApi } from './attribute-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class AttributeModifier extends Modifier<AttributeModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): AttributeModifierApi {\n\t\treturn new AttributeModifier.AttributeModifier(htmlElement);\n\t}\n\n\tprivate static readonly AttributeModifier = class implements AttributeModifierApi {\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetAttribute(name: string, value: string): void {\n\t\t\tthis.htmlElement.setAttribute(name, value);\n\t\t}\n\n\t\tremoveAttribute(name: string): void {\n\t\t\tthis.htmlElement.removeAttribute(name);\n\t\t}\n\n\t};\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnDestroy, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GuiGridGateway } from './gui.grid-gateway';\nimport { guiGridProviders } from './gui.grid.providers';\n\nimport { structureParentComponent } from '../../../../structure/grid/feature/structure-parent-component';\n\nimport { GuiGridIdGenerator } from './register/gui.grid-id.generator';\nimport { GuiGridRegister } from './register/gui.grid.register';\nimport { GuiGridApi, GuiGridApiProvider } from './api/gui.grid.api-provider';\nimport { FormationCommandInvoker } from '../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { SourceCommandInvoker } from '../../../../structure/source/core/api/source.command-invoker';\nimport { FormationWarehouse } from '../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../structure/search/core/api/search.command-invoker';\nimport { GuiGridThemeCommandInvoker } from './theme/gui.grid.theme.command-invoker';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandInvoker } from '../../../../structure/core/api/structure.command-invoker';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport { AttributeModifier } from '../../../../common/cdk/dom/attribute/attribute-modifier';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './gui.grid.component.html',\n\tstyleUrls: [\n\t\t'../gui.grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiGridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GuiGridComponent\n\t\t}\n\t],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiGridComponent extends GuiGridGateway implements OnInit, OnDestroy {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tpublic api: GuiGridApi;\n\n\tprivate static readonly GUI_GRID_ID = 'gui-grid-id';\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly attributeModifier: AttributeModifier;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly gridRegister: GuiGridRegister,\n\t\t\t\tprivate readonly gridIdGenerator: GuiGridIdGenerator,\n\t\t\t\t// delegate\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly sourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tprivate readonly searchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly structureCommandDispatcher: StructureCommandInvoker\n\t) {\n\t\tsuper();\n\n\t\tthis.gridThemeCommandInvoker = new GuiGridThemeCommandInvoker(\n\t\t\tthis.schemaCommandInvoker,\n\t\t\tthis.gridThemeConverter,\n\t\t\tthis.gridRowColoringConverter\n\t\t);\n\n\t\tthis.classModifier = new ClassModifier(this.elementRef.nativeElement);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tthis.attributeModifier = new AttributeModifier(this.elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\t\tthis.classModifier.getHost().add('gui-grid');\n\t\t// this.styleModifier.getHost().setHeight(this.maxHeight);\n\n\t\tthis.initApi();\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn this.api;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.attributeModifier.getHost().setAttribute(GuiGridComponent.GUI_GRID_ID, this.localGridId);\n\t}\n\n\tprivate initApi(): void {\n\t\tthis.api = new GuiGridApiProvider(\n\t\t\tthis.structureRef.structureId,\n\t\t\tthis.structureRef.schemaReadModelRootId,\n\t\t\tthis.formationCommandDispatcher,\n\t\t\tthis.formationWarehouse,\n\t\t\tthis.sourceCommandDispatcher,\n\t\t\tthis.searchCommandInvoker,\n\t\t\tthis.gridThemeCommandInvoker,\n\t\t\tthis.structureCommandDispatcher\n\t\t).provide();\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { GuiComponent } from './gui-component';\nimport { Subscription } from 'rxjs';\n\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\tsubscribeAndRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tsubscribeWithoutRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse implements Warehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\ton(): Observable<PagingDisplayMode> {\n\t\treturn super.on();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../common/css-class/css-class.modifier';\nimport { CssClass } from '../../common/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged(),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged((a: Paging, b: Paging) => {\n\t\t\t\t\treturn a.compare(b);\n\t\t\t\t}),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: './paging-select.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: './alternative-paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: './alternative-paging-pages.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from './structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'NextPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PrevPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PageChangedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(structureId, PagesizeChangedEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from './structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract findById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (const event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandInvoker,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: './paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: './paging-stats.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Observable } from 'rxjs';\nimport { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\n\nexport abstract class TranslationService {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): Observable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TranslationService } from '../core/api/translation.service';\nimport { Translation } from '../core/api/translation';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: Subscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationService) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { TranslationService } from '../api/translation.service';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\n\n\n@Injectable()\nexport class TranslationServiceImpl extends TranslationService {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: Subject<Translation> = new ReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): Observable<Translation> {\n\t\treturn this.dictionary$\n\t\t\t\t   .asObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationService } from '../core/api/translation.service';\nimport { TranslationServiceImpl } from '../core/domain/translation.service-impl';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationService, useClass: TranslationServiceImpl }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() pagingApiModule: PagingApiModule) {\n\t\tsuper();\n\t\tif (pagingApiModule === null) {\n\t\t\tthrow new Error('PagingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: './structure-info-modal.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: './structure.dialog-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\n\n@Injectable()\nexport abstract class SchemaWarehouse implements Warehouse {\n\n\tabstract onTheme(schemaId?: SchemaReadModelRootId): Observable<SchemaTheme>;\n\n\tabstract onSingleTheme(schemaId?: SchemaReadModelRootId): Observable<SchemaTheme>;\n\n\tabstract onHorizontalGrid(schemaId?: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onVerticalGrid(schemaId?: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onRowColoring(schemaId?: SchemaReadModelRootId): Observable<SchemaRowColoring>;\n\n\tabstract onCssClasses(schemaId?: SchemaReadModelRootId): Observable<SchemaCssClass>;\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.on()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\n\n\n@Injectable()\nexport abstract class CompositionWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onWidth(compositionId?: CompositionId): Observable<number>;\n\n\tabstract onContainerWidth(compositionId?: CompositionId): Observable<number>;\n\n\tabstract onWidthForEachColumn(compositionId?: CompositionId): Observable<ReadonlyArray<number>>;\n\n\tabstract onHeaderColumns(compositionId?: CompositionId): Observable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onAllColumns(compositionId?: CompositionId): Observable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onSortOrder(fieldId: FieldId, compositionId?: CompositionId): Observable<SortOrder>;\n\n\tabstract onTemplateColumns(compositionId?: CompositionId): Observable<ReadonlyArray<CellTemplateWithAccessor>>;\n\n\tabstract onResizeWidth(compositionId?: CompositionId): Observable<boolean>;\n\n\tabstract onGroups(compositionId?: CompositionId): Observable<GroupCollection>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\n\n\n@Injectable()\nexport abstract class CompositionCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(compositionId?: CompositionId): void;\n\n\tabstract setColumns(params: Array<ColumnParams>, compositionId?: CompositionId): void;\n\n\tabstract setGroups(configs: any, compositionId?: CompositionId): void;\n\n\tabstract setWidth(width: number, compositionId?: CompositionId): void;\n\n\tabstract setContainerWidth(width: number, compositionId?: CompositionId): void;\n\n\tabstract setResizeWidth(enabled: boolean, compositionId?: CompositionId): void;\n\n\tabstract enableColumn(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n\n\tabstract disableColumn(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n\n\tabstract moveLeft(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n\n\tabstract moveRight(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionWarehouse\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: './structure.menu-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplateUrl: './structure.info-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/api/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: './structure.schema-manger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandService: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: './structure.schema-manager-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: './filter-type-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (const fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (const filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (const filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, map, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, filters, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tconst activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, map, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (const key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tconst uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tconst uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, { fieldConfigs, fields }, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n@Injectable()\nexport abstract class SearchWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSearchEnabled(structureId: StructureId): Observable<boolean>;\n\n\tabstract onPhrase(structureId: StructureId): Observable<string>;\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingManagerFactory } from '../../../../paging/core/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../paging/core/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../paging/core/api/paging.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingRepository } from '../../../../paging/core/api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../paging/core/api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationDispatcher } from '../../../../source/core/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../source/core/api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { StructureId } from '../structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from './structure.id';\nimport { structureGlobalId } from '../api/structure.global-id';\nimport { CreateStructureCommand } from './create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/core';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { StructureCommandInvoker } from '../api/structure.command-invoker';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StructureDomainCommandInvoker extends StructureCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, theme, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, rowColoring, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, verticalGrid, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, horizontalGrid, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaDomainEvent } from '../schema.domain-event';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, null, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from './schema.aggregate';\nimport { SchemaId } from './schema.id';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract findById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { SchemaTheme } from '../theme/schema-theme';\nimport { SchemaRowColoring } from '../row-coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(\n\t\t\t\tnew SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring),\n\t\t\t\taggregateId\n\t\t\t);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends EventDrivenRepository<SchemaId, SchemaVerticalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n@Injectable()\nexport class SchemaThemeRepository extends EventDrivenRepository<SchemaId, SchemaThemeSetEvent, SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n@Injectable()\nexport class SchemaRowColoringRepository extends EventDrivenRepository<SchemaId, RowColoringSetEvent, SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends EventDrivenRepository<SchemaId, SchemaHorizontalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from './schema.key';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridRepository),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\nimport { SchemaId } from '../domain/schema.id';\n\n@Injectable()\nexport abstract class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onThemeChanged(schemaId: SchemaReadModelRootId): Observable<SchemaTheme>;\n\n\tabstract onHorizontalGridChanged(schemaId: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onVerticalGridChanged(schemaId: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): Observable<SchemaRowColoring>;\n\n}\n","import { SchemaDispatcher } from './schema.dispatcher';\nimport { StructureCommandInvoker } from '../../../structure/core/api/structure.command-invoker';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../api/schema.global-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { StructureId } from '../../../structure/core/domain/structure.id';\nimport { structureGlobalId } from '../../../structure/core/api/structure.global-id';\nimport { RowColoring } from '../api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { Injectable } from '@angular/core';\nimport { SchemaCommandInvoker } from '../api/schema.command-invoker';\n\n\n@Injectable()\nexport class SchemaDomainCommandInvoker extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t\tsuper();\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme,\n\t\t\t schemaId: SchemaReadModelRootId = schemaGlobalId,\n\t\t\t structureId: StructureId = structureGlobalId\n\t): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n}\n","import { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../api/schema.global-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaCssClass } from '../api/css-classes/schema-css-class';\nimport { SchemaWarehouse } from '../api/schema.warehouse';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n@Injectable()\nexport class SchemaDomainWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper();\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.onTheme(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { DomainEventBus } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../api/schema.global-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from './grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring/row-coloring-set.event';\nimport { SchemaEventRepository } from '../api/schema.event-repository';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class SchemaDomainEventRepository extends SchemaEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/create/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { schemaKey } from '../domain/schema.key';\nimport { SchemaDomainCommandInvoker } from '../domain/schema.domain-command-invoker';\nimport { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';\nimport { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\t{\n\t\t\tprovide: SchemaCommandInvoker,\n\t\t\tuseClass: SchemaDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaWarehouse,\n\t\t\tuseClass: SchemaDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaEventRepository,\n\t\t\tuseClass: SchemaDomainEventRepository\n\t\t},\n\n\t\tSchemaCssClassesRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { FilterConfig } from '../../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../../filter/core/api/quick-filters.config';\nimport { StructureDomainCommandInvoker } from '../../../../core/domain/structure.domain-command-invoker';\nimport { SchemaTheme } from '../../../../../schema/core';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureDomainCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tscrollToTop(): void {\n\t\tsuper.scrollToTop(this.structureId);\n\t}\n\n\t@Override\n\tscrollToBottom(): void {\n\t\tsuper.scrollToBottom(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../core/api/structure.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../field/core/api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../source/core/api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../source/core/api/prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupRepository extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], true);\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { CompositionDispatcher } from './composition.dispatcher';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from '../api/composition.global-id';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionCommandInvoker } from '../api/composition.command-invoker';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainCommandInvoker extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper();\n\t}\n\n\tcreate(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../../composition/core/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../../composition/core/domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\nimport { CompositionDomainCommandInvoker } from '../../../../../composition/core/domain/compositon.domain-command-invoker';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionDomainCommandInvoker {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionDispatcher, compositionGroupRepository);\n\t}\n\n\t@Override\n\tcreate(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.create(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setGroups(configs, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { CompositionReadModelRootRepository } from './composition.read-model-root-repository';\nimport { CompositionGroupRepository } from './group/composition.group.repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from '../api/composition.global-id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { GroupCollection } from '../api/group/group.collection';\nimport { CompositionWarehouse } from '../api/composition.warehouse';\nimport { filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper();\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId = compositionGlobalId): Observable<GroupCollection> {\n\t\treturn this.compositionGroupRepository.on(compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../../composition/core/domain-read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\nimport { CompositionDomainWarehouse } from '../../../../../composition/core/domain-read/composition.domain-warehouse';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionDomainWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionRepository, compositionGroupRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../search/core/domain/search.dispatcher';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchConfig } from '../../../../search/core/api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../search/core/api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../search/core/api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/core/domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/core/domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/core/domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/core/domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaDomainWarehouse } from '../../../../../schema/core/domain-read/schema.domain-warehouse';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaDomainWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/core/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommandInvoker } from '../../../../core/api/structure.command-invoker';\nimport { SchemaDomainCommandInvoker } from '../../../../../schema/core/domain/schema.domain-command-invoker';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring/row-coloring';\nimport { FabricModalThemeService } from '@generic-ui/fabric';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaDomainCommandInvoker {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tschemaDispatcher: SchemaDispatcher,\n\t\t\t\tfabricModalThemeService: FabricModalThemeService) {\n\t\tsuper(schemaDispatcher, structureCommandService, fabricModalThemeService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { StructureId } from '../structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly source: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(source: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.source = source;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.source;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'RowHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureHeightSetEvent');\n\t}\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, origin, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, null, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, { phrase, initial }, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\tPageChangedEvent as any,\n\t\t\t\tPagingSetEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionRepository extends AggregateArchive<number> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { VerticalFormationRepository } from '../../../../vertical-formation/core/api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionRepository } from '../../../../vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tpositionRepository: VerticalFormationScrollBarPositionRepository) {\n\t\tsuper(verticalFormationRepository, positionRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n\n\t@Override\n\tonScrollBarPosition(): Observable<number> {\n\t\treturn super.onScrollBarPosition(this.structureId);\n\t}\n}\n","import { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { SearchDispatcher } from '../../../search/core/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandInvoker, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandInvoker, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandInvoker, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tconst diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../domain/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../../summaries/core/api/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway>): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = changes.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(changes.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SortingConfig } from '../../../sorting/core/api/sorting-config';\nimport { FilterConfig } from '../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../filter/core/api/quick-filters.config';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationService } from '../../../../l10n/core/api/translation.service';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/** *********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t// @Input()\n\t// rowColoring: RowColoring;\n\n\t// @Input()\n\t// rowStyle: GuiRowStyle;\n\n\t// @Input()\n\t// rowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t// @Input()\n\t// infoPanel: boolean | InfoPanelConfig;\n\n\t// @Input()\n\t// summaries: SummariesConfig;\n\n\t// @Input()\n\t// columnMenu: ColumnMenuConfig;\n\t//\n\t// @Input()\n\t// rowDetail: RowDetailConfig;\n\n\t// @Input()\n\t// titlePanel: TitlePanelConfig;\n\t//\n\t// @Input()\n\t// footerPanel: FooterPanelConfig;\n\t//\n\t// @Input()\n\t// localization: GuiLocalization;\n\n\n\t/** *********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t// @Output()\n\t// rowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandInvoker,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandInvoker: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationService\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setTheme(this.theme);\n\t\t}\n\n\t\t// if (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t// \tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t// }\n\n\t\t// if (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t// \tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t// }\n\t\t//\n\t\t// if (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t// \tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t// \tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t// }\n\n\t\t// if (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (typeof this.infoPanel === 'boolean') {\n\t\t// \t\tthis.infoPanel = {\n\t\t// \t\t\tenabled: this.infoPanel\n\t\t// \t\t};\n\t\t// \t}\n\t\t//\n\t\t// \tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t// \tthis.structureSummariesConfigService.set(this.summaries);\n\t\t// }\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (changes.loading !== undefined && changes.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(changes);\n\t\t}\n\n\t\tif (changes.verticalGrid !== undefined && changes.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (changes.horizontalGrid !== undefined && changes.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\t// if (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t// \tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t// }\n\n\t\t// if (simpleChanges.rowClass !== undefined && simpleChanges.rowClass.currentValue !== undefined) {\n\t\t// \tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t// }\n\n\t\t// if (simpleChanges.rowStyle !== undefined && simpleChanges.rowStyle.currentValue !== undefined) {\n\t\t// \tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t// }\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (changes.virtualScroll !== undefined && changes.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (changes.sorting !== undefined && changes.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (changes.filtering !== undefined && changes.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (changes.quickFilters !== undefined && changes.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\t// if (simpleChanges.localization !== undefined && simpleChanges.localization.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (this.localization.translationResolver) {\n\t\t// \t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t// \t}\n\t\t//\n\t\t// \tif (this.localization.translation) {\n\t\t// \t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t// \t}\n\t\t// }\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.on()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\n\t\tthis.componentInitialized();\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\t// this.schemaEventRepository\n\t\t// \t.onRowColoring(this.schemaId)\n\t\t// \t.pipe(this.takeUntil())\n\t\t// \t.subscribe((coloring: SchemaRowColoring) => {\n\t\t// \t\tthis.rowColoringChanged.emit(coloring);\n\t\t// \t});\n\t}\n\n\tprivate isInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate isNotInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, { beforeItem, afterItem }, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\n@Injectable()\nexport abstract class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onColumnsChanged(compositionId?: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent>;\n\n\tabstract onContainerWidthChanged(compositionId?: CompositionReadModelRootId): Observable<number>;\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, { selectedRows, allSelected, allUnselected }, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly s$ = new Subject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   take(1),\n\t\t\t\t\t\t\t\t   map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   const item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.s$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\t\treturn this.s$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): Observable<string> {\n\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValue: SelectedRow;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getData(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getData();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureTitlePanelConfigArchive.titlePanelConfig);\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureFooterPanelConfigArchive.footerPanelConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class SortingWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SortingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() sortingApiModule: SortingApiModule) {\n\t\tsuper();\n\t\tif (sortingApiModule === null) {\n\t\t\tthrow new Error('SortingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { StructureId } from '../../../core/domain/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, values, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, preparedItems, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(\n\t\t\t\tstructureSummariesChangedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSummariesChangedAggregateEvent.getSummaries()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getAggregateId(),\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getPreparedItems()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tconst searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../api/enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { SearchingRepository } from '../api/enabled/searching.repository';\nimport { SearchPhraseRepository } from '../api/phrase/search-phrase.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SearchWarehouse } from '../api/search.warehouse';\n\n\n@Injectable()\nexport class SearchDomainWarehouse extends SearchWarehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { SearchDomainWarehouse } from '../domain-read/search.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandInvoker,\n\t\t{\n\t\t\tprovide: SearchWarehouse,\n\t\t\tuseClass: SearchDomainWarehouse\n\t\t},\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../core/api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\"\n\t\t\t\t  class=\"gui-flex gui-relative gui-w-full\">\n\n\t\t\t\t<div gui-search-icon></div>\n\n\t\t\t\t<input formControlName=\"searchPhrase\"\n\t\t\t\t\t   class=\"gui-border-0 gui-w-full gui-h-full gui-py-5 gui-pr-5 gui-pl-21\"\n\t\t\t\t\t   [placeholder]=\"placeholder\">\n\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\"\n\t\t\t\t\t  class=\"gui-clear-search-icon\"\n\t\t\t\t\t  (click)=\"clear()\">\n\t\t\t\t</span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tconst controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tconst valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; // (rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tconst matcher = fieldConfig.matcher;\n\t\tlet sortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() fieldApiModule: FieldApiModule) {\n\t\tsuper();\n\t\tif (fieldApiModule === null) {\n\t\t\tthrow new Error('FieldApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (const element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tconst rows = Array.from(this.selectedRows);\n\t\t\tlet equal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(\n\t\t\t\trowChangedEvent.getSelectedRows(),\n\t\t\t\trowChangedEvent.isAllSelected(),\n\t\t\t\trowChangedEvent.isAllUnselected()\n\t\t\t);\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, mode, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandInvoker,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { CompositionId } from '../../../composition/core/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationService,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.create();\n\t\tcompositionCommandDispatcher.create();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { StructureCommandInvoker } from '../../../../core/api/structure.command-invoker';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueValuesReadModel } from '../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'gui-column-config',\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [dropdownTextTranslation]=\"dropdownTextTranslation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<div gui-unique-value-list\n\t\t\t\t\t\t\t [fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<div gui-structure-menu-column-manager>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\tthis.config = config;\n\t\t\t\t\treturn this.translationService.onTranslation();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onGroups(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((collection: GroupCollection) => {\n\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchPhraseRepository } from '../../../search/core/api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../search/core/api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: './structure-content.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.reRender();\n\t\t });\n\n\t\tthis.schemaRowClassArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.schemaRowStyleArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tconst height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../common/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: './structure-row.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getData(), entity.getPosition());\n\t\t}\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity) {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getData(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getData());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getData());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity);\n\t\t\tconst lowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tconst positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: './structure.cell.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: './structure-container.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceWarehouse.onEntities(),\n\t\t\tthis.compositionWarehouse.onTemplateColumns()\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onScrollBarPosition()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: './structure.blueprint.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.on()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.filterWarehouse\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, { fieldId, filterTypeId, value }, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, position, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from './structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.key';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (const sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (const value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (const entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (const field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (const notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tconst map = new Map();\n\n\t\tfor (const field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from './structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SummariesManager } from '../../domain/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../summaries/core/api/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\nimport { StructureDomainCommandInvoker } from '../../../core/domain/structure.domain-command-invoker';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\t{\n\t\tprovide: StructureCommandInvoker,\n\t\tuseClass: StructureDomainCommandInvoker\n\t}\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(source: any): ItemEntity;\n\tcreate(source: Array<any>): Array<ItemEntity>;\n\tcreate(source: any): any {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createEntities(source);\n\t\t} else {\n\t\t\treturn this.createEntity(source);\n\t\t}\n\t}\n\n\tcreateEntities(source: Array<any>): Array<ItemEntity> {\n\t\treturn source.map((source: any) => this.createEntity(source));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandInvoker } from '../../../../core/api/structure.command-invoker';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../../../core/domain/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"dropdownTextTranslation\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortAscending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortDescending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\t{{'headerMenuMainTabColumnSortNone' | guiTranslate}}\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\t{{'headerMenuMainTabHideColumn' | guiTranslate}}\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\t{{'headerMenuMainTabMoveLeft' | guiTranslate}}\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\t{{'headerMenuMainTabMoveRight' | guiTranslate}}\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-arrow-icon',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class StructureSummariesEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): Observable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureSummariesEventRepository } from '../../../../summaries/core/api/structure-summaries.event-repository';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../../summaries/core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from './structure.summaries-translations';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.countTooltip\">{{'summariesCount' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.distinctTooltip\">{{'summariesDist' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\t{{'summariesSum' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.averageTooltip\">{{'summariesAvg' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.minTooltip\">\n\t\t\t\t\t\t\t{{'summariesMin' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.maxTooltip\">\n\t\t\t\t\t\t\t{{'summariesMax' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.medTooltip\">{{'summariesMed' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesTruthy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesFalsy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSummariesUiEventsRepository: StructureSummariesEventRepository,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.getBannerPanelConfig()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = title.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getBannerPanelConfig(): Observable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { Observable } from 'rxjs';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-title-panel gui-p-6 gui-border-b gui-border-b-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-footer-panel gui-p-6 gui-border-t gui-border-t-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: './empty-source.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandInvoker) {\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureThemeGateway>): void {\n\n\t\tif (changes.theme2 !== undefined && changes.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../domain/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tconst summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tconst aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from '../api/enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSummariesCommandDispatcher } from './structure-summaries.command-dispatcher';\nimport { StructureSummariesEventRepository } from './structure-summaries.event-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\nimport { StructureSummariesWarehouse } from './structure-summaries.warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\tStructureSummariesCommandDispatcher,\n\t\tStructureSummariesEventRepository,\n\n\t\tStructureSummariesRepository,\n\t\tStructureSummariesWarehouse\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionRepository } from './vertical-formation.scroll-bar-position.repository';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureVerticalFormationWarehouse } from './structure-vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\tStructureVerticalFormationWarehouse,\n\t\tVerticalFormationScrollBarPositionRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tconst staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => {\n\t\t\t\treturn columnWidth.isTypeAuto() ||\n\t\t\t\t\tcolumnWidth.isTypePercentage() ||\n\t\t\t\t\t(columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH);\n\t\t\t});\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, payload, 'CompositionContainerWidthSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tconst newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (const column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width;\n\t\tconst autoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tconst column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (const column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, activeColumns, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t// this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (const param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(source: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createColumns(source);\n\t\t} else {\n\t\t\treturn this.createColumn(source);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\tdataType = field.getDataType(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined;\n\n\t\tlet view: ViewEntity,\n\t\t\tenabled: boolean;\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tconst columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tconst columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract findById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublish(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header || '';\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../api/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from './composition.key';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { DomainEventBus } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionEventRepository } from '../api/composition.event-repository';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable()\nexport class CompositionDomainEventRepository extends CompositionEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from '../domain/composition.key';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport { inMemoryCompositionProviders, inMemoryCompositionReadModelProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\nimport { CompositionDomainCommandInvoker } from '../domain/compositon.domain-command-invoker';\nimport { CompositionDomainEventRepository } from '../domain/composition.domain-event-repository';\nimport { CompositionDomainWarehouse } from '../domain-read/composition.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupRepository,\n\n\t\t{\n\t\t\tprovide: CompositionCommandInvoker,\n\t\t\tuseClass: CompositionDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionWarehouse,\n\t\t\tuseClass: CompositionDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionEventRepository,\n\t\t\tuseClass: CompositionDomainEventRepository\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectedDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\n\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\nimport { StructureSummariesConfigService } from '../../panel/summaries/structure.summaries-config.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureSummariesConfigService: StructureSummariesConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/api/schema.read-model-root-id';\nimport { StreamCloser } from '../../../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from './summaries/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { StructureThemeGateway } from '../../feature/gate/schema/structure-theme.gateway';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../common/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway,\n\n\t...structureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule,\n\t...structureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GuiGridComponent } from '../../feature/grid/gui.grid.component';\n\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\n\nimport { GuiGridIdGenerator } from '../../feature/grid/register/gui.grid-id.generator';\nimport { GuiGridRegister } from '../../feature/grid/register/gui.grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiGridComponent\n];\n\nconst providers = [\n\tGuiGridIdGenerator,\n\tGuiGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}