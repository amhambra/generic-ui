{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/summaries/grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/paging/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/structure-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/structure-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/paging/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.global-id.ts","ng://@generic-ui/ngx-grid/lib/schema/read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/lib/schema/read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/source.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/structure-paging.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/search/structure-search.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/summaries/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/summaries/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/domain/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/domain/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/schema/read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/read/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnCellEditingConverter","config","GridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","summaries","sorting","cellEditing","matcher","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","isStopped","complete","takeUntil","SmartComponent","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","AggregateId","structureGlobalId","StructurePagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","StructurePagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","StructurePagingDisplayModeArchive","onValue","Archive","StructurePagingComponent","pagingReadModelService","pagingCommandService","sourceReadModelService","structurePagingDisplayModeArchive","alternativeDisplay","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","ReadModelObject","Boolean","Number","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","theme$","setTheme","schemaId","SchemaCssClassesRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","onSingleTheme","onCssClasses","StructureDialogColumnManagerService","injector","schemaReadModelRepository","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","Injector","parent","FabricDialogService","StructureInfoPanelComponent","renderer","dialog","schemaReadModelRootId","menuColumnManagerService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","Renderer2","CompositionReadModelRootRepository","ReadModelRootRepository","compositionGlobalId","CompositionWarehouse","compositionRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","fieldId","getFieldId","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","CreateCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelModule","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","AggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","aggregateId","save","aggregate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","columnView","templateFunction","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnField","presentation","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","columnFieldId","cellEditingEnabled","isBooleanDataType","getValue","entity","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","split","pos","ph","join","ColumnDefinition","sort","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","ReadModelRoot","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionCreatedEvent","DomainEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","payload","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getAggregateId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","has","ifPresent","DomainEventBus","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","data","isArray","createColumn","getColumn","convertWidth","columnEntity","RandomStringGenerator","generate","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","ColumnField","ColumnFieldFactory","CompositionEventRepository","onColumnsChanged","onContainerWidthChanged","getPayload","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","toDomainEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","createEvent","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","domainEventPublisher","getAggregateRepository","forCommand","publishDomainEvents","command","publish","DomainEventPublisher","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","handleAggregate","events","getEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","HermesModule","defineAggregate","registerCommandHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedEvent","PageChangedAggregateEvent","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingWarehouse","Observable","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","StructureFormationDispatcher","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","StructureFormationWarehouse","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetSortingCommand","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","LocalStructureCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","SelectedRowsList","rowIds","isRowSelected","equalsById","getIds","Formation","selectedRows","selectedRowsList","FormationConverter","rows","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ItemEntity","version","getData","getUiId","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","StructureSearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","StructureWarehouse","verticalFormationRepository","LocalStructureWarehouse","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandDispatcher","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandDispatcher","LocalSourceWarehouse","LocalCompositionCommandDispatcher","columnDefId","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setRowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","LocalSchemaCommandDispatcher","StructureVerticalFormationWarehouse","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","StructureGateway","pagingEventService","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","structureSearchEventService","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","simpleChanges","nextConfig","rowSelecting","editMode","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","StructurePagingEventRepository","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureReadModelService","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","close","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureWarehouse","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","parentElement","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","structureReadModelWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchWarehouse","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","StructureAggregateRepository","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","PagingSetEvent","FormationSetEvent","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","InitFieldsCommandHandler","fieldTypes","createFields","ToggleSortCommandHandler","structureAggregateRepository","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEventName","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSummariesEnabledSetEventName","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","of","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","isSummaries","isSummariesEnabled","assignDefaultSummaries","UnknownField","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","SUMMARIES_CALCULATORS","SummariesCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","allFields","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","summariesProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetEvent","getRowColoring","RowColoringSetAggregateEvent","SchemaVerticalGridSetEvent","getVerticalGrid","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","typeFields","setConfig","addSearchPhrase","removeSearchPhrase","removeSearchFilters","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","SearchManager","searchFields","enabledDataTypes","searchableFields","searchedItems","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","structureAggregate","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingCommandHandlers","pagingProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","verticalFormationWarehouse","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","publishFromAggregate","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","hgrid","vgrid","SchemaThemeSetEventHandler","themeRepository","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../lib/structure/domain/structure/summaries/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../grid.index';\n\n\nexport class GridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/column/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../ui-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnSummariesConverter } from './summaries/grid.column-summaries.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/schema/domain/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/schema/ui-api/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiSummaries,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../structure/structure.read-model-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../structure/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../read/structure/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../read/paging/paging.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { Paging } from '../../read/paging/paging';\n\n\n@Injectable()\nexport class StructurePagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagingConfig } from '../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { PagingConfig } from './paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class StructurePagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../read/source/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../read/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../read/paging/paging';\nimport { StructurePagingWarehouse } from '../../ui-api/paging/structure-paging.warehouse';\nimport { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../ui-api/source/structure-source.warehouse';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate pagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../read/paging/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../read/paging/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../read/paging/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../read/paging/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../ui-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../read/paging/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../ui-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.11.0\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaTheme } from '../../domain/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaTheme>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaTheme>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaTheme> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaTheme>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaCssClass } from '../schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './schema.global-id';\nimport { SchemaTheme } from '../domain/schema-theme';\nimport { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\nimport { SchemaCssClass } from '../read/schema-css-class';\nimport { SchemaThemeRepository } from '../read/theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from '../read/css-classes/schema.css-classes.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/ui-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../ui-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from '../read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from '../read/composition.read-mode-root';\nimport { CellTemplateWithContext } from '../read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from '../read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/ui-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\treturn this.templateFun(this.findValue(entity, searchPhrase));\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent<CompositionId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from '../read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from '../read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from '../read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from '../read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from '../read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../read/view/percentage/percentage-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from './paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructurePagingCommandDispatcher } from '../../../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../domain/paging/paging.manager-factory';\nimport { PagingDispatcher } from '../../../domain/paging/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends StructurePagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { StructurePagingWarehouse } from '../../../ui-api/paging/structure-paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../read/paging/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../read/paging/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends StructurePagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../ui-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../structure/structure.read-model-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../structure/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../read/formation/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from '../../read/formation/selected-rows/selected-rows-list';\nimport { Formation } from '../../read/formation/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../ui-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../read/formation/formation-repository';\nimport { SelectedRowsList } from '../../../read/formation/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../ui-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../ui-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../ui-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../ui-api/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../ui-api/structure.global-id';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { structureGlobalId } from '../../../../ui-api/structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../ui-api/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../ui-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../read/structure/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../schema/domain/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../schema/domain/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../ui-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../ui-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/sorting-config';\nimport { structureGlobalId } from '../../../ui-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/formation';\nimport { Paging } from '../paging/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../read/structure/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../read/structure/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../read/structure/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../infrastructure/in-memory/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../read/structure/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure/structure.read-model-root';\nimport { VerticalFormationRepository } from '../read/structure/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../ui-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../read/structure/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../read/structure/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../read/structure/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../ui-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../ui-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../ui-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../read/structure/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../read/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../read/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/ui-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/ui-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/ui-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../ui-api/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../read/structure/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { SchemaWarehouse } from '../../../../schema/ui-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../schema/read/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../schema/read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../schema/read/theme/schema.theme.repository';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/schema-theme';\nimport { schemaGlobalId } from './schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/schema-row-coloring';\nimport { StructureId } from '../../structure/domain/structure.id';\nimport { structureGlobalId } from '../../structure/ui-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../structure/ui-api/structure.command-dispatcher';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setRowColoring(rowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../schema/ui-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../schema/domain/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../ui-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: SchemaRowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from '../../read/structure/vertical-formation/vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../ui-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../read/structure/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../ui-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../ui-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../ui-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../ui-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../ui-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../ui-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/ui-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { StructurePagingWarehouse } from '../../ui-api/paging/structure-paging.warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../schema/ui-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../schema/ui-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../ui-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\n\nexport const localProviders = [\n\t{ provide: StructurePagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: StructurePagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../schema/read/schema-css-class';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../schema/ui-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../schema/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../ui-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../ui-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../ui-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/sorting-config';\nimport { FilterConfig } from '../../ui-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/search/search-config';\nimport { SummariesConfig } from '../../ui-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../ui-api/structure.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../../ui-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../../ui-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/ui-api/composition.event-repository';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../ui-api/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../schema/ui-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected pagingCommandService: StructurePagingCommandDispatcher,\n\t\tprotected pagingEventService: StructurePagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { NextPageEvent } from '../../domain/paging/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/page/page-changed.event';\nimport { Paging } from '../../read/paging/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class StructurePagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureReadModelService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from '../../read/structure/searching/phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../read/structure/structure.read-model-root';\nimport { StructurePagingCommandDispatcher } from '../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../ui-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../ui-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/ui-api/composition.event-repository';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../ui-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../ui-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/ui-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../ui-api/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../schema/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../schema/ui-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tpagingEventService: StructurePagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive\n\t\t);\n\n\t\tthis.structureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../ui-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/ui-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/ui-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../ui-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../read/structure/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../read/structure/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../ui-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../ui-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/ui-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../ui-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../ui-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../ui-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../ui-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../ui-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../read/formation/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../read/structure/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../ui-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../read/structure/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../ui-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../ui-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tconst parentElement = this.elementRef.nativeElement.querySelector('.gui-cell-edit-mode');\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: parentElement\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../ui-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../ui-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../ui-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/ui-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../ui-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../ui-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntities()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { Reactive } from '../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../read/structure/searching/enabled/structure.searching.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchWarehouse {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { Paging } from '../../read/paging/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../ui-api/structure.warehouse';\nimport { StructurePagingWarehouse } from '../../ui-api/paging/structure-paging.warehouse';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../ui-api/filter/structure-filter.warehouse';\nimport { StructureSearchWarehouse } from '../../ui-api/search/structure-search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../read/structure/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../read/structure/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../domain/paging/set/paging-set.event';\nimport { PrevPageEvent } from '../../../domain/paging/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../domain/paging/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../domain/paging/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../read/structure/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 1;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = viewportPositionIndex + itemsInViewport;\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../../summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../ui-api/filter/filter-config';\nimport { SearchConfig } from '../../../ui-api/search/search-config';\nimport { QuickFiltersConfig } from '../../../ui-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../../domain/structure/search/config/structure.config-searching-set.event';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/structure/field/init/fields-inited.event';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event instanceof StructureSummariesChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\tthrow new Error('COMPOSITION ID IS MISSING');\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tnull,\n\t\t\tthis.columns,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../paging/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../paging/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../ui-api/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../ui-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SchemaAggregate } from '../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../ui-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../paging/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../read/paging/paging.repository';\nimport { PagingManagerFactory } from '../../domain/paging/paging.manager-factory';\nimport { PagingConverter } from '../../read/paging/paging.converter';\nimport { StructurePagingCommandDispatcher } from './structure-paging.command-dispatcher';\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructurePagingEventRepository } from './structure-paging.event-repository';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingManagerFactory,\n\tPagingConverter,\n\n\tStructurePagingCommandDispatcher,\n\tStructurePagingWarehouse,\n\tStructurePagingEventRepository\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../read/formation/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from '../../read/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../read/source/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../read/source/source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from '../../read/source/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../read/source/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../read/source/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from '../../read/structure/summaries/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../read/structure/summaries/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tconst structureId = event.getAggregateId();\n\n\t\tif (event instanceof StructureCreatedEvent) {\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event instanceof StructureSummariesEnabledSetEvent) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../domain/structure/field/data-type/field.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from '../read/structure/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../read/structure/searching/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../read/structure/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../read/structure/vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from '../read/structure/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../read/structure/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../read/structure/searching/enabled/structure.searching.repository';\nimport { StructureSearchWarehouse } from './search/structure-search.warehouse';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from '../read/structure/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { pagingProviders } from './paging/paging.providers';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../read/structure/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from '../read/structure/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from '../read/structure/searching/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from '../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../read/structure/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from '../read/structure/summaries/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from '../read/structure/summaries/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureCreatedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSummariesEnabledSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchWarehouse,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...pagingProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../ui-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../../../ui-api/structure.warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../read/structure/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../read/structure/searching/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../../ui-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\" \n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../ui-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../ui-api/structure.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../../../composition/ui-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/ui-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/ui-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../ui-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/ui-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../ui-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../ui-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\t//\n\t// getAggregateRepository(): AggregateRepository<SchemaId, SchemaAggregate> {\n\t// \treturn this.schemaAggregateRepository;\n\t// }\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../domain/schema.id';\nimport { SchemaAggregate } from '../../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from '../in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../../domain/schema.aggregate';\nimport { SchemaId } from '../../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../domain/schema-theme';\nimport { SchemaRowColoring } from '../domain/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesEventHandler extends DomainEventHandler<SchemaId> {\n\n\tcoloring: any;\n\n\thgrid: any;\n\n\tvgrid: any;\n\n\ttheme: any;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent | RowColoringSetEvent | SchemaHorizontalGridSetEvent | SchemaVerticalGridSetEvent): void {\n\n\t\tif (event instanceof RowColoringSetEvent) {\n\t\t\tthis.coloring = event.getRowColoring();\n\t\t}\n\n\t\tif (event instanceof SchemaHorizontalGridSetEvent) {\n\t\t\tthis.hgrid = event.getHorizontalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaVerticalGridSetEvent) {\n\t\t\tthis.vgrid = event.getVerticalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.theme = event.getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.coloring !== undefined && this.hgrid !== undefined && this.vgrid !== undefined && this.theme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setTheme(new SchemaCssClass(this.vgrid, this.hgrid, this.theme, this.coloring), aggregateId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler extends DomainEventHandler<SchemaId> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.themeRepository.setTheme(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/domain/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../read/css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from '../read/theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from '../read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../read/theme/schema.theme.repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaCssClassesEventHandler,\n\t\t\tmulti: true\n\t\t}, {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaThemeSetEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../ui-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../ui/structure-fabric.imports';\nimport { StructurePagingModule } from '../ui/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../ui/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from '../ui/structure.component';\nimport { StructureHeaderComponent } from '../ui/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../ui/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../ui/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../ui/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../ui/content/structure-content.component';\nimport { StructureRowComponent } from '../ui/content/row/structure-row.component';\nimport { StructureCellComponent } from '../ui/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../ui/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../ui/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../ui/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../ui/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../ui/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../ui/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../ui/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../ui/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../ui/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../ui/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../ui/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../ui/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../ui/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../ui/schema/structure.theme.converter';\nimport { SchemaModule } from '../../schema/ui-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../ui/content/cell/boolean/structure.cell-edit-boolean.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui-api/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}