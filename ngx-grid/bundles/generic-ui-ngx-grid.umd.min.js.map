{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/aggregation/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/search/local-structure-search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnCellEditingConverter","config","GridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","sorting","cellEditing","matcher","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","isStopped","complete","takeUntil","SmartComponent","StructureRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureId","id","AggregateId","globalStructureId","PagingReadModelService","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandService","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","SourceReadModelService","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","Archive","archive$","BehaviorSubject","onValue","StructurePagingDisplayModeArchive","StructurePagingComponent","pagingQueryService","pagingCommandService","sourceQueryService","structurePagingDisplayModeArchive","alternativeDisplay","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","StructureCreatedEvent","aggregateId","DomainEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","find","equalsById","getIds","Formation","selectedRows","selectedRowsList","getSelectedRows","FormationConverter","aggregate","rows","SchemaCssClass","verticalGrid","horizontalGrid","getRowColoring","Schema","height","containerHeight","verticalGridEnabled","horizontalGridEnabled","columnHeader","getTheme","getHeight","getContainerHeight","getWidth","isVerticalGridEnabled","isHorizontalGridEnabled","getColumnHeader","getCssClasses","SchemaColumnHeader","top","bottom","isTopHeaderEnabled","isBottomHeaderEnabled","SchemaConverter","convertColumnHeader","isHeaderOnTop","isHeaderOnBottom","PagingConverter","calculateStart","calculateEnd","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","viewportHeight","rowHeight","getTopMargin","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","calcFullHeight","Structure","uid","formation","schema","getFormation","getSchema","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModel","ItemEntity","data","position","version","RandomStringGenerator","generate","getData","getUiId","getVersion","getPosition","isEven","isOdd","Entity","StructureConverter","formationConverter","schemaConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","schemaAggregate","pagingAggregate","sourceQuery","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","VerticalFormationRepository","inMemoryStructureQueryStore","verticalFormation$","getAggregateId","getById","ifPresent","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","idToVerticalFormation","has","DomainEventBus","StructureReadModelService","verticalFormationRepository","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureDialogColumnManagerService","injector","fabricDialogService","open","compositionId","Injector","parent","FabricDialogService","StructureInfoPanelComponent","renderer","dialog","menuColumnManagerService","structureReadModelService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","setStyle","openInfo","openColumnManager","Renderer2","StructureInfoPanelModule","entryComponents","ViewTemplatesComponent","getTemplate","textTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","numberTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","AggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","save","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","columnView","templateFunction","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnId","columnField","getDataType","setInitialAlign","getColumnConfig","getColumnId","getField","getHeader","setView","setHeader","getView","getAlign","setWidth","getSortingEnabled","isCellEditingEnabled","ColumnEntity","sortOrder","SortOrder","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","fieldId","sortStatus","sortable","getFieldId","getSortStatus","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","columnFieldId","cellEditingEnabled","isBooleanDataType","getValue","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","split","pos","ph","join","ColumnDefinition","sort","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","column","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","Composition","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isReady","isResizeWidthEnabled","composition","equalsByColumns","CompositionConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionRepository","ReadModelRepository","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","payload","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getCompositionId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionQueryStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionQueryProviders","inMemoryCompositionProviders","CreateCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getSortParams","CompositionSetColumnEnabledCommand","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","params","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","ColumnEntityFactory","isArray","createColumn","getColumn","columnEntity","convertWidth","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","ColumnField","ColumnFieldFactory","CompositionEventService","onColumnsChanged","onContainerWidthChanged","getPayload","globalCompositionId","CompositionReadModelService","compositionRepository","onWidth","onContainerWidth","onWidthForEachColumn","onHeaderColumns","onAllColumns","onSortOrder","onTemplateColumns","onResizeWidth","CompositionCommandService","compositionDispatcher","enableColumn","disableColumn","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","Number","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionAggregate","columnsParams","resizeWidthEnabled","columnFactory","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","RootAggregate","Boolean","Aggregate","CompositionAggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","domainEventPublisher","publishDomainEvents","command","publish","getAggregateRepository","forCommand","DomainEventPublisher","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","handleAggregate","publishEvents","events","getEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","HermesModule","defineAggregate","registerCommandHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingAggregate","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","ps","setPage","setPageSize","firstItem","lastItem","PagingAggregateFactory","createDefault","createFromConfig","Logger","LocalPagingCommandService","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelService","Observable","SetSchemaCommand","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SetSchemaThemeCommand","SetRowColoringCommand","coloring","getColoring","ChangeSchemaTopHeaderCommand","ChangeSchemaBottomHeaderCommand","SchemaDispatcher","setSchema","changeVerticalGrid","changeHorizontalGrid","setTheme","setRowColoring","changeTopHeader","changeBottomHeader","SchemaRepository","SchemaReadModelService","schemaRepository","onSchema","onSingleSchema","onHeight","onContainerHeight","onCssClasses","onColumnHeader","SchemaCommandService","schemaDispatcher","schemaQueryService","setHeight","toggleVerticalGrid","css","grid","toggleHorizontalGrid","toggleTopHeader","toggleBottomHeader","LocalSchemaCommandService","setDefaultSchema","MAX_SAFE_INTEGER","LocalSchemaReadModelService","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandService","FormationRepository","onFormation","FormationReadModelService","formationRepository","onSelectedRows","LocalFormationReadModelService","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","StructureFilterCommandService","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","SetSortingCommand","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","SetSortOrderCommand","getSortOrder","SetRowHeightCommand","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureCommandService","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","LocalStructureCommandService","LocalStructureReadModelService","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandService","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandService","LocalSourceReadModelService","LocalCompositionCommandService","LocalCompositionReadModelService","LocalStructureSearchDispatcher","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureAggregationPanelConfig","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandService","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","structureCommandService","pagingEventService","sourceCommandService","sourceEventService","schemaCommandService","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureAggregationConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","structureSearchEventService","simpleChanges","nextConfig","rowSelecting","editMode","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureQueryService","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseSetDomainEvent","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","structureIdFactory","generator","compositionIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","compositionQueryService","schemaReadModelService","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureHeight","offsetWidth","timer","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","compositionReadModelService","StructureColumnConfigService","inlineDialogService","InlineDialogPlacement","Top","close","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelRepository","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationQueryService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","enterEditMode","exitEditMode","cell","forceCheck","valueChanges$","status$","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combine","sourceSizeHeight","observe","recalculateContainer","enableScrollObservation","disableScrollObservation","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","StructureAggregateRepository","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","SchemaSetEvent","SchemaThemeSetEvent","SchemaHorizontalGridSetEvent","SchemaVerticalGridSetEvent","SchemaTopHeaderChangedEvent","SchemaBottomHeaderChangedEvent","RowColoringSetEvent","PagingSetEvent","FormationSetEvent","ScrollPositionSetEvent","OriginSetEvent","getOrigin","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","SetScrollPositionCommandHandler","InitFieldsCommandHandler","createFields","ToggleSortCommandHandler","structureAggregateRepository","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureAggregationsChangedEvent","getAggregations","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","itemsInViewport","floor","hiddenElements","abs","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","Field","matchers","aggregationEnabled","accessorMethod","possibleAggregations","assignPossibleAggregations","assignAggregations","getKey","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","isAggregation","isAggregationEnabled","aggregations","assignDefaultAggregations","UnknownField","NumberField","StringField","BooleanField","DateField","FieldMatchers","sortMatcher","searchMatcher","getMatcher","of","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","filterString","filterNumber","filterBoolean","toLowerCase","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","AGGREGATION_CALCULATORS","AggregationCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","StructureAggregationsChangedAggregateEvent","AggregationManager","calculators","calculations","calc","remove","update","AggregationManagerFactory","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureAggregationUiEventsRepository","onAggregationsChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","entityOne","entityTwo","valueOne","valueTwo","sortNumber","sortBoolean","sortString","sortDate","sortUnknown","strOne","strTwo","localeCompare","numOne","numTwo","booleanOne","booleanTwo","sureBoolTwo","dateOne","dateTwo","a","SorterId","SorterCollection","setConfig","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","ColumnHeaderEntity","setHeaderTop","setHeaderBottom","SchemaAggregate","pagerHeight","active","calculateContainerHeight","setVerticalGrid","setHorizontalGrid","getHeaderHeight","getPagerHeight","SearchManager","searchFields","addSearchPhrase","searchableFields","removeSearchFilters","searchedItems","e_1","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","searchManager","fieldCollection","filterManager","calculateSource","editParams","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","removeSearchPhrase","searchedEntities","ents","ae","SchemaAggregateFactory","FormationAggregateFactory","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","schemaAggregateFactory","sorterContainer","filterContainer","fieldContainer","AggregateFactory","SetPagingCommandHandler","structureAggregate","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingCommandHandlers","pagingProviders","SetSchemaVerticalGridCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaThemeCommandHandler","ChangeSchemaBottomHeaderCommandHandler","ChangeSchemaTopHeaderCommandHandler","SetRowColoringCommandHandler","SetSchemaCommandHandler","schemaCommandHandlers","schemaProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceRepository","select","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","placement","Placement","Right","isNoneSort","stopPropagation","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerModule","StructureColumnMenuModule","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","sourceReadModelService","sourceEmpty","isAggregateTypePresent","StructureAggregationPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","submitChanges","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAazB,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2H5B,EAAvH6B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAO1B,OAAO6B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASlB,EAAIyB,EAAWP,MAAIY,GAAKD,EAAI,EAAI7B,EAAE8B,GAAKD,EAAI,EAAI7B,EAAE0B,EAAQC,EAAKG,GAAK9B,EAAE0B,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK5B,OAAOgC,eAAeR,EAAQC,EAAKG,GAAIA,EAOzD,SAASK,EAAWC,EAAaC,GACpC,GAAuB,iBAAZL,SAAoD,mBAArBA,QAAQM,SAAyB,OAAON,QAAQM,SAASF,EAAaC,GA4C7G,SAASE,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWzB,EAAI,EAChE,OAAIuB,EAAUA,EAAEnB,KAAKkB,GACd,CACHI,KAAM,WAEF,OADIJ,GAAKtB,GAAKsB,EAAEnB,SAAQmB,OAAI,GACrB,CAAEK,MAAOL,GAAKA,EAAEtB,KAAM4B,MAAON,KAKzC,SAASO,EAAOP,EAAGrB,GACtB,IAAIsB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBV,EAAYkB,EAA3B9B,EAAIuB,EAAEnB,KAAKkB,GAAOS,EAAK,GAC3B,IACI,WAAc,IAAN9B,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE0B,QAAQE,MAAMG,EAAGC,KAAKpB,EAAEe,OAExE,MAAOM,GAASH,EAAI,CAAEG,MAAOA,GACjC,QACQ,IACQrB,IAAMA,EAAEgB,OAASL,EAAIvB,EAAU,SAAIuB,EAAEnB,KAAKJ,GAE1D,QAAkB,GAAI8B,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGJ,SAASG,IACZ,IAAK,IAAIH,EAAK,GAAI/B,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3C+B,EAAKA,EAAGI,OAAON,EAAO3B,UAAUF,KACpC,OAAO+B,SC1GVK,QAAA,EACAC,OAAA,EACAC,OAAA,EACAC,QAAA,EACAC,KAAA,EACAC,OAAA,wIAIAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,SAAA,EACAP,OAAA,EACAQ,IAAA,EACAC,eAAA,EACAC,WAAA,sPAIAT,KAAA,EACAI,KAAA,EACAC,OAAA,EACAJ,KAAA,kFAIAD,KAAA,EACAI,KAAA,EACAC,OAAA,EACAJ,KAAA,kFAIAD,KAAA,EACAI,KAAA,EACAC,OAAA,EACAJ,KAAA,EACAK,SAAA,2GAIAN,KAAA,EACAI,KAAA,EACAC,OAAA,EACAJ,KAAA,kFAsBAS,OAAA,EACAC,SAAA,EACAC,MAAA,EACAC,KAAA,4FAIAC,KAAA,EACAC,KAAA,EACAC,IAAA,2DAIAF,KAAA,EACAG,IAAA,EACAC,KAAA,2DAmFAC,MAAA,EACAC,SAAA,sDAIAC,MAAA,EACAC,OAAA,EACAC,KAAA,mEC7MA7B,QAAA,EACAC,OAAA,EACAC,OAAA,EACAC,QAAA,EACAC,KAAA,EACAC,OAAA,iICND,IAAAyB,EAAA,WAGA,SAAAA,KAkEA,OAhECA,EAAAxE,UAAAyE,YAAA,SAAYC,GAEX,MAAoB,iBAATA,EACH5E,KAAK6E,kBAAkBD,GAEvB5E,KAAK8E,gBAAgBF,IAItBF,EAAAxE,UAAA4E,gBAAR,SAAwBC,GAEvB,OAAQA,GAEP,KAAKC,EAAYlC,OAChB,OAAOmC,EAASnC,OAEjB,KAAKkC,EAAYnC,OAChB,OAAOoC,EAASpC,OAEjB,KAAKmC,EAAYjC,QAChB,OAAOkC,EAASlC,QAEjB,KAAKiC,EAAYhC,KAChB,OAAOiC,EAASjC,KAEjB,KAAKgC,EAAYpC,QAChB,OAAOqC,EAASrC,QAEjB,KAAKoC,EAAY/B,OAChB,OAAOgC,EAAShC,OAEjB,QACC,OAAOgC,EAASnC,SAIX4B,EAAAxE,UAAA2E,kBAAR,SAA0BD,GAGzB,OAFoBA,EAAKM,qBAIxB,IAAK,SACJ,OAAOD,EAASnC,OAEjB,IAAK,SACJ,OAAOmC,EAASpC,OAEjB,IAAK,UACJ,OAAOoC,EAASlC,QAEjB,IAAK,OACJ,OAAOkC,EAASjC,KAEjB,IAAK,UACJ,OAAOiC,EAASrC,QAEjB,IAAK,SACJ,OAAOqC,EAAShC,OAEjB,QACC,OAAOgC,EAASnC,SAIpB4B,EArEA,MCCCS,MAAA,KACAC,SAAA,EACAC,IAAA,EACAC,QAAA,EACAC,IAAA,EACAC,IAAA,GACAC,OAAA,GACAC,OAAA,GACAC,MAAA,IACAC,SAAA,IACAC,OAAA,gOCVD,IAAAC,EAAA,WAKA,SAAAA,KA6EA,OA3ECA,EAAA5F,UAAA6F,QAAA,SAAQC,OACHC,EAAmD,GAUvD,YARkCC,IAA9BF,EAAkBG,SAAuD,OAA9BH,EAAkBG,UAChEF,EAAwBE,QAAUH,EAAkBG,cAGVD,IAAvCF,EAAkBI,kBAAyE,OAAvCJ,EAAkBI,mBACzEH,EAAwBG,iBAAmBpG,KAAKqG,wBAAwBL,EAAkBI,mBAGpFH,GAGAH,EAAA5F,UAAAmG,wBAAR,SAAgCC,GAAhC,IAAAC,EAAAvG,KAEOoG,EAA2C,GAWjD,OATAE,EAAuBE,SAAO,SAAE5B,OAEzB6B,EAAkBF,EAAKG,uBAAuB9B,GAEhD6B,MAAAA,GACHL,EAAiB5D,KAAKiE,MAIjBL,GAGAN,EAAA5F,UAAAwG,uBAAR,SAA+B9B,GAI9B,OAF+BA,EAAKM,qBAInC,IAAK,QACJ,OAAOyB,EAAgBxB,MAExB,IAAK,WACJ,OAAOwB,EAAgBvB,SAExB,IAAK,MACJ,OAAOuB,EAAgBtB,IAExB,IAAK,UACJ,OAAOsB,EAAgBrB,QAExB,IAAK,MACJ,OAAOqB,EAAgBpB,IAExB,IAAK,MACJ,OAAOoB,EAAgBnB,IAExB,IAAK,SACJ,OAAOmB,EAAgBlB,OAExB,IAAK,SACJ,OAAOkB,EAAgBjB,OAExB,IAAK,QACJ,OAAOiB,EAAgBhB,MAExB,IAAK,WACJ,OAAOgB,EAAgBf,SAExB,IAAK,SACJ,OAAOe,EAAgBd,OAExB,QACC,OAAO,OAKXC,EAlFA,MCAC5C,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,SAAA,EACAP,OAAA,EACA2D,SAAA,EACA5D,KAAA,EACAS,IAAA,GACAC,eAAA,GACAC,WAAA,yRCbD,IAAAkD,EAAA,WAGA,SAAAA,KAmGA,OAjGCA,EAAA3G,UAAA6F,QAAA,SAAQe,GAEP,MAAoB,iBAATA,EACH9G,KAAK+G,cAAcD,GACA,mBAATA,EACVA,EAEA9G,KAAKgH,YAAYF,IAIlBD,EAAA3G,UAAA6G,cAAR,SAAsBD,GAIrB,OAFoBA,EAAK5B,qBAIxB,IAAK,OACJ,OAAO+B,EAAS/D,KAEjB,IAAK,OACJ,OAAO+D,EAAS9D,KAEjB,IAAK,OACJ,OAAO8D,EAAS7D,KAEjB,IAAK,QACJ,OAAO6D,EAAS5D,MAEjB,IAAK,OACJ,OAAO4D,EAAS3D,KAEjB,IAAK,SACJ,OAAO2D,EAAS1D,OAEjB,IAAK,WACJ,OAAO0D,EAASzD,SAEjB,IAAK,SACJ,OAAOyD,EAAShE,OAEjB,IAAK,MACJ,OAAOgE,EAASxD,IAEjB,IAAK,iBACJ,OAAOwD,EAASvD,eAEjB,IAAK,aACJ,OAAOuD,EAAStD,WAEjB,QACC,OAAOsD,EAAS/D,OAIX2D,EAAA3G,UAAA8G,YAAR,SAAoBF,GAEnB,OAAQA,GAEP,KAAKI,EAAYhE,KAChB,OAAO+D,EAAS/D,KAEjB,KAAKgE,EAAY/D,KAChB,OAAO8D,EAAS9D,KAEjB,KAAK+D,EAAY9D,KAChB,OAAO6D,EAAS7D,KAEjB,KAAK8D,EAAY7D,MAChB,OAAO4D,EAAS5D,MAEjB,KAAK6D,EAAY5D,KAChB,OAAO2D,EAAS3D,KAEjB,KAAK4D,EAAY3D,OAChB,OAAO0D,EAAS1D,OAEjB,KAAK2D,EAAY1D,SAChB,OAAOyD,EAASzD,SAEjB,KAAK0D,EAAYjE,OAChB,OAAOgE,EAAShE,OAEjB,KAAKiE,EAAYzD,IAChB,OAAOwD,EAASxD,IAEjB,KAAKyD,EAAYxD,eAChB,OAAOuD,EAASvD,eAEjB,KAAKwD,EAAYvD,WAChB,OAAOsD,EAAStD,WAEjB,QACC,OAAOsD,EAAS/D,OAIpB2D,EAtGA,GCIAM,EAAA,WAAA,SAAAA,KAOA,OALCA,EAAAjH,UAAA6F,QAAA,SAAQqB,GAEP,OAAA,GAGFD,EAPA,GCCAE,EAAA,WAAA,SAAAA,KAOA,OALCA,EAAAnH,UAAA6F,QAAA,SAAQuB,GAEP,OAAA,GAGFD,EAPA,MCJC9C,MAAA,EACAC,OAAA,EACAC,KAAA,4DCHD,IAAA8C,EAAA,WAGA,SAAAA,KA+CA,OA7CCA,EAAArH,UAAA6F,QAAA,SAAQyB,GAEP,MAAqB,iBAAVA,EACHxH,KAAK6E,kBAAkB2C,GAEvBxH,KAAK8E,gBAAgB0C,IAItBD,EAAArH,UAAA4E,gBAAR,SAAwB0C,GAEvB,OAAQA,GAEP,KAAKC,EAAelD,MACnB,OAAOmD,EAAYnD,MAEpB,KAAKkD,EAAejD,OACnB,OAAOkD,EAAYlD,OAEpB,KAAKiD,EAAehD,KAGpB,QACC,OAAOiD,EAAYjD,OAId8C,EAAArH,UAAA2E,kBAAR,SAA0B2C,GAGzB,OAFoBA,EAAMtC,qBAIzB,IAAK,QACJ,OAAOwC,EAAYnD,MAEpB,IAAK,SACJ,OAAOmD,EAAYlD,OAEpB,IAAK,OAGL,QACC,OAAOkD,EAAYjD,OAGvB8C,EAlDA,GCGAI,EAAA,WAQA,SAAAA,IAEkB3H,KAAA4H,oBAAsB,IAAIlD,EAE1B1E,KAAA6H,2BAA6B,IAAI/B,EAEjC9F,KAAA8H,oBAAsB,IAAIjB,EAE1B7G,KAAA+H,uBAAyB,IAAIZ,EAE7BnH,KAAAgI,2BAA6B,IAAIX,EAEjCrH,KAAAiI,qBAAuB,IAAIV,EAwD7C,OAtDCI,EAAAzH,UAAA6F,QAAA,SAAQuB,GAAR,IAAAf,EAAAvG,KACC,OAAOsH,EAAOY,KAAG,SAAE/G,GAAM,OAAAoF,EAAK4B,cAAchH,OAGrCwG,EAAAzH,UAAAiI,cAAR,SAAsBC,OACjBC,EAA6B,GA8CjC,YA5CuBnC,IAAnBkC,EAAUxD,MAAyC,OAAnBwD,EAAUxD,OAC7CyD,EAAazD,KAAO5E,KAAK4H,oBAAoBjD,YAAYyD,EAAUxD,YAG3CsB,IAArBkC,EAAUE,QAA6C,OAArBF,EAAUE,SAC/CD,EAAaC,OAASF,EAAUE,aAGPpC,IAAtBkC,EAAUjC,SAA+C,OAAtBiC,EAAUjC,UAChDkC,EAAalC,QAAUiC,EAAUjC,cAGVD,IAApBkC,EAAUG,OAA2C,OAApBH,EAAUG,QAC9CF,EAAaE,MAAQH,EAAUG,YAGRrC,IAApBkC,EAAUI,OAA2C,OAApBJ,EAAUI,QAC9CH,EAAaG,MAAQJ,EAAUI,YAGRtC,IAApBkC,EAAUZ,OAA2C,OAApBY,EAAUZ,QAC9Ca,EAAab,MAAQxH,KAAKiI,qBAAqBlC,QAAQqC,EAAUZ,aAG3CtB,IAAnBkC,EAAUtB,MAAyC,OAAnBsB,EAAUtB,OAC7CuB,EAAavB,KAAO9G,KAAK8H,oBAAoB/B,QAAQqC,EAAUtB,YAGlCZ,IAA1BkC,EAAUK,aAAuD,OAA1BL,EAAUK,cACpDJ,EAAaI,YAAczI,KAAK6H,2BAA2B9B,QAAQqC,EAAUK,mBAGpDvC,IAAtBkC,EAAUM,SAA+C,OAAtBN,EAAUM,UAChDL,EAAaK,QAAU1I,KAAK+H,uBAAuBhC,QAAQqC,EAAUM,eAGxCxC,IAA1BkC,EAAUO,aAAuD,OAA1BP,EAAUO,cACpDN,EAAaM,YAAc3I,KAAKgI,2BAA2BjC,QAAQqC,EAAUO,mBAGpDzC,IAAtBkC,EAAUQ,SAA+C,OAAtBR,EAAUQ,UAChDP,EAAaO,QAAUR,EAAUQ,SAG3BP,GAGTV,EA5EA,UCFC/D,OAAA,EACAC,SAAA,EACAC,MAAA,EACAC,KAAA,qFCJD,IAAA8E,EAAA,WAIA,SAAAA,KA4DA,OA1DCA,EAAA3I,UAAA6F,QAAA,SAAQ+C,GAEP,MAAqB,iBAAVA,EACH9I,KAAK+G,cAAc+B,GAEnB9I,KAAKgH,YAAY8B,IAKlBD,EAAA3I,UAAA6G,cAAR,SAAsB+B,GAIrB,OAFqBA,EAAM5D,qBAI1B,IAAK,WACJ,OAAO6D,EAAYlF,SAEpB,IAAK,SACJ,OAAOkF,EAAYnF,OAEpB,IAAK,QACJ,OAAOmF,EAAYjF,MAEpB,IAAK,OACJ,OAAOiF,EAAYhF,KAEpB,QACC,OAAOgF,EAAYnF,SAMdiF,EAAA3I,UAAA8G,YAAR,SAAoB8B,GAEnB,OAAQA,GAEP,KAAKE,EAASnF,SACb,OAAOkF,EAAYlF,SAEpB,KAAKmF,EAASpF,OACb,OAAOmF,EAAYnF,OAEpB,KAAKoF,EAASlF,MACb,OAAOiF,EAAYjF,MAEpB,KAAKkF,EAASjF,KACb,OAAOgF,EAAYhF,KAEpB,QACC,OAAOgF,EAAYnF,SAMvBiF,EAhEA,MCCC7E,KAAA,EACAC,KAAA,EACAC,IAAA,oDCHD,IAAA+E,EAAA,WAIA,SAAAA,KAsDA,OApDCA,EAAA/I,UAAA6F,QAAA,SAAQmD,GAEP,MAA2B,iBAAhBA,EACHlJ,KAAK+G,cAAcmC,GAEnBlJ,KAAKgH,YAAYkC,IAKlBD,EAAA/I,UAAA6G,cAAR,SAAsBmC,GAIrB,OAF2BA,EAAYhE,qBAItC,IAAK,OACJ,OAAOiE,EAAYnF,KAEpB,IAAK,OACJ,OAAOmF,EAAYlF,KAEpB,IAAK,MACJ,OAAOkF,EAAYjF,IAEpB,QACC,OAAOiF,EAAYlF,OAMdgF,EAAA/I,UAAA8G,YAAR,SAAoBkC,GAEnB,OAAQA,GAEP,KAAKE,EAAepF,KACnB,OAAOmF,EAAYnF,KAEpB,KAAKoF,EAAenF,KACnB,OAAOkF,EAAYlF,KAEpB,KAAKmF,EAAelF,IACnB,OAAOiF,EAAYjF,IAEpB,QACC,OAAOiF,EAAYlF,OAMvBgF,EA1DA,GCAAI,EAAA,WAMA,SAAAA,KAMA,OAHCA,EAAAnJ,UAAA6F,QAAA,SAAQuB,GACP,OAAA,uBAJDgC,EAAAA,aAMDD,EAZA,MCCChF,MAAA,EACAC,SAAA,+CCFD,IAAAiF,EAAA,WAKA,SAAAA,KA8EA,OA5ECA,EAAArJ,UAAA6F,QAAA,SAAQyD,OAEHC,EAA6B,GA8BjC,YA5B0BvD,IAAtBsD,EAAUrD,SAA+C,OAAtBqD,EAAUrD,UAChDsD,EAAatD,QAAUqD,EAAUrD,cAGXD,IAAnBsD,EAAUE,MAAyC,OAAnBF,EAAUE,OAC7CD,EAAaC,KAAOF,EAAUE,WAGJxD,IAAvBsD,EAAUG,UAAiD,OAAvBH,EAAUG,WACjDF,EAAaE,SAAWH,EAAUG,eAGPzD,IAAxBsD,EAAUI,WAAmD,OAAxBJ,EAAUI,YAClDH,EAAaG,UAAYJ,EAAUI,gBAGT1D,IAAvBsD,EAAUK,UAAiD,OAAvBL,EAAUK,WACjDJ,EAAaI,SAAWL,EAAUK,eAGL3D,IAA1BsD,EAAUM,aAAuD,OAA1BN,EAAUM,cACpDL,EAAaK,YAAcN,EAAUM,kBAGZ5D,IAAtBsD,EAAUO,SAA+C,OAAtBP,EAAUO,UAChDN,EAAaO,YAAchK,KAAKiK,eAAeT,EAAUO,UAGnDN,GAGAF,EAAArJ,UAAA+J,eAAR,SAAuBC,GAEtB,MAA6B,iBAAlBA,EACHlK,KAAK+G,cAAcmD,GAEnBlK,KAAKgH,YAAYkD,IAIlBX,EAAArJ,UAAA6G,cAAR,SAAsBmD,GAIrB,OAFsBA,EAAchF,qBAInC,IAAK,QACJ,OAAOiF,EAAkB9F,MAE1B,IAAK,WACJ,OAAO8F,EAAkB7F,SAE1B,QACC,OAAO6F,EAAkB9F,QAIpBkF,EAAArJ,UAAA8G,YAAR,SAAoBkD,GAEnB,OAAQA,GAEP,KAAKE,EAAiB/F,MACrB,OAAO8F,EAAkB9F,MAE1B,KAAK+F,EAAiB9F,SACrB,OAAO6F,EAAkB7F,SAE1B,QACC,OAAO6F,EAAkB9F,QAI7BkF,EAnFA,GCwBAc,EAAA,WAqJC,SAAAA,IA7HArK,KAAAsK,OAAqB,GAGrBtK,KAAAuK,QAA4B,GAyE5BvK,KAAAwK,YAAoC,IAAIC,EAAAA,aAGxCzK,KAAA0K,gBAAwC,IAAID,EAAAA,aAG5CzK,KAAA2K,cAAmC,IAAIF,EAAAA,aAGvCzK,KAAA4K,eAAqC,IAAIH,EAAAA,aAGzCzK,KAAA6K,sBAA8C,IAAIJ,EAAAA,aAGlDzK,KAAA8K,aAA0D,IAAIL,EAAAA,aAG9DzK,KAAA+K,gBAAsC,IAAIN,EAAAA,aAG1CzK,KAAAgL,iBAAuC,IAAIP,EAAAA,aAG3CzK,KAAAiL,kBAAwC,IAAIR,EAAAA,aAG5CzK,KAAAkL,oBAA4C,IAAIT,EAAAA,aAY/BzK,KAAAmL,oBAA2C,IAAIxD,EAE/C3H,KAAAoL,mBAAyC,IAAIvC,EAE7C7I,KAAAqL,yBAAqD,IAAIpC,EAEzDjJ,KAAAsL,wBAAmD,IAAIjC,EAEvDrJ,KAAAuL,oBAA2C,IAAIhC,EAwEjE,OAnECc,EAAAnK,UAAAsL,YAAA,SAAYC,QAEavF,IAApBuF,EAAQlB,cAA0DrE,IAAjCuF,EAAQlB,QAAQmB,eACpD1L,KAAK2L,cAAgB3L,KAAKmL,oBAAoBpF,QAAQ/F,KAAKuK,eAGtCrE,IAAlBuF,EAAQ3C,YAAsD5C,IAA/BuF,EAAQ3C,MAAM4C,eAChD1L,KAAK4L,YAAc5L,KAAKoL,mBAAmBrF,QAAQ/F,KAAK8I,aAG7B5C,IAAxBuF,EAAQvC,kBAAkEhD,IAArCuF,EAAQvC,YAAYwC,eAC5D1L,KAAK6L,kBAAoB7L,KAAKqL,yBAAyBtF,QAAQ/F,KAAKkJ,mBAG1ChD,IAAvBuF,EAAQK,iBAAgE5F,IAApCuF,EAAQK,WAAWJ,eAC1D1L,KAAK+L,iBAAmB/L,KAAKsL,wBAAwBvF,QAAQ/F,KAAK8L,kBAI5C5F,IAAnBuF,EAAQO,aAAwD9F,IAAhCuF,EAAQO,OAAON,cAEvB,kBAAhB1L,KAAKgM,SACfhM,KAAKgM,OAAShM,KAAKuL,oBAAoBxF,QAAQ/F,KAAKgM,UAKvD3B,EAAAnK,UAAA+L,aAAA,SAAavC,GACZ1J,KAAKwK,YAAY0B,KAAKxC,IAGvBW,EAAAnK,UAAAiM,iBAAA,SAAiBxC,GAChB3J,KAAK0K,gBAAgBwB,KAAKvC,IAG3BU,EAAAnK,UAAAkM,aAAA,SAAaC,GACZrM,KAAK2K,cAAcuB,KAAKG,IAGzBhC,EAAAnK,UAAAoM,gBAAA,WACCtM,KAAK4K,eAAesB,QAGrB7B,EAAAnK,UAAAqM,uBAAA,SAAuBC,GACtBxM,KAAK6K,sBAAsBqB,KAAKM,IAGjCnC,EAAAnK,UAAAuM,aAAA,SAAatK,GACZnC,KAAK8K,aAAaoB,KAAK/J,IAGxBkI,EAAAnK,UAAAwM,gBAAA,WACC1M,KAAK+K,gBAAgBmB,QAGtB7B,EAAAnK,UAAAyM,iBAAA,WACC3M,KAAKiL,kBAAkBiB,QAGxB7B,EAAAnK,UAAA0M,iBAAA,WACC5M,KAAKgL,iBAAiBkB,QAGvB7B,EAAAnK,UAAA2M,eAAA,SAAe1K,GACdnC,KAAKkL,oBAAoBgB,KAAK/J,6CAnN9B2K,EAAAA,kCAGAA,EAAAA,yBAGAA,EAAAA,qBAGAA,EAAAA,yBAGAA,EAAAA,+BAGAA,EAAAA,sBAGAA,EAAAA,uBAGAA,EAAAA,sBAGAA,EAAAA,4BAGAA,EAAAA,8BAGAA,EAAAA,qBAGAA,EAAAA,2BAGAA,EAAAA,4BAGAA,EAAAA,uBAGAA,EAAAA,6BAGAA,EAAAA,uBAGAA,EAAAA,yBAGAA,EAAAA,yBAMAA,EAAAA,4BAMAA,EAAAA,wBAMAA,EAAAA,2BAMAA,EAAAA,yBAGAA,EAAAA,2BAMAA,EAAAA,0BAGAA,EAAAA,2BAOAC,EAAAA,gCAGAA,EAAAA,8BAGAA,EAAAA,+BAGAA,EAAAA,sCAGAA,EAAAA,6BAGAA,EAAAA,gCAGAA,EAAAA,iCAGAA,EAAAA,kCAGAA,EAAAA,oCAGAA,EAAAA,UA6FF1C,EA3NA,GCxBA,iBAAA,SAAA2C,KAQA,OAJCA,EAAA9M,UAAA+M,MAAA,WACC,OAAOjN,KAAKkN,eAGdF,KCNA,IAAAG,EAAA,SAAAC,GAIC,SAAAD,EAAYhH,GAAZ,IAAAI,EACC6G,EAAAxM,KAAAZ,OAAOA,YACPuG,EAAKJ,QAAUA,IAWjB,OAjBsDkH,EAAAA,EAAAA,GAS3CF,EAAAjN,UAAAgN,YAAV,WACC,OAAO,IAAII,EAA0BtN,KAAKmG,UAG3CgH,EAAAjN,UAAAqN,YAAA,SAAYpH,GAEX,OADAnG,KAAKmG,QAAUA,EACRnG,MAETmN,EAjBA,CAAsDH,GAmBtD,IAAAQ,EAAA,SAAAJ,GAIC,SAAAI,WACCJ,EAAAxM,KAAAZ,KAAMwN,EAAwCC,iBAAezN,KAE/D,OAP6DqN,EAAAA,EAAAA,GAEpCG,EAAAC,gBAAiB,EAK1CD,EAPA,CAA6DL,GAS7D,IAAAG,EAAA,WAIC,SAAAA,EAAYnH,GACXnG,KAAKmG,QAAUA,EAWjB,OAJCmH,EAAApN,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SALNmH,EAAAK,QAAUR,EAEVG,EAAAM,eAAiBJ,EAMzBF,EAhBA,GC3BA,IAAAO,EAAA,SAAAT,GAIC,SAAAS,EAAoBC,EACTC,EACAC,GAFX,IAAAzH,EAGC6G,EAAAxM,KAAAZ,OAAOA,YAHYuG,EAAAuH,cAAAA,EACTvH,EAAAwH,aAAAA,EACAxH,EAAAyH,UAAAA,EAJHzH,EAAA0H,QAAkB,IAqC3B,OAvCgDZ,EAAAA,EAAAA,GAUrCQ,EAAA3N,UAAAgN,YAAV,WACC,OAAO,IAAIgB,EACVlO,KAAK8N,cACL9N,KAAK+N,aACL/N,KAAKgO,UACLhO,KAAKiO,SAIPJ,EAAA3N,UAAAiO,WAAA,SAAWhI,GAEV,OADAnG,KAAK8N,cAAgB3H,EACdnG,MAGR6N,EAAA3N,UAAAkO,iBAAA,SAAiBpC,GAEhB,OADAhM,KAAK+N,aAAe/B,EACbhM,MAGR6N,EAAA3N,UAAAmO,cAAA,SAAcrC,GAEb,OADAhM,KAAKgO,UAAYhC,EACVhM,MAGR6N,EAAA3N,UAAAoO,WAAA,SAAWnI,GAEV,OADAnG,KAAKiO,OAAS9H,EACPnG,MAGT6N,EAvCA,CAAgDb,GAyChD,IAAAuB,EAAA,SAAAnB,GAMC,SAAAmB,WACCnB,EAAAxM,KAAAZ,KACCuO,EAAkCC,qBAClCD,EAAkCE,oBAClCF,EAAkCG,mBAClC1O,KAEH,OAbuDqN,EAAAA,EAAAA,GAE9BkB,EAAAC,sBAAgC,EAChCD,EAAAE,qBAAiD,IAAInB,EAA0BM,gBAAiBX,QAChGsB,EAAAG,kBAA8C,IAAIpB,EAA0BM,gBAAiBX,QAStHsB,EAbA,CAAuDV,GAevD,IAAAK,EAAA,WAUC,SAAAA,EAAYJ,EACTC,EACAC,EACAC,GACFjO,KAAK8N,cAAgBA,EACrB9N,KAAK+N,aAAeA,EACpB/N,KAAKgO,UAAYA,EACjBhO,KAAKiO,OAASA,EAuBhB,OAhBCC,EAAAhO,UAAAyO,gBAAA,WACC,OAAO3O,KAAK8N,eAGbI,EAAAhO,UAAA0O,gBAAA,WACC,OAAO5O,KAAKiO,QAGbC,EAAAhO,UAAA2O,gBAAA,WACC,OAAO7O,KAAK+N,cAGbG,EAAAhO,UAAA4O,aAAA,WACC,OAAO9O,KAAKgO,WAjBNE,EAAAP,QAAUE,EAEVK,EAAAN,eAAiBW,EAkBzBL,EAxCA,GCxDA,IAAaa,IAA0B,IAAIb,EAAoBN,gBAAiBX,QCGnE+B,GAAa,CAAI,CAC7BC,QAASf,EACTgB,SAAUH,KCNEI,GAA2B,IAAIC,EAAAA,eAAe,4BCF3DC,GAAA,WAEA,SAAAA,KAYA,OALCA,EAAAnP,UAAAoP,WAAA,WAGC,OAFAD,EAAgBE,QAETF,EAAgBG,OAASH,EAAgBE,OAPzBF,EAAAG,OAAS,YAElBH,EAAAE,MAAQ,sBALvBjG,EAAAA,aAYD+F,EAdA,GCAA,IAAAI,GAAA,WAIA,SAAAA,IAGkBzP,KAAA0P,QAAU,IAAIC,IAehC,OAZCF,EAAAvP,UAAA0P,SAAA,SAASC,EAAgBC,EAA0BC,GAClD/P,KAAK0P,QAAQM,IAAIH,EAAQ,CAAEC,UAASA,EAAEC,YAAWA,KAGlDN,EAAAvP,UAAA+P,WAAA,SAAWJ,GACV7P,KAAK0P,QAAQQ,OAAOL,IAGrBJ,EAAAvP,UAAAiQ,UAAA,SAAUN,GACT,OAAO7P,KAAK0P,QAAQU,IAAIP,wBAfzBvG,EAAAA,aAkBDmG,EAtBA,GCSA,IAAAY,GAAA,WAEC,SAAAA,EAA6BC,EACTP,GADS/P,KAAAsQ,cAAAA,EACTtQ,KAAA+P,YAAAA,EAgBrB,OAbCM,EAAAnQ,UAAA+O,QAAA,eAEOa,EAAY9P,KAAKsQ,cAEvB,MAAO,CACNC,sBAAA,SAAsBpK,GACrB2J,EAAUU,gBAAkBrK,EAC5B2J,EAAUW,mBAMdJ,EAnBA,GCGA,IAEAK,GAAA,SAAAtD,GA6BC,SAAAsD,EAAyCC,EAC9BC,EACAC,EACAC,EACAC,GAJX,IAAAxK,EAKC6G,EAAAxM,KAAAZ,OAAOA,YALiCuG,EAAAoK,WAAAA,EAC9BpK,EAAAqK,WAAAA,EACArK,EAAAsK,kBAAAA,EACAtK,EAAAuK,aAAAA,EACAvK,EAAAwK,gBAAAA,IAqDZ,OAnEmC1D,EAAAA,EAAAA,GAkBlCqD,EAAAxQ,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAEK6P,EAAS7P,KAAK6P,YAEH3J,IAAX2J,IACHA,EAAS7P,KAAK+Q,gBAAgBzB,cAG/BtP,KAAKiR,YAAcpB,EAEnB7P,KAAKkR,eAGLlR,KAAK8Q,aAAalB,SAASC,EAAQ7P,KAAMA,KAAKmR,aAAaC,kBAEvDC,EAAAA,kBAAkBrR,KAAK2Q,cAC1BW,OAAmB,WAAC,SAAIzB,OAEjB0B,EAAoBhL,EAAKuK,aAAaX,UAAUN,GAEtD,OAAI0B,EACI,IAAIlB,GAAuBkB,EAAkBzB,UAAWyB,EAAkBxB,aAAad,eAE9F,KAMJyB,EAAAxQ,UAAAsR,YAAA,WACCxR,KAAK8Q,aAAab,WAAWjQ,KAAKiR,cAGnCP,EAAAxQ,UAAAuR,cAAA,WACC,OAAOzR,KAAK4Q,YAGbF,EAAAxQ,UAAAwR,UAAA,WACC,MAAO,IAGRhB,EAAAxQ,UAAAuQ,cAAA,WACCzQ,KAAK6Q,kBAAkBJ,iBAGhBC,EAAAxQ,UAAAgR,aAAR,WACClR,KAAK4Q,WAAWe,cAAcC,aAAa,cAAe5R,KAAKiR,kCAnFhEY,EAAAA,UAASC,KAAA,CAAC,CACVC,SAH2B,WAI3BC,SAAA,kuCAIAC,UAASvP,EACLsM,GAAa,CAChB,CACCC,QAASE,GACT+C,YAAaxB,KAGfyB,KAAM,CACLC,UAAW,aACXC,iBAAkB,aAEnBC,cAAeC,EAAAA,kBAAkBC,0HAYpBC,EAAAA,OAAMX,KAAA,CAACY,EAAAA,sBA3CkBC,EAAAA,kBAA9BC,EAAAA,yBASAnD,UADAJ,4CA2BPwD,EAAAA,UAASf,KAAA,CAAC,YAAa,CAAEgB,QAAQ,oBAGjChG,EAAAA,SA8DF4D,EAtFA,CAmBmCrG,GCZnC,IAAa0I,GAAgB,CAC5BC,EAAAA,kBACAC,EAAAA,mBACAC,EAAAA,wBACAC,EAAAA,qBACAC,EAAAA,iBACAC,EAAAA,qBACAC,EAAAA,wBACAC,EAAAA,uBACAC,EAAAA,wBACAC,EAAAA,4BACAC,EAAAA,mBACAC,EAAAA,oBACAC,EAAAA,gBACAC,EAAAA,yBACAC,EAAAA,kBACAC,EAAAA,mBACAC,EAAAA,yBACAJ,EAAAA,+BC/BA,SAAAK,IAFiBjU,KAAAkU,aAAe,IAAIC,EAAAA,QAuBrC,OAlBCF,EAAA/T,UAAAsR,YAAA,WACCxR,KAAKoU,eAGIH,EAAA/T,UAAAkU,YAAV,WAEKpU,KAAKkU,aAAaG,YAItBrU,KAAKkU,aAAahS,OAClBlC,KAAKkU,aAAaI,aAGTL,EAAA/T,UAAAqU,UAAV,WACC,OAAOA,EAAAA,UAAUvU,KAAKkU,eAGxBD,KC3BA,mBAAA,SAAAO,mDACA,OAD6CnH,EAAAA,EAAAA,GAC7CmH,GAD6CP,kBCS5C,SAAAQ,EAAsBC,GAAtB,IAAAnO,EAAAvG,KAFiBA,KAAAkU,aAAe,IAAIC,EAAAA,QAGnCO,EACEC,QAAO9T,MADT6T,EAAchS,EAET1C,KAAK4U,cAERC,KACAN,EAAAA,UAAUvU,KAAKkU,eAEfY,WAAS,SAAEC,GAEX,IACCxO,EAAKyO,KAAKD,GACT,MAAOzS,GACR2S,QAAQxS,MAAMH,OAgBnB,OALCmS,EAAAvU,UAAAsR,YAAA,WACCxR,KAAKkU,aAAahS,OAClBlC,KAAKkU,aAAaI,YAGpBG,KCxCA,IAAAS,GAAA,WAYC,SAAAA,EAAoBC,GAAAnV,KAAAmV,oBAAAA,EAarB,OAVCD,EAAAhV,UAAAkV,GAAA,SAAGrF,GAEF,OAAO/P,KAAKmV,oBACNE,YAAYtF,GACZ8E,KACAS,EAAAA,QAAM,SAAEC,GAAyB,OAAAA,EAAUC,QAAQC,aAAe1F,EAAY0F,cAC9EvN,EAAAA,KAAG,SAAEqN,GAAyB,OAAAA,EAAUG,qCAZ/CpM,EAAAA,sDANQmL,MAsBTS,EAzBA,sBCIC,SAAAS,EAAYC,UACXxI,EAAAxM,KAAAZ,KAAM4V,IAAG5V,KAGX,OANiCqN,EAAAA,EAAAA,GAMjCsI,GANiCE,EAAAA,aCApBC,GAAoB,IAAIH,GAAY,MCFjDI,GAAA,WAaC,SAAAA,EAAoBC,GAAAhW,KAAAgW,iBAAAA,EAcrB,OAXCD,EAAA7V,UAAA+V,SAAA,SAASlG,GACR,YADQ,IAAAA,IAAAA,EAAA+F,IACD9V,KAAKgW,iBAAiBZ,GAAGrF,IAGjCgG,EAAA7V,UAAAgW,eAAA,SAAenG,GACd,YADc,IAAAA,IAAAA,EAAA+F,IACP9V,KAAKiW,SAASlG,GACf8E,KACAsB,EAAAA,KAAK,yBAbZ7M,EAAAA,sDANQ4L,MAuBTa,EA3BA,GCKA,IAAAK,GAAA,SAAAhJ,GAEC,SAAAgJ,EAAYrG,EACQzI,GADpB,IAAAf,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,qBAAmB/P,YADnBuG,EAAAe,OAAAA,IAQrB,OAXsC+F,EAAAA,EAAAA,GAOrC+I,EAAAlW,UAAAmW,gBAAA,WACC,OAAOrW,KAAKsH,QAGd8O,EAXA,CAAsCE,EAAAA,SCFtC,IAAAC,GAAA,SAAAnJ,GAEC,SAAAmJ,EAAYxG,EACQpG,GADpB,IAAApD,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,0BAAwB/P,YADxBuG,EAAAoD,SAAAA,IAOrB,OAV2C0D,EAAAA,EAAAA,GAO1CkJ,EAAArW,UAAAsW,YAAA,WACC,OAAOxW,KAAK2J,UAEd4M,EAVA,CAA2CD,EAAAA,SCC3C,IAAAG,GAAA,SAAArJ,GAEC,SAAAqJ,EAAY1G,UACX3C,EAAAxM,KAAAZ,KAAM+P,EAAa,oBAAkB/P,KAGvC,OANqCqN,EAAAA,EAAAA,GAMrCoJ,EANA,CAAqCH,EAAAA,SCArCI,GAAA,SAAAtJ,GAEC,SAAAsJ,EAAY3G,UACX3C,EAAAxM,KAAAZ,KAAM+P,EAAa,oBAAkB/P,KAGvC,OANqCqN,EAAAA,EAAAA,GAMrCqJ,EANA,CAAqCJ,EAAAA,SCJrCK,GAAA,WAeC,SAAAA,EAAoBC,GAAA5W,KAAA4W,kBAAAA,EAkBrB,OAfCD,EAAAzW,UAAA2W,UAAA,SAAU9G,EAA0B/D,GACnChM,KAAK4W,kBAAkBE,SAAS,IAAIV,GAAiBrG,EAAa/D,KAGnE2K,EAAAzW,UAAA6W,eAAA,SAAehH,EAA0BpG,GACxC3J,KAAK4W,kBAAkBE,SAAS,IAAIP,GAAsBxG,EAAapG,KAGxEgN,EAAAzW,UAAA8W,SAAA,SAASjH,GACR/P,KAAK4W,kBAAkBE,SAAS,IAAIL,GAAgB1G,KAGrD4G,EAAAzW,UAAA+W,SAAA,SAASlH,GACR/P,KAAK4W,kBAAkBE,SAAS,IAAIJ,GAAgB3G,yBAnBrDzG,EAAAA,sDAVQ4N,EAAAA,qBA+BTP,EAjCA,GCAA,IAAAQ,GAAA,WAWC,SAAAA,EAAoBC,GAAApX,KAAAoX,iBAAAA,EAiDrB,OA9CCD,EAAAjX,UAAAmX,OAAA,SAAOtH,QAAA,IAAAA,IAAAA,EAAA+F,IACN9V,KAAKoX,iBAAiBP,UAAU9G,EAAa,CAAE5J,SAAS,KAGzDgR,EAAAjX,UAAAoX,QAAA,SAAQvH,QAAA,IAAAA,IAAAA,EAAA+F,IACP9V,KAAKoX,iBAAiBP,UAAU9G,EAAa,CAAE5J,SAAS,KAGzDgR,EAAAjX,UAAA2W,UAAA,SAAU7K,EAAsB+D,QAAA,IAAAA,IAAAA,EAAA+F,IAC/B9V,KAAKoX,iBAAiBP,UAAU9G,EAAa/D,IAG9CmL,EAAAjX,UAAA6W,eAAA,SAAepN,EAAkBoG,QAAA,IAAAA,IAAAA,EAAA+F,IAChC9V,KAAKoX,iBAAiBL,eAAehH,EAAapG,IAGnDwN,EAAAjX,UAAA8W,SAAA,SAASjH,QAAA,IAAAA,IAAAA,EAAA+F,IACR9V,KAAKoX,iBAAiBJ,SAASjH,IAGhCoH,EAAAjX,UAAA+W,SAAA,SAASlH,QAAA,IAAAA,IAAAA,EAAA+F,IACR9V,KAAKoX,iBAAiBH,SAASlH,IAGhCoH,EAAAjX,UAAAqX,SAAA,SAASC,EAAoBC,GAE5B,GAAIA,EAAcD,EACjB,KAAOC,IAAgBD,GACtBxX,KAAKgX,WACLS,GAAe,OAGhB,KAAOA,IAAgBD,GACtBxX,KAAKiX,WACLQ,GAAe,GAKlBN,EAAAjX,UAAAwX,eAAA,SAAevR,EAAkB4J,QAAA,IAAAA,IAAAA,EAAA+F,IAChC9V,KAAKoX,iBAAiBP,UAAU9G,EAAa,CAAElG,SAAU1D,KAG1DgR,EAAAjX,UAAAyX,kBAAA,SAAkBxR,EAAkB4J,QAAA,IAAAA,IAAAA,EAAA+F,IACnC9V,KAAKoX,iBAAiBP,UAAU9G,EAAa,CAAEjG,YAAa3D,yBAlD7DmD,EAAAA,sDANQqN,MA0DTQ,EA5DA,GCAA,IAAAS,GAAA,WAOA,SAAAA,IAGS5X,KAAA6X,OAAS,IAAIlI,IAEb3P,KAAA8X,QAAU,IAAIC,EAAAA,cAkBvB,OAhBCH,EAAA1X,UAAA8X,UAAA,SAAUH,EAAiC9H,GAC1C/P,KAAK6X,OAAO7H,IAAID,EAAY0F,WAAYoC,GACxC7X,KAAK8X,QAAQ5V,KAAKlC,KAAK6X,SAGxBD,EAAA1X,UAAA+X,SAAA,SAASlI,GAER,OAAO/P,KAAK8X,QACNI,eACArD,KACA3M,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAIkI,IAAIL,EAAY0F,eAE5B0C,EAAAA,6CApBP7O,EAAAA,aAuBDsO,EA9BA,GCAA,IAAAQ,GAAA,WAQA,SAAAA,IAGSpY,KAAA6X,OAAS,IAAIlI,IAEb3P,KAAA8X,QAAU,IAAIC,EAAAA,cAkBvB,OAhBCK,EAAAlY,UAAAmY,SAAA,SAASR,EAAiC9H,GACzC/P,KAAK6X,OAAO7H,IAAID,EAAY0F,WAAYoC,GACxC7X,KAAK8X,QAAQ5V,KAAKlC,KAAK6X,SAGxBO,EAAAlY,UAAAoY,gBAAA,SAAgBvI,GAEf,OAAO/P,KAAK8X,QACNI,eACArD,KACA3M,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAIkI,IAAIL,EAAY0F,eAE5B0C,EAAAA,6CApBP7O,EAAAA,aAuBD8O,EA/BA,GCAA,IAAAG,GAAA,WAgBC,SAAAA,EAAoBpD,EACTqD,EACAC,GAFSzY,KAAAmV,oBAAAA,EACTnV,KAAAwY,iCAAAA,EACAxY,KAAAyY,gCAAAA,EAkEZ,OA/DCF,EAAArY,UAAAwY,WAAA,SAAW3I,GAEV,YAFU,IAAAA,IAAAA,EAAA+F,IAEH9V,KAAKmV,oBACNE,YAAYtF,GACZ8E,KACA3M,EAAAA,KAAG,SAAEqN,GAAyB,OAAAA,EAAUoD,iBACxCR,EAAAA,sBAAoB,SAAES,EAA0BC,GAC/C,GAAID,EAAMjY,SAAWkY,EAAMlY,OAC1B,OAAO,MAGJmY,GAAO,EASX,OAPAF,EAAMpS,SAAO,SAAEuS,EAAKxJ,GACdwJ,EAAIC,OAAOH,EAAMtJ,MACrBuJ,GAAO,MAKFA,OAKfP,EAAArY,UAAA+Y,eAAA,SAAelJ,GAEd,YAFc,IAAAA,IAAAA,EAAA+F,IAEP9V,KAAK0Y,WAAW3I,GACjB8E,KACA3M,EAAAA,KAAG,SAAEgR,GACJ,OAAOA,EAASvY,YAKxB4X,EAAArY,UAAAiZ,iBAAA,SAAiBpJ,GAEhB,YAFgB,IAAAA,IAAAA,EAAA+F,IAET9V,KAAK0Y,WAAW3I,GACjB8E,KACAsB,EAAAA,KAAK,KAIZoC,EAAArY,UAAAkZ,aAAA,SAAarJ,GACZ,YADY,IAAAA,IAAAA,EAAA+F,IACL9V,KAAKyY,gCACNR,SAASlI,GACT8E,KACA3M,EAAAA,KAAG,SAAC2P,GAAU,OAAAA,EAAOlX,YAI5B4X,EAAArY,UAAAmZ,UAAA,SAAUtJ,GACT,YADS,IAAAA,IAAAA,EAAA+F,IACF9V,KAAKmV,oBACNE,YAAYtF,GACZ8E,KACA3M,EAAAA,KAAG,SAAEqN,GAAyB,OAAAA,EAAU+D,YAAYC,iBAI3DhB,EAAArY,UAAAsZ,mBAAA,SAAmBzJ,GAClB,YADkB,IAAAA,IAAAA,EAAA+F,IACX9V,KAAKwY,iCAAiCF,gBAAgBvI,wBApE9DzG,EAAAA,sDATQmL,UAMA2D,UALAR,MA+ETW,EApFA,GCEA,kBAIC,SAAAkB,EAAsBtX,GAEpBnC,KAAK0Z,SADFvX,EACa,IAAIwX,EAAAA,gBAAgBxX,GAEpB,IAAI4V,EAAAA,cAAc,GAYrC,OARC0B,EAAAvZ,UAAA0Z,QAAA,WACC,OAAO5Z,KAAK0Z,SAASxB,gBAGtBuB,EAAAvZ,UAAAgC,KAAA,SAAKC,GACJnC,KAAK0Z,SAASxX,KAAKC,IAGrBsX,wBCXC,SAAAI,WACCzM,EAAAxM,KAAAZ,KAAMmK,EAAkB9F,QAAMrE,KAUhC,OAbuDqN,EAAAA,EAAAA,GAMtDwM,EAAA3Z,UAAA0Z,QAAA,WACC,OAAOxM,EAAAlN,UAAM0Z,QAAOhZ,KAAAZ,2BARrBsJ,EAAAA,mDAcDuQ,GAbuDJ,mBCgBtD,SAAAK,EAAoBjJ,EACTkJ,EACAC,EACAC,EACAC,GAJX,IAAA3T,EAKC6G,EAAAxM,KAAAZ,OAAOA,YALYuG,EAAAsK,kBAAAA,EACTtK,EAAAwT,mBAAAA,EACAxT,EAAAyT,qBAAAA,EACAzT,EAAA0T,mBAAAA,EACA1T,EAAA2T,kCAAAA,EANX3T,EAAA4T,oBAA8B,IA0D/B,OAhE8C9M,EAAAA,EAAAA,GAgB7CyM,EAAA5Z,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAECA,KAAKka,kCACHN,UACA/E,KACA7U,KAAKuU,aAELO,WAAS,SAAEsF,GACX7T,EAAK4T,mBAAqBC,IAASjQ,EAAkB7F,SACrDiC,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAK+Z,mBACH9D,WACApB,KACA7U,KAAKuU,aAELO,WAAS,SAAE9I,GACXzF,EAAKyF,OAASA,EACdzF,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKia,mBACHb,eACAvE,KAAK7U,KAAKuU,aACVO,WAAS,SAAEuF,GACX9T,EAAK+T,WAAaD,EAClB9T,EAAKsK,kBAAkBJ,oBAI1BqJ,EAAA5Z,UAAA6W,eAAA,SAAepN,GACd3J,KAAKga,qBAAqBjD,eAAepN,IAG1CmQ,EAAA5Z,UAAA8W,SAAA,WAEMhX,KAAKsa,YAIVta,KAAKga,qBAAqBhD,YAG3B8C,EAAA5Z,UAAA+W,SAAA,WACCjX,KAAKga,qBAAqB/C,gCAlE3BpF,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,uBACVC,SAAA,6kCACAuI,gBAAiBC,EAAAA,wBAAwBC,oDAfR7H,EAAAA,yBAKzBmD,UACAoB,UACAoB,UACAsB,MAyETC,GAhE8CtF,ICjB9C,IAAAkG,GAAA,WAEC,SAAAA,EAA6BvU,EACTuD,EACAC,EACAC,EACAC,EACAC,EACA6Q,EACAC,EACAC,EACAC,EACAR,GAVSta,KAAAmG,QAAAA,EACTnG,KAAA0J,KAAAA,EACA1J,KAAA2J,SAAAA,EACA3J,KAAA4J,UAAAA,EACA5J,KAAA6J,SAAAA,EACA7J,KAAA8J,YAAAA,EACA9J,KAAA2a,eAAAA,EACA3a,KAAA4a,eAAAA,EACA5a,KAAA6a,MAAAA,EACA7a,KAAA8a,IAAAA,EACA9a,KAAAsa,WAAAA,EA8DrB,OA3DCI,EAAAxa,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGbuU,EAAAxa,UAAA6a,QAAA,WACC,OAAO/a,KAAK0J,MAGbgR,EAAAxa,UAAAsW,YAAA,WACC,OAAOxW,KAAK2J,UAGb+Q,EAAAxa,UAAA8a,aAAA,WACC,OAAOhb,KAAK4J,WAGb8Q,EAAAxa,UAAA+a,WAAA,WACC,OAAOjb,KAAK6J,UAGb6Q,EAAAxa,UAAAgb,cAAA,WACC,OAAOlb,KAAK8J,aAGb4Q,EAAAxa,UAAAib,mBAAA,WACC,OAAOnb,KAAK2a,gBAGbD,EAAAxa,UAAAkb,mBAAA,WACC,OAAOpb,KAAK4a,gBAGbF,EAAAxa,UAAAmb,SAAA,WACC,OAAOrb,KAAK6a,OAGbH,EAAAxa,UAAAob,OAAA,WACC,OAAOtb,KAAK8a,KAGbJ,EAAAxa,UAAAqb,cAAA,WACC,OAAOvb,KAAKsa,YAGbI,EAAAxa,UAAAsb,sBAAA,SAAsB/D,EAAqBgE,EAA8B/R,GACxE,OAAO+N,EAAcgE,EAAuB/R,GAAQA,EAAO+N,EAAcgE,GAG1Ef,EAAAxa,UAAAwb,OAAA,SAAOpR,OAEFuQ,EAAQ7a,KAAKqb,WAMjB,OAJc,IAAVR,IACHA,GAAS,GAGHvQ,EAAOqR,MAAMd,EAAO7a,KAAKsb,WAGlCZ,EA1EA,GCAA,IAAAkB,GAAA,WAIA,SAAAA,IAcC5b,KAAA6b,gBAAkB,IAAIpR,EAAAA,aAGtBzK,KAAA8b,gBAAkB,IAAIrR,EAAAA,aAEtBzK,KAAA+b,cAAwB,EAExB/b,KAAAgc,cAAwB,EAiCzB,OA/BCJ,EAAA1b,UAAAsL,YAAA,WACCxL,KAAKic,gBACLjc,KAAKkc,iBAGNN,EAAA1b,UAAA+W,SAAA,WACCjX,KAAK8b,gBAAgB5P,QAGtB0P,EAAA1b,UAAA8W,SAAA,WACChX,KAAK6b,gBAAgB3P,QAGd0P,EAAA1b,UAAA+b,cAAR,WAEMjc,KAAKgM,SAIVhM,KAAK+b,aAAe/b,KAAKgM,OAAOoP,uBAGzBQ,EAAA1b,UAAAgc,cAAR,YAEMlc,KAAKgM,QAAWhM,KAAKsa,cAI1Bta,KAAKgc,aAAehc,KAAKgM,OAAOmP,2CAnDjCtJ,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,iCACVC,SAAA,0WACAuI,gBAAiBC,EAAAA,wBAAwBC,2CAIxC3N,EAAAA,0BAGAA,EAAAA,+BAGAC,EAAAA,gCAGAA,EAAAA,UAsCF6O,EA1DA,GCAA,IAAAO,GAAA,WAKA,SAAAA,IAWCnc,KAAA0K,gBAAkB,IAAID,EAAAA,aAKvB,OAHC0R,EAAAjc,UAAA6W,eAAA,SAAepN,GACd3J,KAAK0K,gBAAgBwB,KAAKvC,wBAd3BkI,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,8BACVC,SAAA,6MACAuI,gBAAiBC,EAAAA,wBAAwBC,2CAIxC3N,EAAAA,+BAGAC,EAAAA,UAMFoP,EArBA,GCAA,IAAAC,GAAA,WAKA,SAAAA,KAgCA,OAhBCA,EAAAlc,UAAAsL,YAAA,SAAYC,GACXzL,KAAKqc,aAGND,EAAAlc,UAAAmc,UAAA,WACKrc,KAAKgM,SACRhM,KAAKsc,eAAiBtc,KAAKgM,OAAOqP,WAClCrb,KAAKuc,cAAgBvc,KAAKgM,OAAOsP,SACjCtb,KAAKsa,WAAata,KAAKgM,OAAOuP,kBAIhCa,EAAAlc,UAAAsc,iBAAA,WACC,OAAOxc,KAAKsa,WAAa,uBA7B1BzI,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,6BACVC,SAAA,6eACAuI,gBAAiBC,EAAAA,wBAAwBC,2CAIxC3N,EAAAA,SAyBFsP,EArCA,GCAA,IAAAK,GAAA,WA6BC,SAAAA,EAAoBzC,GAAAha,KAAAga,qBAAAA,EATpBha,KAAA6b,gBAAkB,IAAIpR,EAAAA,aAGtBzK,KAAA8b,gBAAkB,IAAIrR,EAAAA,aAEtBzK,KAAA+b,cAAwB,EAExB/b,KAAAgc,cAAwB,EA6CzB,OAxCCS,EAAAvc,UAAAsL,YAAA,WACCxL,KAAKic,gBACLjc,KAAKkc,iBAGNO,EAAAvc,UAAA+W,SAAA,WACCjX,KAAK8b,gBAAgB5P,QAGtBuQ,EAAAvc,UAAA8W,SAAA,WACChX,KAAK6b,gBAAgB3P,QAGtBuQ,EAAAvc,UAAAwc,UAAA,WACC1c,KAAKga,qBAAqBzC,SAAS,EAAGvX,KAAKgM,OAAO+O,YAGnD0B,EAAAvc,UAAAyc,SAAA,eACKC,EAAgBC,KAAKC,KAAK9c,KAAKsa,WAAata,KAAKgM,OAAOwK,eAC5DxW,KAAKga,qBAAqBzC,SAASqF,EAAe5c,KAAKgM,OAAO+O,YAGvD0B,EAAAvc,UAAA+b,cAAR,WAEMjc,KAAKgM,SAIVhM,KAAK+b,aAAe/b,KAAKgM,OAAOoP,uBAGzBqB,EAAAvc,UAAAgc,cAAR,YAEMlc,KAAKgM,QAAWhM,KAAKsa,cAI1Bta,KAAKgc,aAAehc,KAAKgM,OAAOmP,2CA/DjCtJ,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,6CACVC,SAAA,qjEACAuI,gBAAiBC,EAAAA,wBAAwBC,oDANjCtD,sCAUPrK,EAAAA,0BAGAA,EAAAA,+BAGAC,EAAAA,gCAGAA,EAAAA,UAkDF0P,EAxEA,GCAA,IAAAM,GAAA,WAyBC,SAAAA,EAAoB/C,GAAAha,KAAAga,qBAAAA,EARpBha,KAAAsa,WAAqB,EAMrBta,KAAAyb,qBAA+B,EA0ChC,OArCCsB,EAAA7c,UAAAsL,YAAA,SAAYC,GACXzL,KAAKqc,aAGNU,EAAA7c,UAAAmc,UAAA,WACC,GAAIrc,KAAKgM,QAAUhM,KAAKsa,WAAY,KAC/BsC,EAAgBC,KAAKC,KAAK9c,KAAKsa,WAAata,KAAKgM,OAAOwK,eAK5D,GAHAxW,KAAKyX,YAAczX,KAAKgM,OAAO+O,UAE/B/a,KAAKgd,MAAQ,GACThd,KAAKgd,MAAMrc,QAAUic,EACxB,IAAK,IAAIpc,EAAI,EAAGA,GAAKoc,EAAepc,IACnCR,KAAKgd,MAAMxa,KAAKhC,KAOpBuc,EAAA7c,UAAAsc,iBAAA,WACC,OAAOxc,KAAKsa,WAAa,GAG1ByC,EAAA7c,UAAAqX,SAAA,SAASC,OACFC,EAAczX,KAAKgM,OAAO+O,UAChC/a,KAAKga,qBAAqBzC,SAASC,EAAYC,IAGhDsF,EAAA7c,UAAAsb,sBAAA,SAAsB9R,GACrB,OAAO1J,KAAKgM,OAAOwP,sBAAsBxb,KAAKyX,YAAazX,KAAKyb,qBAAsB/R,IAGvFqT,EAAA7c,UAAA+c,WAAA,SAAWvT,GACV,OAAO1J,KAAKyX,cAAgB/N,uBAxD7BmI,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,yCACVC,SAAA,iiBACAuI,gBAAiBC,EAAAA,wBAAwBC,oDANjCtD,sCAUPrK,EAAAA,0BAGAA,EAAAA,SAiDFiQ,EAjEA,GCAA,IAAAG,GAAA,WAaA,SAAAA,KAuBA,2BAvBCC,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAS,CACRC,EAAAA,aACAC,EAAAA,cAEDC,aAAc,CACbzD,GACA8B,GACAO,GACAC,GACAK,GACAM,IAEDS,QAAS,CACR1D,GACA8B,GACAO,GACAC,GACAK,GACAM,QAIFG,EApCA,GCAAO,GAAA,WAEA,SAAAA,KAOA,OAJCA,EAAAvd,UAAAwd,UAAA,SAAUC,GACT,OAAOA,EAAOlI,WAAWmI,QAAQ,wBAAyB,0BAJ3DC,EAAAA,KAAI/L,KAAA,CAAC,CAAEgM,KAAM,sBAOdL,EATA,GCAAM,GAAA,WAIA,SAAAA,KAUA,2BAVCZ,EAAAA,SAAQrL,KAAA,CAAC,CACTyL,aAAc,CACbE,IAEDD,QAAS,CACRC,QAKFM,EAdA,GCAAC,GAAA,WAEA,SAAAA,KAoDA,2BApDCnM,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,kBACVC,SAAU,0iCA+CVuI,gBAAiBC,EAAAA,wBAAwBC,WAG1CuD,EAtDA,GCEAC,GAAA,SAAA7Q,GAEC,SAAA6Q,EAAYC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,0BAAwBle,KAE7C,OAL2CqN,EAAAA,EAAAA,GAK3C4Q,EALA,CAA2CE,EAAAA,aCA3CC,GAAA,SAAAhR,GAEC,SAAAgR,EAAYF,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,kCAAgCle,KAErD,OALmDqN,EAAAA,EAAAA,GAKnD+Q,EALA,CAAmDD,EAAAA,4BCKnD,SAAAE,mDAEA,OAD4ChR,EAAAA,EAAAA,uBAD3C/D,EAAAA,aAED+U,GAD4CC,EAAAA,eCN5CC,GAAA,WAEC,SAAAA,EAA6BC,GAAAxe,KAAAwe,OAAAA,EAU9B,OAPCD,EAAAre,UAAAue,cAAA,SAAcC,GACb,QAAU1e,KAAKwe,OAAOG,MAAI,SAAE/I,GAAO,OAAA8I,EAAOE,WAAWhJ,OAGtD2I,EAAAre,UAAA2e,OAAA,WACC,OAAO7e,KAAKwe,QAEdD,EAZA,GCFA,IAAAO,GAAA,WAMC,SAAAA,EAAYC,GACX/e,KAAKgf,iBAAmB,IAAIT,GAAiBQ,GAO/C,OAJCD,EAAA5e,UAAA+e,gBAAA,WACC,OAAOjf,KAAKgf,kBAGdF,EAdA,GCAA,IAAAI,GAAA,WAMA,SAAAA,KASA,OANCA,EAAAhf,UAAA6F,QAAA,SAAQoZ,OAEDC,EAAOD,EAAUF,kBAEvB,OAAO,IAAIH,GAAUM,wBAPtB9V,EAAAA,aASD4V,EAfA,GCGAG,GAAA,WAEC,SAAAA,EAA4BC,EACTC,EACAzW,EACAI,GAHSlJ,KAAAsf,aAAAA,EACTtf,KAAAuf,eAAAA,EACAvf,KAAA8I,MAAAA,EACA9I,KAAAkJ,YAAAA,EAMpB,OAHCmW,EAAAnf,UAAAsf,eAAA,WACC,OAAOxf,KAAKkJ,aAEdmW,EAXA,GCAA,IAAAI,GAAA,WAIC,SAAAA,EAA6BjX,EACTkX,EACAC,EACAC,EACAC,EACA/W,EACAgX,EACA5W,GAPSlJ,KAAAwI,MAAAA,EACTxI,KAAA0f,OAAAA,EACA1f,KAAA2f,gBAAAA,EACA3f,KAAA4f,oBAAAA,EACA5f,KAAA6f,sBAAAA,EACA7f,KAAA8I,MAAAA,EACA9I,KAAA8f,aAAAA,EACA9f,KAAAkJ,YAAAA,EA4CrB,OAzCCuW,EAAAvf,UAAAsf,eAAA,WACC,OAAOxf,KAAKkJ,aAGbuW,EAAAvf,UAAA6f,SAAA,WACC,OAAO/f,KAAK8I,OAGb2W,EAAAvf,UAAA8f,UAAA,WACC,OAAOhgB,KAAK0f,QAGbD,EAAAvf,UAAA+f,mBAAA,WACC,OAAOjgB,KAAK2f,iBAGbF,EAAAvf,UAAAggB,SAAA,WACC,OAAOlgB,KAAKwI,OAGbiX,EAAAvf,UAAAigB,sBAAA,WACC,OAAOngB,KAAK4f,qBAGbH,EAAAvf,UAAAkgB,wBAAA,WACC,OAAOpgB,KAAK6f,uBAGbJ,EAAAvf,UAAAmgB,gBAAA,WACC,OAAOrgB,KAAK8f,cAGbL,EAAAvf,UAAAogB,cAAA,WACC,OAAO,IAAIjB,GACVrf,KAAKmgB,wBACLngB,KAAKogB,0BACLpgB,KAAK+f,WACL/f,KAAKwf,mBAIRC,EAvDA,GCHA,IAAAc,GAAA,WAEC,SAAAA,EAA6BC,EACTC,GADSzgB,KAAAwgB,IAAAA,EACTxgB,KAAAygB,OAAAA,EAWrB,OARCF,EAAArgB,UAAAwgB,mBAAA,WACC,OAAO1gB,KAAKwgB,KAGbD,EAAArgB,UAAAygB,sBAAA,WACC,OAAO3gB,KAAKygB,QAGdF,EAdA,GCAA,IAAAK,GAAA,WAOA,SAAAA,KAuBA,OApBCA,EAAA1gB,UAAA6F,QAAA,SAAQoZ,OAEDW,EAAeX,EAAUkB,kBAE/B,OAAO,IAAIZ,GACVN,EAAUe,WACVf,EAAUa,YACVb,EAAUc,qBACVd,EAAUgB,wBACVhB,EAAUiB,0BACVjB,EAAUY,WACV/f,KAAK6gB,oBAAoBf,GACzBX,EAAUK,mBAIJoB,EAAA1gB,UAAA2gB,oBAAR,SAA4Bf,GAC3B,OAAO,IAAIS,GAAmBT,EAAagB,gBAAiBhB,EAAaiB,yCApB1EzX,EAAAA,aAuBDsX,EA9BA,GCAAI,GAAA,WAMA,SAAAA,KAmBA,OAhBCA,EAAA9gB,UAAA6F,QAAA,SAAQoZ,GACP,OAAO,IAAIzE,GACVyE,EAAUzR,YACVyR,EAAUpE,UACVoE,EAAU3I,cACV2I,EAAUnE,eACVmE,EAAUlE,aACVkE,EAAUjE,gBACViE,EAAUhE,qBACVgE,EAAU/D,qBACV+D,EAAU8B,iBACV9B,EAAU+B,eACV/B,EAAU5D,sCAfZjS,EAAAA,aAmBD0X,EAzBA,GCAAG,GAAA,WAEC,SAAAA,EAA6BC,GAAAphB,KAAAohB,QAAAA,EAO9B,OAJCD,EAAAjhB,UAAAqZ,UAAA,WACC,OAAOvZ,KAAKohB,SAGdD,EATA,GCAA,IAAAE,GAAA,WAKA,SAAAA,KAOA,OAJCA,EAAAnhB,UAAA6F,QAAA,SAAQoZ,GACP,OAAO,IAAIgC,GAAOhC,EAAU5F,kCAJ7BjQ,EAAAA,aAOD+X,EAZA,GCAAC,GAAA,WAEC,SAAAA,EAA6Bnb,EACTob,EACA5B,EACA6B,EACAC,GAJSzhB,KAAAmG,QAAAA,EACTnG,KAAAuhB,UAAAA,EACAvhB,KAAA2f,gBAAAA,EACA3f,KAAAwhB,eAAAA,EACAxhB,KAAAyhB,UAAAA,EAuBrB,OApBCH,EAAAphB,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGbmb,EAAAphB,UAAAwhB,aAAA,WACC,OAAO1hB,KAAKuhB,WAGbD,EAAAphB,UAAA+f,mBAAA,WACC,OAAOjgB,KAAK2f,iBAGb2B,EAAAphB,UAAAyhB,kBAAA,WACC,OAAO3hB,KAAKwhB,gBAGbF,EAAAphB,UAAA0hB,aAAA,WACC,OAAO5hB,KAAKyhB,WAGdH,EA7BA,GCAA,IAAAO,GAAA,WAMA,SAAAA,KAcA,OAXCA,EAAA3hB,UAAA6F,QAAA,SAAQ+b,OAED3b,EAAU2b,EAAkBpU,YACjC6T,EAAYO,EAAkBJ,eAC9B/B,EAAkBmC,EAAkBC,iBACpCP,EAAiBM,EAAkBH,oBACnCF,EAAYK,EAAkBF,eAE/B,OAAO,IAAIN,GAA2Bnb,EAASob,EAAW5B,EAAiB6B,EAAgBC,wBAX5FnY,EAAAA,aAcDuY,EApBA,GCUAG,GAAA,SAAA5U,GAcC,SAAA4U,EAAYC,EACTC,EACAC,EACAnW,EACAkN,EACA5O,EACAwX,GANH,IAAAvb,EAOC6G,EAAAxM,KAAAZ,KAAMiiB,IAAIjiB,YACVuG,EAAK2b,UAAYA,EACjB3b,EAAK4b,OAASA,EACd5b,EAAKyF,OAASA,EACdzF,EAAK2S,SAAWA,EAChB3S,EAAK+D,OAASA,EACd/D,EAAKub,kBAAoBA,IAuE3B,OAlG+BzU,EAAAA,EAAAA,GA8B9B2U,EAAA9hB,UAAAkiB,aAAA,WACC,OAAOpiB,KAAKkiB,WAGbF,EAAA9hB,UAAAmiB,UAAA,WACC,OAAOriB,KAAKmiB,QAGbH,EAAA9hB,UAAAwV,UAAA,WACC,OAAO1V,KAAKgM,QAGbgW,EAAA9hB,UAAAyY,YAAA,WACC,OAAO3Y,KAAKkZ,UAGb8I,EAAA9hB,UAAAoZ,UAAA,WACC,OAAOtZ,KAAKsK,QAGb0X,EAAA9hB,UAAAoiB,qBAAA,WACC,OAAOtiB,KAAK8hB,mBAGbE,EAAA9hB,UAAAqiB,oBAAA,eAEOC,EAAcxiB,KAAKkiB,UAAUjD,kBAAkBJ,SAErD,OAAO7e,KAAKkZ,SAAS5D,QAAM,SAAEoJ,GAC5B,OAAO8D,EAAYC,MAAI,SAAE7M,GAAe,OAAA8I,EAAOE,WAAWhJ,UAI5DoM,EAAA9hB,UAAAwhB,aAAA,WACC,OAAO1hB,KAAK8hB,kBAAkBJ,gBAG/BM,EAAA9hB,UAAA+f,mBAAA,WACC,OAAOjgB,KAAK8hB,kBAAkB7B,sBAG/B+B,EAAA9hB,UAAAwiB,gBAAA,WACC,OAAI1iB,KAAKqiB,YAAYrC,YAAc,KAC3BhgB,KAAKsZ,YAAYC,aAM1ByI,EAAA9hB,UAAAwgB,mBAAA,WACC,OAAO1gB,KAAKmiB,OAAO9B,kBAAkBK,sBAItCsB,EAAA9hB,UAAAygB,sBAAA,WACC,OAAO3gB,KAAKmiB,OAAO9B,kBAAkBM,yBAItCqB,EAAA9hB,UAAAyiB,iBAAA,WACC,OAAO3iB,KAAKkZ,SAASvY,OAAS,GAI/BqhB,EAAA9hB,UAAA0iB,wBAAA,WACC,OAAO5iB,KAAK8hB,kBAAkBpU,aAGhCsU,EAlGA,CAA+Ba,EAAAA,6BCI9B,SAAAC,EAAYC,EACTC,EACApN,EACAqN,QAAA,IAAAA,IAAAA,EAAA,GALcjjB,KAAAijB,QAAkB,EAMlCjjB,KAAK+iB,KAAOA,EACZ/iB,KAAKgjB,SAAWA,EAChBhjB,KAAKijB,QAAUA,EAIdjjB,KAAK4V,GAHDA,GACMsN,EAAAA,sBAAsBC,WA0CnC,OApCCL,EAAA5iB,UAAAkjB,QAAA,WACC,OAAOpjB,KAAK+iB,MAGbD,EAAA5iB,UAAAmjB,QAAA,WACC,MAAO,MAAQrjB,KAAK4V,GAAGgI,QAAQ,KAAM,KAGtCkF,EAAA5iB,UAAAsV,MAAA,WACC,OAAOxV,KAAK4V,IAGbkN,EAAA5iB,UAAAojB,WAAA,WACC,OAAOtjB,KAAKijB,SAGbH,EAAA5iB,UAAAqjB,YAAA,WACC,OAAOvjB,KAAKgjB,UAGbF,EAAA5iB,UAAAsjB,OAAA,WACC,OAAOxjB,KAAKgjB,SAAW,GAAM,GAG9BF,EAAA5iB,UAAAujB,MAAA,WACC,OAAOzjB,KAAKgjB,SAAW,GAAM,GAG9BF,EAAA5iB,UAAA8Y,OAAA,SAAO0F,GACN,OAAO1e,KAAK4V,KAAO8I,EAAO9I,IAAM5V,KAAKsjB,eAAiB5E,EAAO4E,cAG9DR,EAAA5iB,UAAA0e,WAAA,SAAWhJ,GACV,OAAO5V,KAAK4V,KAAOA,gGAzDRkN,EAAUhiB,EAAA,CADtB4iB,EAAAA,6DACYZ,MCJb,IAAAa,GAAA,WAgBC,SAAAA,EAAoBC,EACTC,EACAC,EACAC,EACAC,GAJShkB,KAAA4jB,mBAAAA,EACT5jB,KAAA6jB,gBAAAA,EACA7jB,KAAA8jB,gBAAAA,EACA9jB,KAAA+jB,gBAAAA,EACA/jB,KAAAgkB,2BAAAA,EA4BZ,OAzBCL,EAAAzjB,UAAA6F,QAAA,SAAQoZ,OAED8E,EAAqB9E,EAAUiD,eACpC8B,EAAkB/E,EAAUkD,YAC5B8B,EAAkBhF,EAAUzJ,YAC5B0O,EAAcjF,EAAUxG,cACxB0L,EAAoBlF,EAAU7F,YAC9BwI,EAAoB3C,EAAUmD,uBAE/B,OAAO,IAAIN,GACV7C,EAAU3J,QACVxV,KAAK4jB,mBAAmB7d,QAAQke,GAChCjkB,KAAK6jB,gBAAgB9d,QAAQme,GAC7BlkB,KAAK8jB,gBAAgB/d,QAAQoe,GAC7BnkB,KAAKskB,cAAcF,GACnBpkB,KAAK+jB,gBAAgBhe,QAAQse,GAC7BrkB,KAAKgkB,2BAA2Bje,QAAQ+b,KAIlC6B,EAAAzjB,UAAAokB,cAAR,SAAsBha,GACrB,OAAOA,EAAOpC,KAAG,SAAEqc,GAClB,OAAO,IAAIzB,GAAWyB,EAAWC,QAASD,EAAWhB,cAAegB,EAAW3O,GAAI2O,EAAWjB,sCAhChGha,EAAAA,sDAXQ4V,UACA0B,UACAI,UACAK,UACAQ,MA0CT8B,EAhDA,sBCaC,SAAAc,EAAoBC,EACTC,GADX,IAAApe,EAEC6G,EAAAxM,KAAAZ,KAAM0kB,IAAqB1kB,YAFRuG,EAAAme,qBAAAA,EACTne,EAAAoe,mBAAAA,IAQZ,OAXgDtX,EAAAA,EAAAA,GAO/CoX,EAAAvkB,UAAA0kB,YAAA,SAAYzF,GACX,OAAOnf,KAAK2kB,mBAAmB5e,QAAQoZ,wBATxC7V,EAAAA,sDAJQ+U,UACAsF,MAeTc,GAXgDI,EAAAA,wBCThD,IAAAC,GAAA,SAAA1X,GAEC,SAAA0X,EAAY5G,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,sBAAoBle,KAEzC,OALuCqN,EAAAA,EAAAA,GAKvCyX,EALA,CAAuC3G,EAAAA,4BCqBtC,SAAA4G,EAA6BrQ,EAClBsQ,GADX,IAAAze,EAEC6G,EAAAxM,KAAAZ,OAAOA,YAFqBuG,EAAAmO,eAAAA,EAClBnO,EAAAye,4BAAAA,EALMze,EAAAub,kBAAoB,IAAInS,IAExBpJ,EAAA0e,mBAAqB,IAAIlN,EAAAA,cAMzCxR,EAAKmO,eACHC,QACAsJ,GACAG,GACA0G,IAEAjQ,KAAKtO,EAAKgO,aACVO,WAAS,SAAEC,OAELmJ,EAAcnJ,EAAMmQ,iBAEL3e,EAAKye,4BAA4BG,QAAQjH,GAEjDkH,WAAS,SAAE7P,OACjBuM,EAAoBvM,EAAU+M,uBACnCvS,EAAcwF,EAAUC,QAEzBjP,EAAKrE,KAAK6N,EAAa+R,WA2C5B,OAtEiDzU,EAAAA,EAAAA,GAiChD0X,EAAA7kB,UAAAmlB,wBAAA,SAAwBtV,GAEvB,OAAO/P,KAAKslB,oBAAoBvV,GAC1B8E,KACA3M,EAAAA,KAAG,SAAEqd,GAAkC,OAAAA,EAAE7X,iBAIhDqX,EAAA7kB,UAAAslB,YAAA,SAAYzV,GAEX,OAAO/P,KAAKslB,oBAAoBvV,GAC1B8E,KACA3M,EAAAA,KAAG,SAAEqd,GAAkC,OAAAA,EAAE3D,oBAIxCmD,EAAA7kB,UAAAolB,oBAAR,SAA4BvV,GAE3B,OAAO/P,KAAKilB,mBACN/M,eACArD,KACAS,EAAAA,QAAM,SAAEmQ,OAEDxkB,EAAM8O,EAAYyF,QAExB,OAAOiQ,EAAsBC,IAAIzkB,MAElCiH,EAAAA,KAAG,SAAEud,GAAmE,OAAAA,EAAsBrV,IAAIL,EAAYyF,cAI7GuP,EAAA7kB,UAAAgC,KAAR,SAAa6N,EAA0B+R,GACtC9hB,KAAK8hB,kBAAkB9R,IAAID,EAAY0F,WAAYqM,GACnD9hB,KAAKilB,mBAAmB/iB,KAAKlC,KAAK8hB,wCAnEnCxY,EAAAA,sDAZqBqc,EAAAA,sBAOblB,MA4ETM,GAtEiD9Q,ICjBjD,IAAA2R,GAAA,WAeC,SAAAA,EAAoBzQ,EACT0Q,GADS7lB,KAAAmV,oBAAAA,EACTnV,KAAA6lB,4BAAAA,EAoBZ,OAjBCD,EAAA1lB,UAAAmV,YAAA,SAAY6I,GACX,YADW,IAAAA,IAAAA,EAAApI,IACJ9V,KAAKmV,oBAAoBE,YAAY6I,IAG7C0H,EAAA1lB,UAAAmlB,wBAAA,SAAwBnH,GACvB,YADuB,IAAAA,IAAAA,EAAApI,IAChB9V,KAAKmV,oBACNE,YAAY6I,GACZrJ,KACA3M,EAAAA,KAAG,SAAEqN,GAAyB,OAAAA,EAAUqN,6BACxCzK,EAAAA,yBAIPyN,EAAA1lB,UAAAslB,YAAA,SAAYtH,GACX,YADW,IAAAA,IAAAA,EAAApI,IACJ9V,KAAK6lB,4BAA4BL,YAAYtH,wBArBrD5U,EAAAA,sDANQmL,UAGAsQ,MA2BTa,EApCA,sBCIC,SAAAE,EAAYlQ,UACXxI,EAAAxM,KAAAZ,KAAM4V,IAAG5V,KAGX,OANmCqN,EAAAA,EAAAA,GAMnCyY,GANmCjQ,EAAAA,aCFnCkQ,GAAA,WAEA,SAAAA,KAUA,2BAVClU,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,sCACVC,SAAA,6HACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,KACjCL,KAAM,CACL6T,8CAA+C,YAIjDD,EAZA,GCAAE,GAAA,WAWC,SAAAA,EAAoBC,EACTC,GADSnmB,KAAAkmB,SAAAA,EACTlmB,KAAAmmB,oBAAAA,EAUZ,OAPCF,EAAA/lB,UAAAkmB,KAAA,SAAKC,OAEEH,EAAWI,EAAAA,SAASnmB,OAAO,CAAEomB,OAAQvmB,KAAKkmB,SAAUjU,UAAW,CAAC,CAAEhD,QAAS6W,GAAe5W,SAAUmX,MAE1GrmB,KAAKmmB,oBAAoBC,KAAKL,GAAuCG,wBAXtE5c,EAAAA,sDARoBgd,EAAAA,gBAEZE,EAAAA,uBAoBTP,EAtBA,sBC8DC,SAAAQ,EAAoB5V,EACT6V,EACA9V,EACAqJ,EACA0M,EACAN,EACAO,EACAC,GAPX,IAAAtgB,EAQC6G,EAAAxM,KAAAZ,OAAOA,YARYuG,EAAAsK,kBAAAA,EACTtK,EAAAmgB,SAAAA,EACAngB,EAAAqK,WAAAA,EACArK,EAAA0T,mBAAAA,EACA1T,EAAAogB,OAAAA,EACApgB,EAAA8f,cAAAA,EACA9f,EAAAqgB,yBAAAA,EACArgB,EAAAsgB,0BAAAA,EATXtgB,EAAAugB,UAAY9I,KAsDb,OA9DiD3Q,EAAAA,EAAAA,GAqBhDoZ,EAAAvmB,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAECA,KAAKia,mBACHb,eACAvE,KACA7U,KAAKuU,aAELO,WAAS,SAAEuF,GACX9T,EAAKwgB,eAAiB1M,EACtB9T,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKia,mBACHT,qBACA3E,KACA7U,KAAKuU,aAELO,WAAS,SAAEkS,GACXzgB,EAAK0gB,kBAAoBD,EAAcrmB,OACvC4F,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAK6mB,0BACHrB,cACA3Q,KACA7U,KAAKuU,aAELO,WAAS,SAAE2M,GACXlb,EAAKkb,UAAYA,EACjBlb,EAAKmgB,SAASQ,SAAS3gB,EAAKqK,WAAWe,cAAe,cAAe,YAIxE8U,EAAAvmB,UAAAinB,SAAA,WACCnnB,KAAK2mB,OAAOP,KAAKpmB,KAAK8mB,YAGvBL,EAAAvmB,UAAAknB,kBAAA,WACCpnB,KAAK4mB,yBAAyBR,KAAKpmB,KAAKqmB,oCAjGzCxU,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,2BACVC,SAAU,i5BAiCVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDAlDAI,EAAAA,yBAAkDyU,EAAAA,iBAApB1U,EAAAA,kBAQvD4F,UANAiO,EAAAA,2BASAV,UADAG,UADAL,MAyGTa,GA9DiDjS,ICpDjD,IAAA8S,GAAA,WAUA,SAAAA,KAoBA,2BApBCnK,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAS,CACRC,EAAAA,aACAU,GACAT,EAAAA,cAEDC,aAAc,CACbkJ,GACAzI,IAEDR,QAAS,CACRQ,GACAyI,IAEDc,gBAAiB,CAChBvJ,QAKFsJ,EA9BA,GCAAE,GAAA,WAMA,SAAAA,KAiKA,OAhDCA,EAAAtnB,UAAAunB,YAAA,SAAY3gB,GAEX,OAAQA,GAEP,KAAKG,EAAS/D,KACb,OAAOlD,KAAK0nB,aAEb,KAAKzgB,EAAS9D,KACb,OAAOnD,KAAK2nB,aAEb,KAAK1gB,EAAS7D,KACb,OAAOpD,KAAK4nB,aAEb,KAAK3gB,EAAS5D,MACb,OAAOrD,KAAK6nB,cAEb,KAAK5gB,EAASzD,SACb,OAAOxD,KAAK8nB,iBAEb,KAAK7gB,EAAS3D,KACb,OAAOtD,KAAK+nB,aAEb,KAAK9gB,EAAS1D,OACb,OAAOvD,KAAKgoB,eAEb,KAAK/gB,EAAShE,OACb,OAAOjD,KAAKioB,eAEb,KAAKhhB,EAASL,SACb,OAAO5G,KAAKkoB,iBAEb,KAAKjhB,EAASjE,KACb,OAAOhD,KAAKmoB,aAEb,KAAKlhB,EAASxD,IACb,OAAOzD,KAAKooB,YAEb,KAAKnhB,EAASvD,eACb,OAAO1D,KAAKqoB,sBAEb,KAAKphB,EAAStD,WACb,OAAO3D,KAAKsoB,mBAEb,QACC,OAAOtoB,KAAK0nB,mCA7Jf7V,EAAAA,UAASC,KAAA,CAAC,CACVE,SAAU,ikEAsETa,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,4BAG/CD,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,0BAGjDD,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,0BAG/CD,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,2BAG/CD,EAAAA,UAASf,KAAA,CAAC,QAAS,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,8BAGhDD,EAAAA,UAASf,KAAA,CAAC,WAAY,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,0BAGnDD,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,4BAG/CD,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,4BAGjDD,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,8BAGjDD,EAAAA,UAASf,KAAA,CAAC,WAAY,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,0BAGnDD,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,yBAG/CD,EAAAA,UAASf,KAAA,CAAC,MAAO,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,mCAG9CD,EAAAA,UAASf,KAAA,CAAC,gBAAiB,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,gCAGxDD,EAAAA,UAASf,KAAA,CAAC,aAAc,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,OAmDvD0U,EAvKA,GCEA,kBAIC,SAAAiB,IAFQzoB,KAAA0oB,SAAW,IAAI3Q,EAAAA,cAAiB,GAYzC,OAPC0Q,EAAAvoB,UAAAgM,KAAA,SAAK/J,GACJnC,KAAK0oB,SAASxmB,KAAKC,IAGpBsmB,EAAAvoB,UAAAkV,GAAA,WACC,OAAOpV,KAAK0oB,SAASxQ,gBAEvBuQ,aCfCE,OAAA,EACAC,KAAA,EACAC,OAAA,oECKD,IAAAC,GAAA,SAAA1b,GAAA,SAAA0b,IAAA,IAAAviB,EAAA,OAAA6G,GAAAA,EAAAvM,MAAAb,KAAAU,YAAAV,YAcoBuG,EAAAwiB,eAAiB,GAEjBxiB,EAAAyiB,aAAe,KAgBnC,OAhC4D3b,EAAAA,EAAAA,GAkB3Dyb,EAAA5oB,UAAA+oB,OAAA,WACCjpB,KAAKkpB,WAAWC,GAAcR,SAG/BG,EAAA5oB,UAAAkpB,OAAA,WACCppB,KAAKkpB,WAAWC,GAAcN,SAGvBC,EAAA5oB,UAAAgpB,WAAR,SAAmBG,GACdrpB,KAAKqpB,QACRrpB,KAAKqpB,OAAOnd,KAAKmd,mCA1BlBvc,EAAAA,4BAGAA,EAAAA,sBAGAA,EAAAA,qBAGAA,EAAAA,SAqBFgc,EAhCA,CAA4DtU,ICA5D,IAAA8U,GAAA,SAAAlc,GASC,SAAAkc,EAA8BC,SAA9BhjB,EACC6G,EAAAxM,KAAAZ,OAAOA,YADsBuG,EAAAgjB,YAAAA,EAFrBhjB,EAAAijB,gBAAkB,SAI1BjjB,EAAKkjB,WAAaljB,EAAKgjB,YAAYG,QAAKC,EAAA,IACtCpjB,EAAKijB,iBAAkB,CAAC,UA4E5B,OAxF4Dnc,EAAAA,EAAAA,GAgB3Dic,EAAAppB,UAAAsL,YAAA,SAAYC,QACWvF,IAAlBuF,EAAQtJ,OACXnC,KAAKypB,WAAWrZ,IAAIpQ,KAAKwpB,iBAAiBI,SAAS5pB,KAAKmC,QAI1DmnB,EAAAppB,UAAA8Q,SAAA,WACChR,KAAK6pB,kBAGNP,EAAAppB,UAAA4pB,gBAAA,WAAA,IAAAvjB,EAAAvG,KACO+pB,EAAe/pB,KAAKgqB,SAASrY,cAEnC3R,KAAKiqB,WAAWF,GAEhB/pB,KAAKkqB,gBAAgBH,EAAa5nB,OAElCgoB,EAAAA,UAAUJ,EAAc,QACtBlV,KACA7U,KAAKuU,aAELO,WAAS,WACTvO,EAAK6N,cACL7N,EAAK0iB,gBAGDmB,EAASD,EAAAA,UAAUJ,EAAc,SAEvCK,EACEvV,KACAS,EAAAA,QAAM,SAAEhT,GAAW,OAAAA,EAAE+nB,UAAY9jB,EAAKwiB,kBACtC/oB,KAAKuU,aAELO,WAAS,WACTvO,EAAK6N,cACL7N,EAAK0iB,YAGPmB,EACEvV,KACAS,EAAAA,QAAM,SAAEhT,GAAW,OAAAA,EAAE+nB,UAAY9jB,EAAKyiB,gBACtChpB,KAAKuU,aAELO,WAAS,WACTvO,EAAK6N,cACL7N,EAAK6iB,aAIRE,EAAAppB,UAAA+pB,WAAA,SAAWF,GACN/pB,KAAKsqB,OACRP,EAAaO,SAIPhB,EAAAppB,UAAA2pB,eAAR,WAAA,IAAAtjB,EAAAvG,KACCA,KAAKypB,WACHc,SAASvqB,KAAKwpB,iBACdgB,aACA3V,KACA7U,KAAKuU,aAELO,WAAS,SAAE3S,GACXoE,EAAK2jB,gBAAgB/nB,OAIhBmnB,EAAAppB,UAAAgqB,gBAAR,SAAwB/nB,GACnBnC,KAAKwqB,cACRxqB,KAAKwqB,aAAate,KAAK/J,sCAnFxB0Q,EAAAA,UAASf,KAAA,CAAC,QAAS,CAAEgB,QAAQ,OAsF/BwW,EAxFA,CAA4DR,uBCW3D,SAAA2B,EAAYC,UACXtd,EAAAxM,KAAAZ,KAAM0qB,IAAG1qB,KAEX,OALiDqN,EAAAA,EAAAA,uBAZhDwE,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,kBACVC,SAAU,0JAOVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDAdzBmY,EAAAA,eAqBTF,GALiDnB,ICLjD,SAAgBsB,GAASC,EAAmC5pB,GAE3D,GAAkC,mBADZzB,OAAOsrB,eAAeD,GACnB5pB,GACxB,MAAM,IAAI8pB,MAAM,WAAa9pB,EAAM,eAAiB4pB,EAAU5qB,YAAY6d,KAAO,oECOlF,SAAAkN,EAAYN,UACXtd,EAAAxM,KAAAZ,KAAM0qB,IAAG1qB,KAWX,OAdiDqN,EAAAA,EAAAA,GAOhD2d,EAAA9qB,UAAA+pB,WAAA,SAAWF,GAEN/pB,KAAKsqB,QACRP,EAAaO,QACbP,EAAakB,kBAAkB,EAAGlB,EAAa5nB,MAAMxB,8BAvBvDkR,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,kBACVC,SAAU,wJAOVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDAjBzBmY,EAAAA,eA0BRO,EAAAA,CADCN,2HAQFI,GAdiD1B,ICpBjD6B,GAAA,WAMA,SAAAA,KAmEA,OArBCA,EAAAjrB,UAAAunB,YAAA,SAAY2D,GAEX,OAAQA,GAEP,KAAKnmB,EAASnC,OACb,OAAO9C,KAAKqrB,eAEb,KAAKpmB,EAASpC,OACb,OAAO7C,KAAKsrB,eAEb,KAAKrmB,EAASlC,QACb,OAAO/C,KAAKurB,gBAEb,KAAKtmB,EAASjC,KACb,OAAOhD,KAAKmoB,aAEb,QACC,OAAOnoB,KAAKwrB,oCA/Df3Z,EAAAA,UAASC,KAAA,CAAC,CACVE,SAAU,6pCA8BTa,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,4BAGjDD,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,6BAGjDD,EAAAA,UAASf,KAAA,CAAC,UAAW,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,0BAGlDD,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,2BAG/CD,EAAAA,UAASf,KAAA,CAAC,QAAS,CAAEyW,KAAMC,EAAAA,YAAa1V,QAAQ,OAwBlDqY,EAzEA,sBC4BC,SAAAM,IAAA,IAAAllB,EACC6G,EAAAxM,KAAAZ,OAAOA,YAHCuG,EAAAijB,gBAAkB,gBAW5B,OAhBkDnc,EAAAA,EAAAA,GAWjDoe,EAAAvrB,UAAAwrB,OAAA,SAAOC,GACN3rB,KAAKwqB,aAAate,KAAKyf,GACvB3rB,KAAKipB,8BA7BNpX,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,mBACVC,SAAU,uOAWVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,oFAIhCK,EAAAA,UAASf,KAAA,CAAC,WAAY,CAAEyW,KAAM5V,EAAAA,WAAYG,QAAQ,OAcpD2Y,GAhBkD3C,ICrBlD,IAAA8C,GAAA,WAGA,SAAAA,KAcA,2BAdC/Z,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,aACVC,SAAU,6CAIT6Z,EAAAA,aAAY/Z,KAAA,CAAC0W,EAAAA,YAAa,CAAE1V,QAAQ,oBAKpChG,EAAAA,SAGF8e,EAjBA,GCAA,IAAAE,GAAA,WAqBC,SAAAA,EAAoBC,GAAA/rB,KAAA+rB,UAAAA,EAOrB,OAJCD,EAAA5rB,UAAAsL,YAAA,WACCxL,KAAKgsB,SAAWhsB,KAAK+rB,UAAUE,wBAAwBjsB,KAAKksB,8BArB7Dra,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,oBACVC,SAAU,mDAKVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDAXzB2Z,EAAAA,iDAePrf,EAAAA,SAYFgf,EA5BA,sBCOA,SAAAM,mDAEA,OAD8C/e,EAAAA,EAAAA,uBAD7C/D,EAAAA,aAED8iB,GAD8C9N,EAAAA,8BCI7C,SAAA+N,EAAYC,EACTC,UACFnf,EAAAxM,KAAAZ,KAAMssB,EAA0BC,IAAuBvsB,KAGzD,OAPuDqN,EAAAA,EAAAA,uBADtD/D,EAAAA,sDAHQ8iB,UAJAI,EAAAA,0BAeTH,GAPuDI,EAAAA,uCCJvD,SAAAC,mDAMA,OAN6Drf,EAAAA,EAAAA,GAM7Dqf,GAN6DC,EAAAA,wCCM5D,SAAAC,EAAoBC,GAApB,IAAAtmB,EACC6G,EAAAxM,KAAAZ,OAAOA,YADYuG,EAAAsmB,kCAAAA,IAYrB,OAd4Dxf,EAAAA,EAAAA,GAM3Duf,EAAA1sB,UAAAilB,QAAA,SAAQjH,GACP,OAAOle,KAAK6sB,kCAAkC1H,QAAQjH,IAGvD0O,EAAA1sB,UAAA4sB,KAAA,SAAK3N,GACJnf,KAAK6sB,kCAAkCC,KAAK3N,wBAZ7C7V,EAAAA,sDAJQ+iB,MAmBTO,GAd4DF,ICJ5D,kBAMC,SAAAK,EAAuCC,EACxBC,GADwBjtB,KAAAgtB,6BAAAA,EACxBhtB,KAAAitB,yBAAAA,EALPjtB,KAAAktB,UAAwD,IAAIvd,IAE5D3P,KAAAmtB,mBAAsC,KAI7CntB,KAAKotB,2BAyCP,OApCCL,EAAA7sB,UAAAmtB,aAAA,WACC,OAAOrtB,KAAKktB,WAGbH,EAAA7sB,UAAAotB,QAAA,WACKttB,KAAKmtB,qBACRntB,KAAKmtB,mBAAmBG,UACxBttB,KAAKmtB,mBAAqB,OAIpBJ,EAAA7sB,UAAAktB,yBAAR,eAEOG,EAAmBvtB,KAAKitB,yBAAyBO,wBAAwBxtB,KAAKgtB,8BAE9E9G,EAAqBI,EAAAA,SAASnmB,OAAO,CAAE8R,UAAW,KAExDjS,KAAKmtB,mBAAqBI,EAAiBptB,OAAO+lB,GAElDlmB,KAAKytB,eAGEV,EAAA7sB,UAAAutB,YAAR,WAAA,IAAAlnB,EAAAvG,KACCA,KAAK0tB,kBACHlnB,SAAO,SAAE5B,GACT2B,EAAKonB,mBAAmB/oB,OAInBmoB,EAAA7sB,UAAAytB,mBAAR,SAA2BC,OAEpB5b,EAAWhS,KAAKmtB,mBAAmBU,SAASpG,YAAYmG,GAE9D5tB,KAAKktB,UAAUld,IAAI4d,EAAI5b,IAGzB+a,wBC7CC,SAAAe,EAAYb,UACX7f,EAAAxM,KAAAZ,KACCwnB,GACAyF,IACAjtB,KAOH,OAbyCqN,EAAAA,EAAAA,GASxCygB,EAAA5tB,UAAAwtB,gBAAA,WACC,OAAOluB,OAAOuuB,KAAK9mB,GACdiB,KAAG,SAACjH,GAAO,OAAAgG,EAAShG,2BAZ1BqI,EAAAA,sDAPQ0kB,EAAAA,4BAqBTF,GAbyCf,ICRzCkB,GAAA,WAQC,SAAAA,EAAoBC,GAAAluB,KAAAkuB,sBAAAA,EASrB,OANCD,EAAA/tB,UAAAiuB,aAAA,SAAarnB,GAGZ,OAFuB9G,KAAKkuB,sBAAsBb,eAE5Bjd,IAAItJ,wBAT3BwC,EAAAA,sDAJQwkB,MAgBTG,EAjBA,sBCSC,SAAAG,EAAYnB,UACX7f,EAAAxM,KAAAZ,KACCmrB,GACA8B,IACAjtB,KAOH,OAbyCqN,EAAAA,EAAAA,GASxC+gB,EAAAluB,UAAAwtB,gBAAA,WACC,OAAOluB,OAAOuuB,KAAK9oB,GACdiD,KAAG,SAACjH,GAAO,OAAAgE,EAAShE,2BAZ1BqI,EAAAA,sDANQ0kB,EAAAA,4BAoBTI,GAbyCrB,ICPzCsB,GAAA,WAQC,SAAAA,EAAoBC,GAAAtuB,KAAAsuB,oBAAAA,EASrB,OANCD,EAAAnuB,UAAAiuB,aAAA,SAAa/C,GAGZ,OAFuBprB,KAAKsuB,oBAAoBjB,eAE1Bjd,IAAIgb,wBAT3B9hB,EAAAA,sDAJQ8kB,MAgBTC,EAjBA,WCCClqB,IAAA,EACAC,KAAA,EACAJ,KAAA,0DCHD,IAAAuqB,GAAA,WAmBC,SAAAA,EAAYC,GAFKxuB,KAAAyuB,iBAAgB,SAA8BtsB,GAAe,OAAAA,GAInD,mBAAfqsB,GACVxuB,KAAK8G,KAAOG,EAASL,SACrB5G,KAAKyuB,iBAAmBD,GAExBxuB,KAAK8G,KAAO0nB,EAYf,OAhCeD,EAAAG,aAAd,SAA2BtD,GAE1B,OAAIA,IAAanmB,EAASjC,KAClB,IAAIurB,EAAWtnB,EAASjE,MAExB,IAAIurB,EAAWtnB,EAAS/D,OAmBjCqrB,EAAAruB,UAAAyuB,YAAA,WACC,OAAO3uB,KAAK8G,MAGbynB,EAAAruB,UAAA0uB,oBAAA,WACC,OAAO5uB,KAAKyuB,kBAGdF,EArCA,GCQA,kBAgBC,SAAAM,EAAsBC,EACfC,EACA1mB,EACAC,EACAd,EACAV,EACA0B,GACNxI,KAAK8uB,SAAWA,EAChB9uB,KAAK+uB,YAAcA,EACnB/uB,KAAKqI,aAAeA,EAEpBrI,KAAK8G,KAAOynB,GAAWG,aAAaK,EAAYC,eAE5C1mB,IACHtI,KAAKsI,OAASA,GAGXxB,IACH9G,KAAK8G,KAAOA,GAGT0B,IACHxI,KAAKwI,MAAQA,GAGdxI,KAAKivB,gBAAgBF,EAAavnB,GA4FpC,OAzFCqnB,EAAA3uB,UAAAgvB,gBAAA,WACC,OAAOlvB,KAAKqI,cAGbwmB,EAAA3uB,UAAAivB,YAAA,WACC,OAAOnvB,KAAK8uB,UAGbD,EAAA3uB,UAAAkvB,SAAA,WACC,OAAOpvB,KAAK+uB,aAGbF,EAAA3uB,UAAAmvB,UAAA,WACC,OAAOrvB,KAAKsI,QAGbumB,EAAA3uB,UAAA8uB,YAAA,WACC,OAAOhvB,KAAK+uB,YAAYC,eAGzBH,EAAA3uB,UAAAyuB,YAAA,WACC,OAAO3uB,KAAK8G,KAAK6nB,eAGlBE,EAAA3uB,UAAA0uB,oBAAA,WACC,OAAO5uB,KAAK8G,KAAK8nB,uBAGlBC,EAAA3uB,UAAAovB,QAAA,SAAQxoB,GACP9G,KAAK8G,KAAOA,GAGb+nB,EAAA3uB,UAAAqvB,UAAA,SAAUjnB,GACTtI,KAAKsI,OAASA,GAGfumB,EAAA3uB,UAAAsvB,QAAA,WACC,OAAOxvB,KAAK8G,MAGb+nB,EAAA3uB,UAAAuvB,SAAA,WACC,OAAOzvB,KAAKwH,OAGbqnB,EAAA3uB,UAAAwvB,SAAA,SAASlnB,GACRxI,KAAKwI,MAAQA,GAGdqmB,EAAA3uB,UAAAggB,SAAA,WACC,OAAOlgB,KAAKwI,OAGbqmB,EAAA3uB,UAAAyvB,kBAAA,eACOroB,EAAStH,KAAKqI,aAEpB,QAAuBnC,IAAnBoB,EAAOoB,SAA4C,OAAnBpB,EAAOoB,QAE1C,YAA+BxC,IAA3BoB,EAAOoB,QAAQvC,SAAoD,OAA3BmB,EAAOoB,QAAQvC,SAGpDmB,EAAOoB,QAAQvC,SAIxB0oB,EAAA3uB,UAAA0vB,qBAAA,eACOtoB,EAAStH,KAAKqI,aAEpB,YAA2BnC,IAAvBoB,EAAOqB,aAAoD,OAAvBrB,EAAOqB,mBAEXzC,IAA/BoB,EAAOqB,YAAYxC,SAAwD,OAA/BmB,EAAOqB,YAAYxC,SAG5DmB,EAAOqB,YAAYxC,UAMpB0oB,EAAA3uB,UAAA+uB,gBAAR,SAAwBF,EAA0BvnB,GAE7CA,MAAAA,EACHxH,KAAKwH,MAAQA,EACHunB,EAAYC,gBAAkB/pB,EAASpC,OACjD7C,KAAKwH,MAAQE,EAAYnD,MAEzBvE,KAAKwH,MAAQE,EAAYjD,MAI5BoqB,KCpIA,IAAAgB,GAAA,SAAAziB,GAQC,SAAAyiB,EAAYf,EACTC,EACA1mB,EACAC,EACAd,EACAV,EACA0B,GANH,IAAAjC,EAOC6G,EAAAxM,KAAAZ,KACC8uB,EACAC,EACA1mB,EACAC,EACAd,EACAV,EACA0B,IACAxI,YArBFuG,EAAAupB,UAAYC,GAAU/rB,KAIduC,EAAAJ,SAAmB,IAgC5B,OAtCkCkH,EAAAA,EAAAA,GA0BjCwiB,EAAA3vB,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGb0pB,EAAA3vB,UAAA8vB,WAAA,SAAW7pB,GACVnG,KAAKmG,QAAUA,GAGhB0pB,EAAA3vB,UAAA+vB,cAAA,SAAc5G,GACbrpB,KAAK8vB,UAAYzG,GAGnBwG,EAtCA,CAAkChB,ICAlC,kBAEC,SAAAqB,EAAmBC,EACTC,EAEAC,EACA7nB,EACU8nB,EACAxB,EACAyB,EACApqB,EACAqqB,EACAhpB,GAVDxH,KAAAmwB,aAAAA,EACTnwB,KAAAowB,aAAAA,EAEApwB,KAAAqwB,QAAAA,EACArwB,KAAAwI,MAAAA,EACUxI,KAAAswB,QAAAA,EACAtwB,KAAA8uB,SAAAA,EACA9uB,KAAAuwB,WAAAA,EACAvwB,KAAAmG,QAAAA,EACAnG,KAAAwwB,SAAAA,EACAxwB,KAAAwH,MAAAA,EA+CrB,OA5CC0oB,EAAAhwB,UAAAivB,YAAA,WACC,OAAOnvB,KAAK8uB,UAGboB,EAAAhwB,UAAAuwB,WAAA,WACC,OAAOzwB,KAAKswB,SAGbJ,EAAAhwB,UAAAwwB,cAAA,WACC,OAAO1wB,KAAKuwB,YAGbL,EAAAhwB,UAAAywB,cAAA,WACC,OAAO3wB,KAAKwwB,UAGbN,EAAAhwB,UAAA0wB,UAAA,WACC,OAAO5wB,KAAKuwB,aAAeR,GAAU5rB,KAGtC+rB,EAAAhwB,UAAA2wB,WAAA,WACC,OAAO7wB,KAAKuwB,aAAeR,GAAU3rB,MAGtC8rB,EAAAhwB,UAAA4wB,SAAA,WACC,OAAO9wB,KAAKuwB,aAAeR,GAAU/rB,MAGtCksB,EAAAhwB,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGb+pB,EAAAhwB,UAAA6wB,YAAA,WACC,OAAO/wB,KAAKwH,QAAUE,EAAYjD,MAGnCyrB,EAAAhwB,UAAA8wB,cAAA,WACC,OAAOhxB,KAAKwH,QAAUE,EAAYlD,QAGnC0rB,EAAAhwB,UAAA+wB,aAAA,WACC,OAAOjxB,KAAKwH,QAAUE,EAAYnD,OAGpC2rB,KCpEA,IAAAgB,GAEC,SAAmBhF,GAAAlsB,KAAAksB,QAAAA,GCFpB,IAAAiF,GAAA,WAIC,SAAAA,EAAYvb,GACX5V,KAAK4V,GAAKA,EAeZ,OAZCub,EAAAjxB,UAAAsV,MAAA,WACC,OAAOxV,KAAK4V,IAGbub,EAAAjxB,UAAAuV,SAAA,WACC,OAAOzV,KAAK4V,IAGbub,EAAAjxB,UAAA8Y,OAAA,SAAOsX,GACN,OAAOA,EAAQ9a,UAAYxV,KAAK4V,IAGlCub,EApBA,GCIA,IAAAC,GAAA,WAQC,SAAAA,EAAmBpf,EACToe,EACAiB,EACAC,EACAC,EACAC,EACAhpB,EACAipB,EACUjqB,EACAkqB,EACA9sB,EACAkC,GAXD9G,KAAAgS,SAAAA,EACThS,KAAAowB,aAAAA,EACApwB,KAAAqxB,SAAAA,EACArxB,KAAAsxB,YAAAA,EACAtxB,KAAAuxB,SAAAA,EACAvxB,KAAAwxB,eAAAA,EACAxxB,KAAAwI,MAAAA,EACAxI,KAAAyxB,cAAAA,EACUzxB,KAAAwH,MAAAA,EACAxH,KAAA0xB,mBAAAA,EACA1xB,KAAA4E,KAAAA,EACA5E,KAAA8G,KAAAA,EA8FrB,OA3FCsqB,EAAAlxB,UAAA0vB,qBAAA,WACC,OAAO5vB,KAAK0xB,oBAGbN,EAAAlxB,UAAAyxB,kBAAA,WACC,OAAO3xB,KAAK4E,OAASK,EAASlC,SAG/BquB,EAAAlxB,UAAA6wB,YAAA,WACC,OAAO/wB,KAAKwH,QAAUE,EAAYjD,MAGnC2sB,EAAAlxB,UAAA8wB,cAAA,WACC,OAAOhxB,KAAKwH,QAAUE,EAAYlD,QAGnC4sB,EAAAlxB,UAAA+wB,aAAA,WACC,OAAOjxB,KAAKwH,QAAUE,EAAYnD,OAInC6sB,EAAAlxB,UAAA0xB,SAAA,SAASlT,EAAoBmT,GAE5B,OAAO7xB,KAAKsxB,YAAYtxB,KAAK8xB,UAAUpT,EAAQmT,KAGxCT,EAAAlxB,UAAA4xB,UAAR,SAAkBpT,EAAoBmT,OAC/B1vB,EAAQnC,KAAKuxB,SAAS7S,GAE5B,GAAI1e,KAAK4E,OAASK,EAASnC,OAC1B,OAAOX,EAGR,GAAInC,KAAK8G,MAAQ9G,KAAK8G,KAAK6nB,gBAAkB1nB,EAASL,SACrD,OAAOzE,EAGR,GAAI0vB,EAAc,CAUjB,QARIE,EAAc,GAAK/xB,KAAKwxB,eAAe9S,GAC1CsT,EAAyBD,EAAI7sB,oBAC7B+sB,EAAsBJ,EAAa3sB,oBAEhCgtB,EAA2B,GAE3B3iB,EAAQ,EAELA,EAAQ0iB,EAAoBtxB,QAAQ,KAEpCwxB,EAAQH,EAAeI,QAAQH,EAAqB1iB,GAEtD4iB,GAAS,GACZD,EAAU1vB,KAAK2vB,GACf5iB,EAAQ4iB,EAAQN,EAAalxB,QAG7B4O,EAAQ0iB,EAAoBtxB,WAIxB0xB,EAAMN,EAAIO,MAAM,IAyBtB,OAvBAJ,EAAU1rB,SAAO,SAAE+rB,GAElB,IAAK,IAAI/xB,EAAI,EAAGA,EAAIqxB,EAAalxB,OAAQH,GAAK,EAAG,KAE5CgyB,OAAE,EAGLA,EADS,IAANhyB,EACE,oCAAoC6xB,EAAIE,EAAM/xB,GAE9C6xB,EAAIE,EAAM/xB,GAGZA,IAAMqxB,EAAalxB,OAAS,IAC/B6xB,GAAM,WAGPH,EAAIE,EAAM/xB,GAAKgyB,MAKjBT,EAAMM,EAAII,KAAK,IAIf,OAAOzyB,KAAKuxB,SAAS7S,IAIxB0S,EAjHA,GCDA,IAAAsB,GAAA,WAsCC,SAAAA,EAAYnqB,EACTumB,EACA3oB,EACiBvB,EACAkC,EACAU,EACjBc,EACAopB,EACAiB,EACAnC,QADA,IAAAmC,IAAAA,EAAkB5C,GAAU/rB,WAC5B,IAAAwsB,IAAAA,GAAA,GANiBxwB,KAAA4E,KAAAA,EACA5E,KAAA8G,KAAAA,EACA9G,KAAAwH,MAAAA,EAbZxH,KAAAwwB,UAAoB,EAkB3BxwB,KAAKuI,MAAQA,EACbvI,KAAK8uB,SAAWA,EAChB9uB,KAAKmG,QAAUA,EACfnG,KAAKsI,OAASA,EACdtI,KAAK0xB,mBAAqBA,EAC1B1xB,KAAKuwB,WAAaoC,EAClB3yB,KAAKwwB,SAAWA,EAkElB,OA/DCkC,EAAAxyB,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGbusB,EAAAxyB,UAAAqvB,UAAA,SAAUjnB,GACTtI,KAAKsI,OAASA,GAGfoqB,EAAAxyB,UAAA0yB,SAAA,SAASrqB,GACRvI,KAAKuI,MAAQA,GAGdmqB,EAAAxyB,UAAA2yB,iCAAA,SAAiCtjB,OAG5BujB,EADExqB,EAActI,KAAKsI,OAGH,iBAAXA,EACVwqB,EAAoB,IAAI5B,GAAY5oB,GACR,mBAAXA,IACjBwqB,EAAoB,IAAI5B,GAAY5oB,EAAOiH,SAGtC+gB,EAAU,IAAIa,GAAQnxB,KAAKuI,MAAMiN,QAAQA,SAE/C,OAAO,IAAI0a,GACVlwB,KAAK+yB,eACL/yB,KAAKowB,aACL0C,EACA9yB,KAAKwI,MACL8nB,EACAtwB,KAAK8uB,SACL9uB,KAAKuwB,WACLvwB,KAAKmG,QACLnG,KAAKwwB,SACLxwB,KAAKwH,QAIPkrB,EAAAxyB,UAAA8yB,mCAAA,WAAA,IAAAzsB,EAAAvG,KAQC,OAAO,IAAIoxB,GACVpxB,KAAKizB,aACLjzB,KAAKowB,cACL,EACApwB,KAAKyuB,kBAVQ,SAAI/P,GACjB,OAAOnY,EAAKgC,MAAM2qB,aAAX3sB,CAAyBmY,MAChB,SAAIA,GACpB,OAAOnY,EAAKgC,MAAM4qB,mBAAX5sB,CAA+BmY,KAUtC1e,KAAKwI,MACLxI,KAAKuI,MAAMiN,QACXxV,KAAKwH,MACLxH,KAAK0xB,mBACL1xB,KAAK4E,KACL5E,KAAK8G,OAIR4rB,EAxHA,GCHA,IAAAU,GAAA,WAcC,SAAAA,EAAoBC,EACTC,GADStzB,KAAAqzB,uBAAAA,EACTrzB,KAAAszB,uBAAAA,EAqFZ,OAhFCF,EAAAlzB,UAAAC,OAAA,SAAOozB,GAEN,OAAIA,aAAkB1D,GACd7vB,KAAKwzB,uBAAuBD,GAE5BvzB,KAAKyzB,6BAA6BF,IAInCH,EAAAlzB,UAAAszB,uBAAR,SAA+BD,OAE1BG,EAAY,IAAIhB,GACnBa,EAAOnE,WACPmE,EAAOpE,cACPoE,EAAO7lB,YACP6lB,EAAOvE,cACPuE,EAAO/D,UACP+D,EAAO9D,WACP8D,EAAOlE,YACPkE,EAAO3D,uBACP2D,EAAOzD,UACPyD,EAAO5D,qBAYR,OATA+D,EAAUT,aAAejzB,KAAK2zB,iBAAiBJ,EAAO5E,eACtD+E,EAAUX,eAAiB/yB,KAAK2zB,iBAAiB1sB,EAAS/D,MAE1DwwB,EAAUjF,iBAAmB8E,EAAO3E,sBAEpC8E,EAAUtD,aAAepwB,KAAK4zB,iBAAiBL,EAAOvE,eAEtD0E,EAAUlrB,OAAS+qB,EAAOrT,WAEnBwT,GAGAN,EAAAlzB,UAAAuzB,6BAAR,SAAqCI,OAEhCH,EAAY,IAAIhB,GACnBmB,EAAazE,WACbyE,EAAa1E,eACb,EACA0E,EAAa7E,cACb6E,EAAarE,UACbqE,EAAapE,WACboE,EAAaxE,YACbwE,EAAajE,uBACbiE,EAAanD,gBACbmD,EAAalE,qBAYd,OATA+D,EAAUT,aAAejzB,KAAK2zB,iBAAiBE,EAAalF,eAC5D+E,EAAUX,eAAiB/yB,KAAK2zB,iBAAiB1sB,EAAS/D,MAE1DwwB,EAAUjF,iBAAmBoF,EAAajF,sBAE1C8E,EAAUtD,aAAepwB,KAAK4zB,iBAAiBC,EAAa7E,eAE5D0E,EAAUlrB,OAASqrB,EAAa3T,WAEzBwT,GAGRN,EAAAlzB,UAAA4zB,cAAA,SAAcvpB,GAAd,IAAAhE,EAAAvG,KACC,OAAOuK,EAAQrC,KAAG,SAAEqrB,GAAyB,OAAAhtB,EAAKpG,OAAOozB,OAGlDH,EAAAlzB,UAAAyzB,iBAAR,SAAyB7sB,GAExB,OAAIA,IAASG,EAASL,SACd5G,KAAKqzB,uBAAuBlF,aAAalnB,EAASL,UAElD5G,KAAKqzB,uBAAuBlF,aAAarnB,IAI1CssB,EAAAlzB,UAAA0zB,iBAAR,SAAyBxI,GACxB,OAAOprB,KAAKszB,uBAAuBnF,aAAa/C,wBAtFjD9hB,EAAAA,sDATQ2kB,UACAI,MAiGT+E,EApGA,GCOA,IAAAW,GAAA,SAAA3mB,GAEC,SAAA2mB,EAAY9R,EACQ+R,EACAC,EACAC,EACA1rB,EACA2rB,GALpB,IAAA5tB,EAMC6G,EAAAxM,KAAAZ,KAAMiiB,IAAIjiB,YALSuG,EAAAytB,MAAAA,EACAztB,EAAA0tB,WAAAA,EACA1tB,EAAA2tB,cAAAA,EACA3tB,EAAAiC,MAAAA,EACAjC,EAAA4tB,YAAAA,IAqDrB,OA5DiC9mB,EAAAA,EAAAA,GAWhC0mB,EAAA7zB,UAAAk0B,iBAAA,WACC,OAAOp0B,KAAKk0B,eAGbH,EAAA7zB,UAAAm0B,cAAA,WACC,OAAOr0B,KAAKi0B,YAGbF,EAAA7zB,UAAAo0B,uBAAA,WACC,OAAOt0B,KAAKo0B,mBACNlsB,KAAG,SAAEqrB,EAA0BhkB,GAAkB,OAAAgkB,EAAOV,iCAAiCtjB,OAGhGwkB,EAAA7zB,UAAAq0B,iBAAA,WACC,OAAOv0B,KAAKq0B,gBACNnsB,KAAG,SAAEqrB,EAA0BhkB,GAAkB,OAAAgkB,EAAOV,iCAAiCtjB,OAGhGwkB,EAAA7zB,UAAAs0B,mBAAA,WACC,OAAOx0B,KAAKo0B,mBACNlsB,KAAG,SAAEqrB,GAA6B,OAAAA,EAAOP,yCAGhDe,EAAA7zB,UAAAggB,SAAA,WACC,OAAOlgB,KAAKwI,OAGburB,EAAA7zB,UAAAu0B,kBAAA,WACC,OAAQz0B,KAAKwI,MAAQ,GAGtBurB,EAAA7zB,UAAAw0B,QAAA,WACC,OAAO10B,KAAKg0B,OAGbD,EAAA7zB,UAAAy0B,qBAAA,WACC,OAAO30B,KAAKm0B,aAGbJ,EAAA7zB,UAAA8Y,OAAA,SAAO4b,GACN,OAAO50B,KAAKwI,QAAUosB,EAAYpsB,OACjCxI,KAAKm0B,cAAgBS,EAAYT,aACjCn0B,KAAK60B,gBAAgBD,EAAYX,aAGnCF,EAAA7zB,UAAA20B,gBAAA,SAAgBtqB,GACf,OAAOvK,KAAKi0B,WAAWtzB,SAAW4J,EAAQ5J,QAG5CozB,EA5DA,CAAiClR,EAAAA,WCPjC,IAAAiS,GAAA,WAaC,SAAAA,EAAoBC,GAAA/0B,KAAA+0B,wBAAAA,EA6CrB,OA1CCD,EAAA50B,UAAA6F,QAAA,SAAQoZ,OAED6U,EAAQ7U,EAAUuV,UACvBT,EAAkC9U,EAAU6V,aAC5Cd,EAA2C/U,EAAUiV,mBACrDa,EAAyCj1B,KAAKk1B,mBAAmBjB,GACjEkB,EAA4Cn1B,KAAKo1B,gCAAgClB,GACjF1rB,EAAQ2W,EAAUe,WAClBiU,EAAchV,EAAUkW,kBACxBzf,EAAKuJ,EAAU3J,QAEhB,OAAO,IAAIue,GAAYne,EAAIoe,EAAOiB,EAAeE,EAAkB3sB,EAAO2rB,IAGnEW,EAAA50B,UAAAg1B,mBAAR,SAA2B3qB,GAA3B,IAAAhE,EAAAvG,KAEOs1B,EAAsC,GAS5C,OAPA/qB,EAAQ/D,SAAO,SAAE+sB,OAEVG,EAAYntB,EAAKwuB,wBAAwB50B,OAAOozB,GAEtD+B,EAAW9yB,KAAKkxB,MAGV4B,GAGAR,EAAA50B,UAAAk1B,gCAAR,SAAwClB,GAAxC,IAAA3tB,EAAAvG,KAEOs1B,EAAsC,GAS5C,OAPApB,EAAc1tB,SAAO,SAAE+sB,OAEhBG,EAAYntB,EAAKwuB,wBAAwB50B,OAAOozB,GAEtD+B,EAAW9yB,KAAKkxB,MAGV4B,uBA7CRhsB,EAAAA,sDARQ8pB,MAwDT0B,EA1DA,sBCaC,SAAAS,EAAoBjJ,EACTkJ,GADX,IAAAjvB,EAEC6G,EAAAxM,KAAAZ,KAAMssB,IAAyBtsB,YAFZuG,EAAA+lB,yBAAAA,EACT/lB,EAAAivB,qBAAAA,IAQZ,OAXkDnoB,EAAAA,EAAAA,GAOjDkoB,EAAAr1B,UAAA0kB,YAAA,SAAYzF,GACX,OAAOnf,KAAKw1B,qBAAqBzvB,QAAQoZ,wBAT1C7V,EAAAA,sDAJQ8iB,UACA0I,MAeTS,GAXkD1Q,EAAAA,wBCJlD,mBAEC,SAAA4Q,EAAsB/gB,UACrBtH,EAAAxM,KAAAZ,KAAM0U,IAAe1U,KAIvB,OAPoDqN,EAAAA,EAAAA,GAOpDooB,GAPoDC,EAAAA,qBCLpD,IAAAC,GAAA,SAAAvoB,GAEC,SAAAuoB,EAAYzX,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,4BAA0Ble,KAE/C,OAL6CqN,EAAAA,EAAAA,GAK7CsoB,EALA,CAA6CxX,EAAAA,aCA7CyX,GAAA,SAAAxoB,GAEC,SAAAwoB,EAAY1X,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,mCAAiCle,KAEtD,OALoDqN,EAAAA,EAAAA,GAKpDuoB,EALA,CAAoDzX,EAAAA,aCApD0X,GAAA,SAAAzoB,GAEC,SAAAyoB,EAAY3X,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,+BAA6Ble,KAElD,OALgDqN,EAAAA,EAAAA,GAKhDwoB,EALA,CAAgD1X,EAAAA,aCAhD2X,GAAA,SAAA1oB,GAEC,SAAA0oB,EAAY5X,EACT6X,UACF3oB,EAAAxM,KAAAZ,KAAMke,EAAa,oCAAqC6X,IAAQ/1B,KAGlE,OAPuDqN,EAAAA,EAAAA,GAOvDyoB,EAPA,CAAuD3X,EAAAA,aCAvD6X,GAAA,SAAA5oB,GAEC,SAAA4oB,EAAY9X,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,6BAA2Ble,KAEhD,OAL8CqN,EAAAA,EAAAA,GAK9C2oB,EALA,CAA8C7X,EAAAA,aCI9C8X,GAAA,SAAA7oB,GAEC,SAAA6oB,EAAY/X,EACQgW,GADpB,IAAA3tB,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,qCAAmCle,YADnCuG,EAAA2tB,cAAAA,IAYrB,OAfsD7mB,EAAAA,EAAAA,GAOrD4oB,EAAA/1B,UAAAg2B,iBAAA,WACC,OAAOl2B,KAAKklB,kBAGb+Q,EAAA/1B,UAAAk0B,iBAAA,WACC,OAAOp0B,KAAKk0B,eAGd+B,EAfA,CAAsD9X,EAAAA,aCJtD,IAAAgY,GAAA,SAAA/oB,GAEC,SAAA+oB,EAAYjY,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,qCAAmCle,KAExD,OALsDqN,EAAAA,EAAAA,GAKtD8oB,EALA,CAAsDhY,EAAAA,aCAtDiY,GAAA,SAAAhpB,GAEC,SAAAgpB,EAAYlY,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,oCAAkCle,KAEvD,OALqDqN,EAAAA,EAAAA,GAKrD+oB,EALA,CAAqDjY,EAAAA,aCArDkY,GAAA,SAAAjpB,GAEC,SAAAipB,EAAYnY,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,qCAAmCle,KAExD,OALsDqN,EAAAA,EAAAA,GAKtDgpB,EALA,CAAsDlY,EAAAA,4BCyBrD,SAAAmY,EAAY5hB,EACD6hB,GADX,IAAAhwB,EAEC6G,EAAAxM,KAAAZ,KAAM0U,IAAe1U,YADXuG,EAAAgwB,8BAAAA,EALMhwB,EAAAiwB,2BAA6B,IAAI7mB,IAEjCpJ,EAAAkwB,aAAe,IAAI1e,EAAAA,cAAwC,KAkD7E,OAtDmD1K,EAAAA,EAAAA,GAWlDipB,EAAAp2B,UAAAkV,GAAA,SAAG8I,GAEF,OAAOle,KAAKy2B,aACNve,eACArD,KACAS,EAAAA,QAAM,SAAEkhB,OAEDv1B,EAAMid,EAAY1I,QAExB,OAAOghB,EAA2B9Q,IAAIzkB,MAEvCiH,EAAAA,KAAG,SAAEsuB,GAAyD,OAAAA,EAA2BpmB,IAAI8N,EAAY1I,cAItG8gB,EAAAp2B,UAAA0U,UAAV,WACC,MAAO,CACN+gB,GACAC,GACAC,GACAC,GACAE,GACAG,GACAC,GACAC,QAKQC,EAAAp2B,UAAA4U,UAAV,SAAoBC,GAApB,IAAAxO,EAAAvG,KAEOke,EAAcnJ,EAAMmQ,iBAEHllB,KAAKu2B,8BAA8BpR,QAAQjH,GAEnDkH,WAAS,SAAEwP,OACnB3zB,EAAM2zB,EAAYpf,QAAQC,WAEhClP,EAAKiwB,2BAA2BxmB,IAAI/O,EAAK2zB,GAEzCruB,EAAKkwB,aAAav0B,KAAKqE,EAAKiwB,oDApD9BltB,EAAAA,sDAhBkCqc,EAAAA,sBAI1B4P,MAmETe,GAtDmDb,ICbnD,IAAaiB,GAAsC,CAClDrK,GACA,CACCpd,QAASyd,GACTiK,SAAU/J,KAICgK,GAAoC,CAChDrB,GACA,CACCtmB,QAASwmB,GACTkB,SAAUL,KAICO,GAA+B,CAC3CzK,ICpBD0K,GAAA,SAAA1pB,GAEC,SAAA0pB,EAA6BzQ,GAA7B,IAAA9f,EACC6G,EAAAxM,KAAAZ,KAAMqmB,EAAe,6BAA2BrmB,YADpBuG,EAAA8f,cAAAA,IAI9B,OAN8ChZ,EAAAA,EAAAA,GAM9CypB,EANA,CAA8CxgB,EAAAA,SCE9C,IAAAygB,GAAA,SAAA3pB,GAEC,SAAA2pB,EAAqB1Q,EACD9b,GADpB,IAAAhE,EAEC6G,EAAAxM,KAAAZ,KAAMqmB,EAAe,sBAAoBrmB,YAFrBuG,EAAA8f,cAAAA,EACD9f,EAAAgE,QAAAA,IAQrB,OAXuC8C,EAAAA,EAAAA,GAOtC0pB,EAAA72B,UAAA82B,UAAA,WACC,OAAOh3B,KAAKuK,SAGdwsB,EAXA,CAAuCzgB,EAAAA,SCHvC,IAAA2gB,GAAA,SAAA7pB,GAEC,SAAA6pB,EAA6BlnB,EACTvH,GADpB,IAAAjC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,+BAA6B/P,YAFpBuG,EAAAwJ,YAAAA,EACTxJ,EAAAiC,MAAAA,IAQrB,OAXgD6E,EAAAA,EAAAA,GAO/C4pB,EAAA/2B,UAAAggB,SAAA,WACC,OAAOlgB,KAAKwI,OAGdyuB,EAXA,CAAgD3gB,EAAAA,SCAhD,IAAA4gB,GAAA,SAAA9pB,GAEC,SAAA8pB,EAA6BnnB,EACTvH,GADpB,IAAAjC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,wCAAsC/P,YAF7BuG,EAAAwJ,YAAAA,EACTxJ,EAAAiC,MAAAA,IAQrB,OAXyD6E,EAAAA,EAAAA,GAOxD6pB,EAAAh3B,UAAAggB,SAAA,WACC,OAAOlgB,KAAKwI,OAGd0uB,EAXA,CAAyD5gB,EAAAA,SCAzD,IAAA6gB,GAAA,SAAA/pB,GAEC,SAAA+pB,EAA6BpnB,EACT5J,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,qCAAmC/P,YAF1BuG,EAAAwJ,YAAAA,EACTxJ,EAAAJ,QAAAA,IAQrB,OAXsDkH,EAAAA,EAAAA,GAOrD8pB,EAAAj3B,UAAAk3B,WAAA,WACC,OAAOp3B,KAAKmG,SAGdgxB,EAXA,CAAsD7gB,EAAAA,SCEtD,IAAA+gB,GAAA,SAAAjqB,GAEC,SAAAiqB,EAAqBhR,EACDiR,GADpB,IAAA/wB,EAEC6G,EAAAxM,KAAAZ,KAAMqmB,EAAe,uCAAqCrmB,YAFtCuG,EAAA8f,cAAAA,EACD9f,EAAA+wB,WAAAA,IAYrB,OAfwDjqB,EAAAA,EAAAA,GAOvDgqB,EAAAn3B,UAAAg2B,iBAAA,WACC,OAAOl2B,KAAKqmB,eAGbgR,EAAAn3B,UAAAq3B,cAAA,WACC,OAAOv3B,KAAKs3B,YAGdD,EAfA,CAAwD/gB,EAAAA,SCDxD,IAAAkhB,GAAA,SAAApqB,GAEC,SAAAoqB,EAAqBnR,EACDyI,EACA3oB,GAFpB,IAAAI,EAGC6G,EAAAxM,KAAAZ,KAAMqmB,EAAe,uCAAqCrmB,YAHtCuG,EAAA8f,cAAAA,EACD9f,EAAAuoB,SAAAA,EACAvoB,EAAAJ,QAAAA,IAYrB,OAhBwDkH,EAAAA,EAAAA,GAQvDmqB,EAAAt3B,UAAAivB,YAAA,WACC,OAAOnvB,KAAK8uB,UAGb0I,EAAAt3B,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGdqxB,EAhBA,CAAwDlhB,EAAAA,SCAxD,IAAAmhB,GAAA,SAAArqB,GAEC,SAAAqqB,EAAqBpR,EACDyI,GADpB,IAAAvoB,EAEC6G,EAAAxM,KAAAZ,KAAMqmB,EAAe,qCAAmCrmB,YAFpCuG,EAAA8f,cAAAA,EACD9f,EAAAuoB,SAAAA,IAQrB,OAXsDzhB,EAAAA,EAAAA,GAOrDoqB,EAAAv3B,UAAAivB,YAAA,WACC,OAAOnvB,KAAK8uB,UAGd2I,EAXA,CAAsDnhB,EAAAA,SCAtD,IAAAohB,GAAA,SAAAtqB,GAEC,SAAAsqB,EAAqBrR,EACDyI,GADpB,IAAAvoB,EAEC6G,EAAAxM,KAAAZ,KAAMqmB,EAAe,sCAAoCrmB,YAFrCuG,EAAA8f,cAAAA,EACD9f,EAAAuoB,SAAAA,IAQrB,OAXuDzhB,EAAAA,EAAAA,GAOtDqqB,EAAAx3B,UAAAivB,YAAA,WACC,OAAOnvB,KAAK8uB,UAGd4I,EAXA,CAAuDphB,EAAAA,SCLvD,IAAAqhB,GAAA,WAsBC,SAAAA,EAAoB/gB,GAAA5W,KAAA4W,kBAAAA,EAuCrB,OApCC+gB,EAAAz3B,UAAA03B,kBAAA,SAAkBvR,GACjBrmB,KAAK4W,kBAAkBE,SAAS,IAAIggB,GAAyBzQ,KAG9DsR,EAAAz3B,UAAA23B,WAAA,SAAWxR,EAA8ByR,GACxC93B,KAAK4W,kBAAkBE,SAAS,IAAIigB,GAAkB1Q,EAAeyR,KAGtEH,EAAAz3B,UAAAwvB,SAAA,SAASrJ,EAA8B7d,GACtCxI,KAAK4W,kBAAkBE,SAAS,IAAImgB,GAA2B5Q,EAAe7d,KAG/EmvB,EAAAz3B,UAAA63B,kBAAA,SAAkB1R,EAA8B7d,GAC/CxI,KAAK4W,kBAAkBE,SAAS,IAAIogB,GAAoC7Q,EAAe7d,KAGxFmvB,EAAAz3B,UAAA83B,eAAA,SAAe3R,EAA8BlgB,GAC5CnG,KAAK4W,kBAAkBE,SAAS,IAAIqgB,GAAiC9Q,EAAelgB,KAGrFwxB,EAAAz3B,UAAA+3B,WAAA,SAAW5R,EAA8ByR,GACxC93B,KAAK4W,kBAAkBE,SAAS,IAAIugB,GAAmChR,EAAeyR,KAGvFH,EAAAz3B,UAAAg4B,iBAAA,SAAiB7R,EAA8ByI,EAAoB3oB,GAClEnG,KAAK4W,kBAAkBE,SAAS,IAAI0gB,GAAmCnR,EAAeyI,EAAU3oB,KAGjGwxB,EAAAz3B,UAAAi4B,SAAA,SAAS9R,EAA8ByI,GACtC9uB,KAAK4W,kBAAkBE,SAAS,IAAI2gB,GAAiCpR,EAAeyI,KAGrF6I,EAAAz3B,UAAAk4B,UAAA,SAAU/R,EAA8ByI,GACvC9uB,KAAK4W,kBAAkBE,SAAS,IAAI4gB,GAAkCrR,EAAeyI,yBAvCtFxlB,EAAAA,sDAjBQ4N,EAAAA,qBA2DTygB,EA7DA,GCAA,IAAAU,GAAA,WAIC,SAAAA,EAAYziB,GACX5V,KAAK4V,GAAKA,EAWZ,OARCyiB,EAAAn4B,UAAAsV,MAAA,WACC,OAAOxV,KAAK4V,IAGbyiB,EAAAn4B,UAAA8Y,OAAA,SAAO8V,GACN,OAAO9uB,KAAK4V,KAAOkZ,EAAStZ,SAG9B6iB,EAhBA,GCAA,IAAAC,GAAA,WAYA,SAAAA,KA8DA,OAzDCA,EAAAp4B,UAAAC,OAAA,SAAO4iB,GAEN,OAAIpjB,MAAM44B,QAAQxV,GACV/iB,KAAK8zB,cAAc/Q,GAEnB/iB,KAAKw4B,aAAazV,IAInBuV,EAAAp4B,UAAAs4B,aAAR,SAAqBV,OAEdzvB,EAA6ByvB,EAAOW,YACzClwB,EAAqBuvB,EAAO1I,WAEzBsJ,EAAe,IAAI7I,GACtB,IAAIwI,GAASnV,EAAAA,sBAAsBC,YACnC5a,EACAF,OACAnC,EACAmC,EAAab,OAqBd,YAlB6BtB,IAAzBmC,EAAalC,SAChBuyB,EAAa1I,WAAW3nB,EAAalC,cAGVD,IAAxBmC,EAAaC,QAChBowB,EAAanJ,UAAUlnB,EAAaC,aAGXpC,IAAtBmC,EAAavB,MAChB4xB,EAAapJ,QAAQ,IAAIf,GAAWlmB,EAAavB,YAGvBZ,IAAvBmC,EAAaG,OAChBkwB,EAAahJ,SACZ1vB,KAAK24B,aAAatwB,EAAaG,QAI1BkwB,GAGAJ,EAAAp4B,UAAA4zB,cAAR,SAAsBvpB,GAAtB,IAAAhE,EAAAvG,KAEK44B,EAAc,GAMlB,OAJAruB,EAAQ/D,SAAO,SAAE+sB,GAChBqF,EAAep2B,KAAK+D,EAAKiyB,aAAajF,OAGhCqF,GAGAN,EAAAp4B,UAAAy4B,aAAR,SAAqBnwB,GACpB,OAAQA,uBA5DTc,EAAAA,aA8DDgvB,EA1EA,GCEaO,GAC6B,0CAD7BA,GAEc,2BAFdA,GAGgC,6CAHhCA,GAIuB,oCAJvBA,GAK+B,4CAL/BA,GAM8B,2CAN9BA,GAO+B,4CCT5CC,GAAA,WAeA,SAAAA,KA4DA,OAvDCA,EAAA54B,UAAA6F,QAAA,SAAQgzB,GAEP,OAAIp5B,MAAM44B,QAAQQ,GACV/4B,KAAKg5B,cAAcD,GAEnB/4B,KAAKi5B,aAAaF,IAInBD,EAAA54B,UAAA84B,cAAR,SAAsBE,GAAtB,IAAA3yB,EAAAvG,KACC,OAAOk5B,EAAgBhxB,KAAG,SAAE6M,GAC3B,OAAOxO,EAAK0yB,aAAalkB,OAInB+jB,EAAA54B,UAAA+4B,aAAR,SAAqBE,GAEpB,OAAQA,EAAeC,WACtB,KAAKP,GAEJ,OAAO,IAAIjD,GAA+BuD,EAAejU,kBAE1D,KAAK2T,GAEJ,OAAO,IAAIhD,GAA2BsD,EAAejU,kBAEtD,KAAK2T,OAEE9C,EAAU,EAA+DvpB,eAE/E,OAAO,IAAIspB,GAAkCqD,EAAejU,iBAAkB6Q,GAE/E,KAAK8C,GAEJ,OAAO,IAAI7C,GAAyBmD,EAAejU,kBAEpD,KAAK2T,GAEJ,OAAO,IAAI1C,GAAiCgD,EAAejU,kBAE5D,KAAK2T,GAEJ,OAAO,IAAIzC,GAAgC+C,EAAejU,kBAE3D,KAAK2T,GAEJ,OAAO,IAAIxC,GAAiC8C,EAAejU,wCAnD9D5b,EAAAA,aA4DDwvB,EA3EA,GCOAO,GAAA,WAUC,SAAAA,EAAY/I,EACTiB,EACAnG,EACAoG,GACFxxB,KAAKswB,QAAUA,EACftwB,KAAKuxB,SAAWA,EAChBvxB,KAAKorB,SAAWA,EAChBprB,KAAKwxB,eAAiBA,EAuBxB,OApBC6H,EAAAn5B,UAAAsV,MAAA,WACC,OAAOxV,KAAKswB,SAGb+I,EAAAn5B,UAAA0xB,SAAA,SAASlT,GACR,OAAO1e,KAAKuxB,SAAS7S,IAGtB2a,EAAAn5B,UAAAgzB,YAAA,WACC,OAAOlzB,KAAKuxB,UAGb8H,EAAAn5B,UAAAizB,kBAAA,WACC,OAAOnzB,KAAKwxB,gBAGb6H,EAAAn5B,UAAA8uB,YAAA,WACC,OAAOhvB,KAAKorB,UAGdiO,EAxCA,GCPA,IAAAC,GAAA,WASA,SAAAA,KAOA,OAJCA,EAAAp5B,UAAAC,OAAA,SAAOsxB,EAA8BF,EAA+BnG,EAAoBoG,GACvF,OAAO,IAAI6H,GAAY5H,EAAeF,EAAUnG,EAAUoG,wBAJ3DloB,EAAAA,aAODgwB,EAhBA,GCAAC,GAAA,WAcC,SAAAA,EAA6B7kB,GAAA1U,KAAA0U,eAAAA,EAsC9B,OAnCC6kB,EAAAr5B,UAAAs5B,iBAAA,SAAiBnT,GAEhB,OAAOrmB,KAAK0U,eACNC,QACAkhB,IAEAhhB,KACAS,EAAAA,QAAM,SAAEP,GAAuB,OAAAA,EAAMmQ,iBAAiBzP,aAAe4Q,EAAc5Q,gBAc1F8jB,EAAAr5B,UAAAu5B,wBAAA,SAAwBpT,GACvB,OAAOrmB,KAAK0U,eACNC,QACAmhB,IAEAjhB,KACAS,EAAAA,QAAM,SAAEP,GAAuB,OAAAA,EAAMmQ,iBAAiBlM,OAAOqN,MAC7Dne,EAAAA,KAAG,SAAE6M,GACJ,OAAOA,EAAM2kB,gBAEdpkB,EAAAA,QAAM,SAAE9M,GAAkB,QAAEA,2BArCnCc,EAAAA,sDAPqBqc,EAAAA,kBAgDtB4T,EApDA,GCEA,IAAaI,GAAsB,IAAI7T,GAAc,MCFrD8T,GAAA,WAiBC,SAAAA,EAAoBC,GAAA75B,KAAA65B,sBAAAA,EA0ErB,OAvECD,EAAA15B,UAAA45B,QAAA,SAAQzT,GACP,YADO,IAAAA,IAAAA,EAAAsT,IACA35B,KAAK65B,sBACNzkB,GAAGiR,GACHxR,KACA3M,EAAAA,KAAG,SAAE0sB,GAA6B,OAAAA,EAAY1U,gBAIrD0Z,EAAA15B,UAAA65B,iBAAA,SAAiB1T,GAChB,YADgB,IAAAA,IAAAA,EAAAsT,IACT35B,KAAK65B,sBACNzkB,GAAGiR,GACHxR,KACA3M,EAAAA,KAAG,SAAE0sB,GAA6B,OAAAA,EAAYH,yBAIrDmF,EAAA15B,UAAA85B,qBAAA,SAAqB3T,GACpB,YADoB,IAAAA,IAAAA,EAAAsT,IACb35B,KAAK65B,sBACNzkB,GAAGiR,GACHxR,KACA3M,EAAAA,KAAG,SAAE0sB,GAA6B,OAAAA,EAAYP,gBAAgBnsB,KAAG,SAAC/G,GAAK,OAAAA,EAAEqH,cAIhFoxB,EAAA15B,UAAA+5B,gBAAA,SAAgB5T,GACf,YADe,IAAAA,IAAAA,EAAAsT,IACR35B,KAAK65B,sBACNzkB,GAAGiR,GACHxR,KACA3M,EAAAA,KAAG,SAAE0sB,GAA6B,OAAAA,EAAYN,8BAIrDsF,EAAA15B,UAAAg6B,aAAA,SAAa7T,GACZ,YADY,IAAAA,IAAAA,EAAAsT,IACL35B,KAAK65B,sBACNzkB,GAAGiR,GACHxR,KACA3M,EAAAA,KAAG,SAAE0sB,GAA6B,OAAAA,EAAYL,wBAIrDqF,EAAA15B,UAAAi6B,YAAA,SAAY7J,EAAkBjK,GAC7B,YAD6B,IAAAA,IAAAA,EAAAsT,IACtB35B,KAAK65B,sBACNzkB,GAAGiR,GACHxR,KACA3M,EAAAA,KAAG,SAAE0sB,GAA6B,OAAAA,EAAYN,4BAC9CpsB,EAAAA,KAAG,SAAEqC,GACJ,OAAOA,EAAQ+K,QAAM,SAAEnU,GAAM,OAAAA,EAAEsvB,aAAazX,OAAOsX,SAEpDhb,EAAAA,QAAM,SAAE/K,GACP,OAAOA,EAAQ5J,OAAS,KAEzBuH,EAAAA,KAAG,SAACqC,GAAW,OAAAA,EAAQ,GAAGmmB,qBAIjCkJ,EAAA15B,UAAAk6B,kBAAA,SAAkB/T,GACjB,YADiB,IAAAA,IAAAA,EAAAsT,IACV35B,KAAK65B,sBACNzkB,GAAGiR,GACHxR,KACA3M,EAAAA,KAAG,SAAE0sB,GAA6B,OAAAA,EAAYJ,0BAIrDoF,EAAA15B,UAAAm6B,cAAA,SAAchU,GACb,YADa,IAAAA,IAAAA,EAAAsT,IACN35B,KAAK65B,sBACNzkB,GAAGiR,GACHxR,KACA3M,EAAAA,KAAG,SAAE0sB,GAA6B,OAAAA,EAAYD,gDAzErDrrB,EAAAA,sDAVQmsB,MAuFTmE,EA3FA,GCAA,IAAAU,GAAA,WAYC,SAAAA,EAAoBC,GAAAv6B,KAAAu6B,sBAAAA,EAuCrB,OApCCD,EAAAp6B,UAAA03B,kBAAA,SAAkBvR,QAAA,IAAAA,IAAAA,EAAAsT,IACjB35B,KAAKu6B,sBAAsB3C,kBAAkBvR,IAG9CiU,EAAAp6B,UAAA23B,WAAA,SAAWC,EAA6BzR,QAAA,IAAAA,IAAAA,EAAAsT,IACvC35B,KAAKu6B,sBAAsB1C,WAAWxR,EAAeyR,IAGtDwC,EAAAp6B,UAAAwvB,SAAA,SAASlnB,EAAe6d,QAAA,IAAAA,IAAAA,EAAAsT,IACvB35B,KAAKu6B,sBAAsB7K,SAASrJ,EAAe7d,IAGpD8xB,EAAAp6B,UAAA63B,kBAAA,SAAkBvvB,EAAe6d,QAAA,IAAAA,IAAAA,EAAAsT,IAChC35B,KAAKu6B,sBAAsBxC,kBAAkB1R,EAAe7d,IAG7D8xB,EAAAp6B,UAAA83B,eAAA,SAAe7xB,EAAkBkgB,QAAA,IAAAA,IAAAA,EAAAsT,IAChC35B,KAAKu6B,sBAAsBvC,eAAe3R,EAAelgB,IAG1Dm0B,EAAAp6B,UAAAs6B,aAAA,SAAa1L,EAAoBzI,QAAA,IAAAA,IAAAA,EAAAsT,IAChC35B,KAAKu6B,sBAAsBrC,iBAAiB7R,EAAeyI,GAAU,IAGtEwL,EAAAp6B,UAAAu6B,cAAA,SAAc3L,EAAoBzI,QAAA,IAAAA,IAAAA,EAAAsT,IACjC35B,KAAKu6B,sBAAsBrC,iBAAiB7R,EAAeyI,GAAU,IAGtEwL,EAAAp6B,UAAAi4B,SAAA,SAASrJ,EAAoBzI,QAAA,IAAAA,IAAAA,EAAAsT,IAC5B35B,KAAKu6B,sBAAsBpC,SAAS9R,EAAeyI,IAGpDwL,EAAAp6B,UAAAk4B,UAAA,SAAUtJ,EAAoBzI,QAAA,IAAAA,IAAAA,EAAAsT,IAC7B35B,KAAKu6B,sBAAsBnC,UAAU/R,EAAeyI,wBAvCrDxlB,EAAAA,sDAPQquB,MAiDT2C,EAnDA,GCKA,IAAAI,GAAA,SAAAttB,GAEC,SAAAstB,EAAYxc,EACQmI,EACAsU,GAFpB,IAAAp0B,EAGC6G,EAAAxM,KAAAZ,KAAMke,EAAa,oBAAkBle,YAFlBuG,EAAA8f,cAAAA,EACA9f,EAAAo0B,WAAAA,IAWrB,OAfsCttB,EAAAA,EAAAA,GAQrCqtB,EAAAx6B,UAAAg2B,iBAAA,WACC,OAAOl2B,KAAKqmB,eAGbqU,EAAAx6B,UAAA06B,cAAA,WACC,OAAO56B,KAAK26B,YAEdD,EAfA,CAAsCvc,EAAAA,aCLtC,IAAA0c,GAAA,WAIC,SAAAA,EAAYjlB,GACX5V,KAAK4V,GAAKA,EAOZ,OAJCilB,EAAA36B,UAAAsV,MAAA,WACC,OAAOxV,KAAK4V,IAGdilB,EAZA,GCEA,IAAAC,GAEC,SAA4BxK,EACTyK,GADS/6B,KAAAswB,QAAAA,EACTtwB,KAAA+6B,UAAAA,GCDpB,IAAAC,GAAA,SAAA5tB,GAEC,SAAA4tB,EAAY9c,EACQmI,EACAsU,GAFpB,IAAAp0B,EAGC6G,EAAAxM,KAAAZ,KAAMke,EAAa,sBAAoBle,YAFpBuG,EAAA8f,cAAAA,EACA9f,EAAAo0B,WAAAA,IAWrB,OAfuCttB,EAAAA,EAAAA,GAQtC2tB,EAAA96B,UAAAg2B,iBAAA,WACC,OAAOl2B,KAAKqmB,eAGb2U,EAAA96B,UAAA06B,cAAA,WACC,OAAO56B,KAAK26B,YAEdK,EAfA,CAAuC7c,EAAAA,gCCWtC,SAAA8c,EAAoBV,GAApB,IAAAh0B,EACC6G,EAAAxM,KAAAZ,OAAOA,YADYuG,EAAAg0B,sBAAAA,IAoCrB,OAtC6DltB,EAAAA,EAAAA,GAM5D4tB,EAAA/6B,UAAAg7B,OAAA,SAAOnmB,GAEN,GAAIA,aAAiB2lB,GAAkB,KAEhCrU,EAAgBtR,EAAMmhB,mBAGxB4B,EAFI/iB,EAAM6lB,gBAEI1yB,KAAG,SAAEizB,OAEhB1J,EAAgB,IAAIoJ,GAAcM,EAAI7K,QAAQ9a,SAEpD,OAAO,IAAIslB,GAAiBrJ,EAAe0J,EAAIJ,cAGhD/6B,KAAKu6B,sBAAsBtC,WAAW5R,EAAeyR,GAGtD,GAAI/iB,aAAiBimB,GAAmB,CAEjC3U,EAAgBtR,EAAMmhB,mBAGxB4B,EAFI/iB,EAAM6lB,gBAEI1yB,KAAG,SAAEizB,OAEhB1J,EAAgB,IAAIoJ,GAAcM,EAAI7K,QAAQ9a,SAEpD,OAAO,IAAIslB,GAAiBrJ,EAAe0J,EAAIJ,cAGhD/6B,KAAKu6B,sBAAsBtC,WAAW5R,EAAeyR,yBApCvDxuB,EAAAA,sDANQquB,MA6CTsD,GAtC6DG,EAAAA,oBCL7D,IAAAC,GAAA,SAAAjuB,GAEC,SAAAiuB,EAAYnd,EACOmI,EACA9b,EACC+wB,GAHpB,IAAA/0B,EAIC6G,EAAAxM,KAAAZ,KAAMke,EAAa,sBAAoBle,YAHrBuG,EAAA8f,cAAAA,EACA9f,EAAAgE,QAAAA,EACChE,EAAA+0B,OAAAA,IAOrB,OAZuCjuB,EAAAA,EAAAA,GAStCguB,EAAAn7B,UAAAq7B,UAAA,WACC,OAAOv7B,KAAKs7B,QAEdD,EAZA,CAAuCld,EAAAA,aCLvC,IAAAqd,GAAA,WAEC,SAAAA,EAA6BjI,EACThrB,GADSvI,KAAAuzB,OAAAA,EACTvzB,KAAAuI,MAAAA,EAWrB,OARCizB,EAAAt7B,UAAAu4B,UAAA,WACC,OAAOz4B,KAAKuzB,QAGbiI,EAAAt7B,UAAAkvB,SAAA,WACC,OAAOpvB,KAAKuI,OAGdizB,EAdA,sBCcC,SAAAC,EAAoBlB,EACAmB,GADpB,IAAAn1B,EAEC6G,EAAAxM,KAAAZ,OAAOA,YAFYuG,EAAAg0B,sBAAAA,EACAh0B,EAAAm1B,mBAAAA,IA4CrB,OA/CyDruB,EAAAA,EAAAA,GAOxDouB,EAAAv7B,UAAAg7B,OAAA,SAAOnmB,GAEN,GAAIA,aAAiBsmB,GAAmB,KAGjCC,EAASvmB,EAAMwmB,YACpBI,EAAiB37B,KAAK47B,sBAAsBN,GAC5C/wB,EAAUwK,EAAMxK,QAChButB,EAAS93B,KAAK67B,eAAetxB,EAAS+wB,EAAQK,GAE/C37B,KAAKu6B,sBAAsB1C,WAAW9iB,EAAMsR,cAAeyR,KAIrD2D,EAAAv7B,UAAA07B,sBAAR,SAA8BN,GAE7B,OAAKA,EAIEA,EAAOpzB,KAAG,SAAEK,GAAiB,OAAA,IAAIsyB,GAActyB,EAAMiN,QAAQA,YAH5D,IAMDimB,EAAAv7B,UAAA27B,eAAR,SAAuBtxB,EAA8B+wB,EAAsBK,GAA3E,IAAAp1B,EAAAvG,KAEC,OAAKuK,EAIEA,EAAQrC,KAAG,SAAEqrB,EAAsBhkB,OAEnCkiB,EAAgBkK,EAAepsB,GACpChH,EAAQ+yB,EAAO/rB,GAEVwf,EAAcxoB,EAAKm1B,mBAAmBv7B,OAAOsxB,EAAelpB,EAAMuzB,oBAAqBvzB,EAAMymB,cAAezmB,EAAMwzB,2BAExH,OAAO,IAAIP,GAAajI,EAAQxE,MAVzB,wBAlCTzlB,EAAAA,sDAPQquB,UACA2B,MAsDTmC,GA/CyDL,EAAAA,wBCSnDY,GAAgBt5B,EAClBg0B,GAAmC,CACtCiB,GACAW,GACAQ,GACAQ,KAGK2C,GAAav5B,EACfk0B,GAAiC,CACpC,CACC3nB,QAASitB,EAAAA,sBACTvF,SAAU8E,GACVU,OAAO,GACL,CACFltB,QAASitB,EAAAA,sBACTvF,SAAUsE,GACVkB,OAAO,GAER/I,GACAnF,GACAH,GACAM,GACAC,KAGY+N,GAAoB15B,EAC7Bm0B,GACAmF,GACAC,GAAa,CAEhBnH,GAEAwF,GACAV,GACAL,KC3DD8C,GAAA,WAQC,SAAAA,EAAsBtQ,GAAA/rB,KAAA+rB,UAAAA,EAYvB,OAVCsQ,EAAAn8B,UAAAwd,UAAA,SAAUvb,EAAYyC,GACrB,OAAQA,GACP,IAAK,OAAQ,OAAO5E,KAAK+rB,UAAUE,wBAAwB9pB,GAC3D,IAAK,QAAS,OAAOnC,KAAK+rB,UAAUuQ,yBAAyBn6B,GAC7D,IAAK,SAAU,OAAOnC,KAAK+rB,UAAUwQ,0BAA0Bp6B,GAC/D,IAAK,MAAO,OAAOnC,KAAK+rB,UAAUyQ,uBAAuBr6B,GACzD,IAAK,cAAe,OAAOnC,KAAK+rB,UAAU0Q,+BAA+Bt6B,GACzE,QAAS,MAAM,IAAI4oB,MAAM,gCAAgCnmB,yBAd3DiZ,EAAAA,KAAI/L,KAAA,CAAC,CACLgM,KAAM,uDAHEqO,EAAAA,gBAmBTkQ,EApBA,GCAA,IAAAK,GAAA,WAKA,SAAAA,KAYA,2BAZCvf,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAS,CACRC,EAAAA,cAEDE,aAAc,CACb8e,IAED7e,QAAS,CACR6e,QAIFK,EAjBA,GCEAC,GAAA,WAEC,SAAAA,EAA6BC,GAAA58B,KAAA48B,iBAAAA,EA4B9B,OAzBCD,EAAAz8B,UAAA28B,kBAAA,SAAkBC,GAEX,IAAAnT,EAAA3pB,KAAA+8B,iBAAAD,GAAEE,EAAArT,EAAAqT,cAAeC,EAAAtT,EAAAsT,aAGnBC,EAAM,EAOV,OANAF,EAAcx2B,SAAO,SAAErF,GACtB+7B,GAAO/7B,EAAE+e,cAGVgd,GAAOD,EAAat8B,OAASX,KAAK48B,kBAK3BD,EAAAz8B,UAAA68B,iBAAR,SAAyBxyB,GAAzB,IAAAhE,EAAAvG,KAKC,MAAO,CACNg9B,cAJmBzyB,EAAQ+K,QAAM,SAAE6nB,GAA6B,OAAAA,EAAYC,gBAAkBD,EAAYjd,WAAa3Z,EAAKq2B,oBAK5HK,aAJe1yB,EAAQ+K,QAAM,SAAE6nB,GAA6B,OAAAA,EAAYE,cAAgBF,EAAYG,oBAAuBH,EAAYC,gBAAkBD,EAAYjd,YAAc3Z,EAAKq2B,sBAO3LD,EA9BA,GCAA,IAAAY,GAAA,SAAAnwB,GAEC,SAAAmwB,EAAYrf,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,sCAAoCle,KAGzD,OANuDqN,EAAAA,EAAAA,GAMvDkwB,EANA,CAAuDC,EAAAA,gBCGvDC,GAAA,SAAArwB,GAEC,SAAAqwB,EAAYpX,EACO7Z,GADnB,IAAAjG,EAEC6G,EAAAxM,KAAAZ,KAAMqmB,EAAe,+CAA6CrmB,YADhDuG,EAAAiG,eAAAA,IAGpB,OANgEa,EAAAA,EAAAA,GAMhEowB,EANA,CAAgED,EAAAA,gBCDhE,IAAAE,GAAA,SAAAtwB,GAEC,SAAAswB,EAAYrX,UACXjZ,EAAAxM,KAAAZ,KAAMqmB,EAAe,4CAA0CrmB,KAEjE,OAL6DqN,EAAAA,EAAAA,GAK7DqwB,EALA,CAA6DF,EAAAA,gBCD7DG,GAAA,SAAAvwB,GAEC,SAAAuwB,EAAYzf,EACQgW,GADpB,IAAA3tB,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,8CAA4Cle,YAD5CuG,EAAA2tB,cAAAA,IAQrB,OAX+D7mB,EAAAA,EAAAA,GAO9DswB,EAAAz9B,UAAAk0B,iBAAA,WACC,OAAOp0B,KAAKk0B,eAGdyJ,EAXA,CAA+DH,EAAAA,wBCF9D75B,WAAA,EACAd,OAAA,EACA+6B,KAAA,4ECHD,IAAAC,GAAA,WAUC,SAAAA,EAAYr1B,GACXxI,KAAK89B,UAAYt1B,EACjBxI,KAAK+9B,gBAAgBv1B,GAuEvB,OApECq1B,EAAA39B,UAAAggB,SAAA,WACC,OAAOlgB,KAAKwI,OAGbq1B,EAAA39B,UAAA89B,cAAA,WACC,OAAOh+B,KAAKgS,UAGb6rB,EAAA39B,UAAAo9B,iBAAA,WACC,OAAOt9B,KAAKgS,WAAaisB,GAAgBt6B,YAG1Ck6B,EAAA39B,UAAAm9B,WAAA,WACC,OAAOr9B,KAAKgS,WAAaisB,GAAgBL,MAG1CC,EAAA39B,UAAAk9B,aAAA,WACC,OAAOp9B,KAAKgS,WAAaisB,GAAgBp7B,QAG1Cg7B,EAAA39B,UAAAwvB,SAAA,SAASlnB,GACRxI,KAAKwI,MAAQA,GAGdq1B,EAAA39B,UAAA69B,gBAAA,SAAgBv1B,GAEXA,MAAAA,GAAmD,SAAVA,GAE5CxI,KAAKgS,SAAWisB,GAAgBL,KAChC59B,KAAK0vB,SAAS,OAEJ1vB,KAAKk+B,aAAa11B,IAE5BxI,KAAKgS,SAAWisB,GAAgBt6B,WAChC3D,KAAK0vB,SAAS1vB,KAAKm+B,mBAAmB,GAAK31B,MAEjCxI,KAAKo+B,eAAe51B,GAE9BxI,KAAKgS,SAAWisB,GAAgBp7B,OAChC7C,KAAK0vB,UAAUlnB,KAQjBq1B,EAAA39B,UAAAm+B,MAAA,WACC,OAAO,IAAIR,EAAY79B,KAAK89B,YAGrBD,EAAA39B,UAAAg+B,aAAR,SAAqB11B,GACpB,MAAwB,iBAAVA,GAAkD,MAA5BA,EAAMA,EAAM7H,OAAS,IAOlDk9B,EAAA39B,UAAAi+B,mBAAR,SAA2B31B,GAC1B,OAASA,EAAMmT,MAAM,GAAI,IAGlBkiB,EAAA39B,UAAAk+B,eAAR,SAAuB51B,OAChB81B,GAAiB91B,EAEvB,OAAO+1B,OAAOC,MAAMF,IAEtBT,EAnFA,GCGA,IAAAY,GAAA,WAIC,SAAAA,EAAoBn0B,EACT9B,EACSo0B,GAFA58B,KAAAsK,OAAAA,EACTtK,KAAAwI,MAAAA,EACSxI,KAAA48B,iBAAAA,EACnB58B,KAAKuK,QAAUvK,KAAKsK,OAAOpC,KAAG,SAAE/G,GAAM,OAAAA,EAAEk9B,WAoG1C,OAjGCI,EAAAv+B,UAAAmc,UAAA,eAEK7T,EAAQxI,KAAKwI,MAChB+B,EAAO7H,EAAO1C,KAAKuK,SAGpBvK,KAAK0+B,mBAAmBn0B,OAGpBo0B,EAAiC,GAarC,GAXAp0B,EAAQ/D,SAAO,SAAE+sB,EAAqBhkB,GACjCgkB,EAAO6J,eACV50B,GAAS+qB,EAAOrT,WAEhBye,EAAWn8B,KAAK+wB,MAOK,KAHvBhpB,EAAUo0B,GAGEh+B,OAAc,KAEnBi+B,EAAYp2B,EAAQ+B,EAAQ5J,OAElC4J,EAAQ/D,SAAO,SAAE+sB,EAAqBhkB,GACrCgkB,EAAO7D,SAASkP,MAqBlB,OAAO5+B,KAAKuK,SAGLk0B,EAAAv+B,UAAAw+B,mBAAR,SAA2Bn0B,GAA3B,IAAAhE,EAAAvG,KACCuK,EAAQ/D,SAAO,SAAE+sB,GACZA,EAAO6J,gBACN7J,EAAOrT,WAAa3Z,EAAKq2B,kBAC5BrJ,EAAOwK,gBAAgBx3B,EAAKq2B,sBAMxB6B,EAAAv+B,UAAA2+B,sBAAR,mBAE2B7+B,KAAKuK,QAAQ+K,QAAM,SAAE6nB,GAA6B,OAAAA,EAAYG,0BAExF,IAAmB,IAAAwB,EAAAC,EAAA/+B,KAAKuK,SAAOy0B,EAAAF,EAAA58B,QAAA88B,EAAA58B,KAAA48B,EAAAF,EAAA58B,OAAE,CAA5B,IAAIqxB,EAAMyL,EAAA78B,MACVoxB,EAAOyK,kBAAoBC,GAAgBt6B,YAC9C4vB,EAAO7D,SAAS1vB,KAAKwI,MAAQ+qB,EAAOrT,WAAa,yGAK5Cue,EAAAv+B,UAAA++B,gBAAR,WAKC,YAHIC,EAAYl/B,KAAKwI,MACpB22B,EAAc,GAEN3+B,EAAI,EAAGA,EAAIR,KAAKuK,QAAQ5J,OAAQH,GAAK,EAAG,EAE5C+yB,EAASvzB,KAAKuK,QAAQ/J,IAEfw9B,kBAAoBC,GAAgBL,KAC9CsB,GAAa3L,EAAOrT,WAEpBif,EAAY38B,KAAK+wB,GAInB,GAAI4L,EAAYx+B,OAAS,EAAG,KACrBy+B,EAAaF,EAAYC,EAAYx+B,WAE3C,IAAmB,IAAA0+B,EAAAN,EAAAI,GAAWG,EAAAD,EAAAn9B,QAAAo9B,EAAAl9B,KAAAk9B,EAAAD,EAAAn9B,OAAE,CAA3B,IAAIqxB,GAAAA,EAAM+L,EAAAn9B,OACPutB,SAAS0P,wGAKpBX,EA3GA,GCHA,IAAAc,GAAA,WAcC,SAAAA,EAA6B3C,EAC1BryB,EACA/B,QADA,IAAA+B,IAAAA,EAAA,SACA,IAAA/B,IAAAA,EAAA,KAF0BxI,KAAA48B,iBAAAA,EAG5B58B,KAAKw/B,iBAAmBj1B,EAAQrC,KAAG,SAAEqrB,GAAyB,OAAA,IAAIsK,GAAYtK,EAAO/qB,UACrFxI,KAAK88B,aAAevyB,EAAQrC,KAAG,SAAEqrB,GAAyB,OAAA,IAAIsK,GAAYtK,EAAO/qB,UAEjFxI,KAAK+3B,kBAAkBvvB,GAEvBxI,KAAKqc,YAyDP,OAtDCkjB,EAAAr/B,UAAAu/B,gBAAA,WACC,OAAOz/B,KAAKw/B,kBAGbD,EAAAr/B,UAAAw/B,gBAAA,WACC,OAAO1/B,KAAKwI,OAGb+2B,EAAAr/B,UAAAy/B,UAAA,WACC,OAAO3/B,KAAK88B,aAAa50B,KAAG,SAAC/G,GAAK,OAAAA,EAAE+e,eAGrCqf,EAAAr/B,UAAA0/B,YAAA,WAGC,OAFmB,IAAIjD,GAAoC38B,KAAK48B,kBAE9CC,kBAAkB78B,KAAK88B,eAG1CyC,EAAAr/B,UAAAwvB,SAAA,SAASlnB,GAERxI,KAAK+3B,kBAAkBvvB,GACvBxI,KAAKqc,aAGNkjB,EAAAr/B,UAAA23B,WAAA,SAAWgI,GACV7/B,KAAKw/B,iBAAmBK,EAAc33B,KAAG,SAAEqrB,GAAyB,OAAA,IAAIsK,GAAYtK,EAAO/qB,UAC3FxI,KAAK88B,aAAe+C,EAAc33B,KAAG,SAAEqrB,GAAyB,OAAA,IAAIsK,GAAYtK,EAAO/qB,UAEvFxI,KAAKqc,aAGNkjB,EAAAr/B,UAAA4/B,kBAAA,WACC,OAAO9/B,KAAK48B,kBAGL2C,EAAAr/B,UAAAmc,UAAR,WAEC,GAAIrc,KAAKw/B,kBAAoBx/B,KAAKwI,MAAO,KAElCu3B,EAAa,IAAItB,GAA2Bz+B,KAAKw/B,iBAAkBx/B,KAAKwI,MAAOxI,KAAK48B,kBAE1F58B,KAAK88B,aAAeiD,EAAW1jB,cAIzBkjB,EAAAr/B,UAAA63B,kBAAR,SAA0BvvB,GACrBxI,KAAK4/B,cAAgBp3B,EACxBxI,KAAKwI,MAAQxI,KAAK4/B,cAElB5/B,KAAKwI,MAAQA,EAGdxI,KAAKqc,aAEPkjB,EA/EA,GCEA,IAAAS,GAAA,SAAA5yB,GAEC,SAAA4yB,EAAY9hB,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,8CAA4Cle,KAGjE,OAN+DqN,EAAAA,EAAAA,GAM/D2yB,EANA,CAA+DxC,EAAAA,gBCU/DyC,GAAA,WAYC,SAAAA,EAAoB5Z,EACjB9b,EACA21B,EACAL,QAFA,IAAAt1B,IAAAA,EAAA,IADiBvK,KAAAqmB,cAAAA,EAVHrmB,KAAA48B,iBAAmB,GAQ5B58B,KAAAmgC,sBAA+C,IAAIZ,GAAsBv/B,KAAK48B,kBAMrF58B,KAAKuK,QAAUA,EAEX21B,GAAaL,IAChB7/B,KAAKmgC,sBAAwB,IAAIZ,GAAsBv/B,KAAK48B,iBAAkBiD,EAAeK,IA8GhG,OA1GCD,EAAA//B,UAAAu/B,gBAAA,WACC,OAAOz/B,KAAKmgC,sBAAsBV,mBAInCQ,EAAA//B,UAAA80B,WAAA,WACC,OAAOh1B,KAAKuK,SAGb01B,EAAA//B,UAAAwvB,SAAA,SAASlnB,GACRxI,KAAKmgC,sBAAsBzQ,SAASlnB,IAGrCy3B,EAAA//B,UAAAkgC,UAAA,SAAU7M,EAA4BhkB,GACrCvP,KAAKuK,QAAQ81B,OAAO9wB,EAAO,EAAGgkB,IAG/B0M,EAAA//B,UAAAogC,aAAA,SAAa/wB,GACZvP,KAAKuK,QAAQ81B,OAAO9wB,EAAO,IAG5B0wB,EAAA//B,UAAA23B,WAAA,SAAWttB,EAAoCs1B,GAE9C7/B,KAAKuK,QAAUA,EAEfvK,KAAKmgC,sBAAsBtI,WAAWgI,OAEhCU,EAAgBvgC,KAAKmgC,sBAAsBR,YAEjD3/B,KAAKuK,QAAQ/D,SAAO,SAAE+sB,EAA4BhkB,GACjDgkB,EAAO7D,SAAS6Q,EAAchxB,QAOhC0wB,EAAA//B,UAAA+3B,WAAA,SAAWX,WAEVt3B,KAAKuK,QAAQ/D,SAAO,SAAE+sB,GACrBA,EAAOtD,cAAcF,GAAU/rB,wBAGvBw8B,OAEFlQ,EAAUkQ,EAAMlQ,QAErBC,EADYiQ,EAAMzF,UACOhL,GAAU5rB,IAAM4rB,GAAU3rB,KAE9CmG,EAAUk2B,EAAKl2B,QAAQ+K,QAAM,SAAEie,GACpC,OAAOA,EAAOnE,WAAW5Z,QAAQA,UAAY8a,EAAQ9a,WAGlDjL,EAAQ5J,OAAS,GACpB4J,EAAQ/D,SAAO,SAAE+sB,GAEhBA,EAAOtD,cAAcM,kBAbxB,IAAkB,IAAAmQ,EAAA3B,EAAAzH,GAAUqJ,EAAAD,EAAAx+B,QAAAy+B,EAAAv+B,KAAAu+B,EAAAD,EAAAx+B,OAAA,GAAdy+B,EAAAx+B,yGAkBd,OAAO,IAAI69B,GAA0ChgC,KAAKk2B,qBAG3D+J,EAAA//B,UAAAi4B,SAAA,SAASrJ,OAEFvf,EAAQvP,KAAK4gC,gBAAgB9R,GAEnC9uB,KAAK6gC,KAAKtxB,EAAOA,EAAQ,IAG1B0wB,EAAA//B,UAAAk4B,UAAA,SAAUtJ,OAEHvf,EAAQvP,KAAK4gC,gBAAgB9R,GAEnC9uB,KAAK6gC,KAAKtxB,EAAOA,EAAQ,IAG1B0wB,EAAA//B,UAAA4/B,kBAAA,WACC,OAAO9/B,KAAK48B,kBAGLqD,EAAA//B,UAAA2gC,KAAR,SAAaC,EAAmBC,GAE/B,GAAK/gC,KAAKghC,kBAAkBF,IAAe9gC,KAAKghC,kBAAkBD,GAAlE,KAIMxN,EAASvzB,KAAKuK,QAAQu2B,GAE5B9gC,KAAKuK,QAAQu2B,GAAa9gC,KAAKuK,QAAQw2B,GACvC/gC,KAAKuK,QAAQw2B,GAAWxN,IAGjB0M,EAAA//B,UAAA8gC,kBAAR,SAA0BzxB,GACzB,OAAOA,GAAS,GAGT0wB,EAAA//B,UAAAg2B,iBAAR,WACC,OAAOl2B,KAAKqmB,eAGL4Z,EAAA//B,UAAA0gC,gBAAR,SAAwB9R,GACvB,OAAO9uB,KAAKuK,QAAQ02B,WAAS,SAAC9/B,GAAK,OAAAA,EAAEguB,cAAcnW,OAAO8V,OAG5DmR,EAjIA,GCDA,IAAAiB,GAAA,SAAA9zB,GAIC,SAAA8zB,EAAYpS,EACTC,EACAzmB,EACAd,EACAV,EACAQ,GALH,IAAAf,EAMC6G,EAAAxM,KAAAZ,KACC8uB,EACAC,EACAznB,EACAgB,EACAd,EACAV,OACAZ,IACAlG,YAhBMuG,EAAAgqB,WAAaR,GAAU/rB,OA2BhC,OA7BwCqJ,EAAAA,EAAAA,GAqBvC6zB,EAAAhhC,UAAAwwB,cAAA,WACC,OAAO1wB,KAAKuwB,YAGb2Q,EAAAhhC,UAAA+vB,cAAA,SAAc5G,GACbrpB,KAAKuwB,WAAalH,GAGpB6X,EA7BA,CAAwCrS,ICXxC,IAAAsS,GAAA,WAGA,SAAAA,KAmBA,OAjBCA,EAAAjhC,UAAAkhC,YAAA,SAAYloB,GAAZ,IAAA3S,EAAAvG,KACC,OAAOkZ,EAAShR,KAAG,SAAC5F,GAAK,OAAAiE,EAAKR,QAAQzD,OAGvC6+B,EAAAjhC,UAAA6F,QAAA,SAAQ2Y,GAEP,OAAO,IAAIwiB,GACVxiB,EAAOyQ,cACPzQ,EAAO0Q,WACP1Q,EAAO2Q,YACP3Q,EAAO+Q,WACP/Q,EAAO8Q,UACP9Q,EAAOwQ,oBAKViS,EAtBA,GCGAE,GAAA,SAAAj0B,GAEC,SAAAi0B,EAAYnjB,EACQgW,GADpB,IAAA3tB,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,6CAA2Cle,YAD3CuG,EAAA2tB,cAAAA,IAQrB,OAX8D7mB,EAAAA,EAAAA,GAW9Dg0B,EAXA,CAA8D7D,EAAAA,gBCA9D,IAAA8D,GAAA,SAAAl0B,GAEC,SAAAk0B,EAAYpjB,EACQgW,GADpB,IAAA3tB,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,8CAA4Cle,YAD5CuG,EAAA2tB,cAAAA,IAQrB,OAX+D7mB,EAAAA,EAAAA,GAW/Di0B,EAXA,CAA+D9D,EAAAA,gBCA/D,IAAA+D,GAAA,SAAAn0B,GAEC,SAAAm0B,EAAYrjB,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,6BAA2Ble,KAGhD,OAN8CqN,EAAAA,EAAAA,GAM9Ck0B,EANA,CAA8C/D,EAAAA,+BC6C7C,SAAAgE,EAAY5rB,EACT6rB,EACAj5B,EACA2rB,QAFA,IAAAsN,IAAAA,EAAA,IADH,IAAAl7B,EAIC6G,EAAAxM,KAAAZ,KAAM4V,EAAI,yBAAuB5V,KA5B1BuG,EAAA0tB,WAAkC,GAalC1tB,EAAAm7B,oBAA8B,EAKrBn7B,EAAAo7B,cAAqC,IAAIrJ,GAIzC/xB,EAAAq7B,4BAA2D,IAAIT,OAQzEtB,EAAqC4B,EAAcv5B,KAAG,SAAEs4B,GAAU,OAAAA,EAAM/H,eAE9ElyB,EAAKs7B,WAAaJ,EAClBl7B,EAAKu7B,YAAcjC,EACnBt5B,EAAKiC,MAAQA,EAEbjC,EAAK0tB,WAAa1tB,EAAKo7B,cAAcxhC,OAAOshC,OAEtCvN,EAAgB3tB,EAAKq7B,4BAA4BR,YAAY76B,EAAKw7B,4BAExEx7B,EAAKy7B,sBAAwB,IAAI/B,GAAsB15B,EAAKiP,QAAS0e,EAAe1rB,EAAOq3B,GAEvF1L,MAAAA,IACH5tB,EAAKm7B,mBAAqBvN,KAgP7B,OA7R0C9mB,EAAAA,EAAAA,GAmDzCm0B,EAAAthC,UAAA80B,WAAA,WACC,OAAOh1B,KAAKi0B,YAIbuN,EAAAthC,UAAAk0B,iBAAA,WACC,OAAOp0B,KAAKgiC,sBAAsBhN,cAInCwM,EAAAthC,UAAAggB,SAAA,WAEC,OAAIlgB,KAAK0hC,mBACD1hC,KAAKiiC,oBAELjiC,KAAKwI,OAKdg5B,EAAAthC,UAAAm1B,gBAAA,WACC,OAAOr1B,KAAK0hC,oBAIbF,EAAAthC,UAAAw0B,QAAA,WACC,QAAS10B,KAAKkgB,YAAclgB,KAAKo0B,mBAAmBzzB,OAAS,GAG9D6gC,EAAAthC,UAAA23B,WAAA,SAAWC,GAEV93B,KAAKi0B,WAAaj0B,KAAK2hC,cAAcxhC,OAAO23B,OAEtC+H,EAAqC/H,EAAO5vB,KAAG,SAAEs4B,GAAwB,OAAAA,EAAM/H,eAE/EvE,EAAgBl0B,KAAK4hC,4BAA4BR,YAAYphC,KAAK+hC,qBAExE/hC,KAAKgiC,sBAAsBnK,WAAW3D,EAAe2L,GAErD7/B,KAAKkiC,SAAS,IAAIX,GAAyBvhC,KAAKwV,WAGjDgsB,EAAAthC,UAAA63B,kBAAA,SAAkBvrB,GAEjBxM,KAAKmiC,2BAA2B31B,GAEhCxM,KAAKoiC,sBAGNZ,EAAAthC,UAAAwvB,SAAA,SAASlnB,GACRxI,KAAKqiC,kBAAkB75B,GAEvBxI,KAAKsiC,yBAAwB,GAE7BtiC,KAAKoiC,sBAGNZ,EAAAthC,UAAA83B,eAAA,SAAe7xB,GACdnG,KAAKsiC,wBAAwBn8B,IAG9Bq7B,EAAAthC,UAAA+3B,WAAA,SAAWX,GACVt3B,KAAKkiC,SACJliC,KAAKgiC,sBAAsB/J,WAAWX,KAKxCkK,EAAAthC,UAAAs6B,aAAA,SAAa1L,EAAoB3oB,OAE5Bo8B,GAAgB,EAepB,GAbAviC,KAAKi0B,WAAWztB,SAAO,SAAE+sB,EAAsBhkB,GAC9C,GAAIgkB,EAAOpE,cAAc3Z,UAAYsZ,EAAStZ,QAAS,KAEhDgtB,EAAYjP,EAAO7lB,YAEzB6lB,EAAOvD,WAAW7pB,GAEdq8B,IAAcr8B,IACjBo8B,EAAehzB,OAKdgzB,EAAe,EAElB,GAAIp8B,EAAS,KAGNs8B,EAAcziC,KAAK4hC,4BAA4B77B,QAAQ/F,KAAKi0B,WAAWsO,IAE7EviC,KAAKgiC,sBAAsB5B,UAAUqC,EAAaF,QAElDviC,KAAKgiC,sBAAsB1B,aAAaiC,GAI1CviC,KAAKoiC,qBAELpiC,KAAKkiC,SACJ,IAAIvE,GAA0C39B,KAAKwV,QAASxV,KAAKo0B,sBAInEoN,EAAAthC,UAAAi4B,SAAA,SAASrJ,GAOR,QAHI4T,EAFEC,EAAc3iC,KAAK4gC,gBAAgB9R,GAGxC8T,GAAiB,EAETpiC,EAAImiC,EAAc,EAAGniC,GAAK,EAAGA,GAAK,EAAG,KAEvCqiC,EAAa7iC,KAAKi0B,WAAWzzB,GAEnC,GAAIqiC,EAAWn1B,YAAa,CAE3Bg1B,EAAWG,EACXD,EAAgBpiC,EAChB,OAIF,GAAIkiC,GAAYE,GAAiB,GAAKD,GAAe,EAAG,KAEnDpP,EAASvzB,KAAKi0B,WAAW0O,GAE7B3iC,KAAKi0B,WAAW0O,GAAeD,EAC/B1iC,KAAKi0B,WAAW2O,GAAiBrP,EAGlCvzB,KAAKgiC,sBAAsB7J,SAASrJ,GAEpC9uB,KAAKkiC,SACJ,IAAIb,GAAyCrhC,KAAKwV,QAASxV,KAAKo0B,sBAIlEoN,EAAAthC,UAAAk4B,UAAA,SAAUtJ,GAOT,QAHIgU,EAFEH,EAAc3iC,KAAK4gC,gBAAgB9R,GAGxCiU,GAAkB,EAEVviC,EAAImiC,EAAc,EAAGniC,EAAIR,KAAKi0B,WAAWtzB,OAAQH,GAAK,EAAG,KAE3DwiC,EAAchjC,KAAKi0B,WAAWzzB,GAEpC,GAAIwiC,EAAYt1B,YAAa,CAE5Bo1B,EAAYE,EACZD,EAAiBviC,EACjB,OAIF,GAAIsiC,GAAaC,GAAkB,GAAKJ,GAAe,EAAG,KAErDpP,EAASvzB,KAAKi0B,WAAW0O,GAE7B3iC,KAAKi0B,WAAW0O,GAAeG,EAC/B9iC,KAAKi0B,WAAW8O,GAAkBxP,EAGnCvzB,KAAKgiC,sBAAsB5J,UAAUtJ,GAErC9uB,KAAKkiC,SACJ,IAAIZ,GAA0CthC,KAAKwV,QAASxV,KAAKo0B,sBAI3DoN,EAAAthC,UAAAkiC,mBAAR,eAEOlO,EAAgBl0B,KAAK4hC,4BAA4BR,YAAYphC,KAAK+hC,qBAExE/hC,KAAKgiC,sBAAsBnK,WAAW3D,EAAeA,EAAchsB,KAAG,SAAC/G,GAAK,OAAAA,EAAE+tB,uBAIvEsS,EAAAthC,UAAAmiC,kBAAR,SAA0B75B,OAInBy6B,EAFa,IAAItG,GAAoC38B,KAAK8/B,qBAEpCjD,kBAAkB78B,KAAKgiC,sBAAsBvC,mBAGxEz/B,KAAKwI,MADFy6B,EAAWz6B,EACDy6B,EAEAz6B,EAGdxI,KAAKgiC,sBAAsBtS,SAAS1vB,KAAKkgB,YAEzClgB,KAAKkiC,SAAS,IAAI3E,GAAkCv9B,KAAKwV,WAIlDgsB,EAAAthC,UAAAiiC,2BAAR,SAAmC31B,OAI5By2B,EAFa,IAAItG,GAAoC38B,KAAK8/B,qBAEpCjD,kBAAkB78B,KAAKgiC,sBAAsBvC,mBAGxEz/B,KAAKiiC,oBADFgB,EAAWz2B,EACay2B,EAEAz2B,EAG5BxM,KAAKgiC,sBAAsBtS,SAAS1vB,KAAKkgB,YAEzClgB,KAAKkiC,SAAS,IAAIzE,GAA2Cz9B,KAAKwV,QAAShJ,KAGpEg1B,EAAAthC,UAAAoiC,wBAAR,SAAgCn8B,GAC/BnG,KAAK0hC,mBAAqBv7B,EAC1BnG,KAAKgiC,sBAAsBtS,SAAS1vB,KAAKkgB,YACzClgB,KAAKkiC,SAAS,IAAIxE,GAAwC19B,KAAKwV,WAIxDgsB,EAAAthC,UAAA6hC,kBAAR,WACC,OAAO/hC,KAAKi0B,WAAW3e,QAAM,SAACnU,GAAK,OAAAA,EAAEuM,gBAG9B8zB,EAAAthC,UAAA0gC,gBAAR,SAAwB9R,GACvB,OAAO9uB,KAAKi0B,WAAWgN,WAAS,SAAE1N,GAAyB,OAAAA,EAAOpE,cAAcnW,OAAO8V,OAGhF0S,EAAAthC,UAAA4/B,kBAAR,WACC,OAAO9/B,KAAKgiC,sBAAsBlC,8DAjQnBjqB,EAAAA,mBACElW,sCA3BN6hC,EAAoB1gC,EAAA,CADhCoiC,EAAAA,qCA2BgBrtB,EAAAA,YACElW,MAAK4+B,OAAA4E,WA3BX3B,IAA6B4B,EAAAA,WCtB1C,IAAAC,GAAA,WAMA,SAAAA,KAMA,OAHCA,EAAAnjC,UAAAC,OAAA,SAAOyV,GACN,OAAO,IAAI4rB,GAAqB5rB,wBAJjCtM,EAAAA,aAMD+5B,EAZA,GCAAC,GAAA,WAaC,SAAAA,EAA6BC,EACTC,GADSxjC,KAAAujC,+BAAAA,EACTvjC,KAAAwjC,qBAAAA,EAcrB,OAXCF,EAAApjC,UAAAujC,oBAAA,SAAoBtkB,EAAiCukB,GACpD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIhO,GAAwB+N,EAAQxe,oBAGvEoe,EAAApjC,UAAA0jC,uBAAA,WACC,OAAO5jC,KAAKujC,gCAGbD,EAAApjC,UAAA2jC,WAAA,WACC,OAAO/M,wBAhBRxtB,EAAAA,sDANQojB,UAF8CoX,EAAAA,wBA0BvDR,EA5BA,GCAA,IAAAS,GAAA,WAYC,SAAAA,EAA6BR,EACTC,EACAQ,GAFShkC,KAAAujC,+BAAAA,EACTvjC,KAAAwjC,qBAAAA,EACAxjC,KAAAgkC,0BAAAA,EA6BrB,OA1BCD,EAAA7jC,UAAA2jC,WAAA,WACC,OAAOrM,IAGRuM,EAAA7jC,UAAA+jC,gBAAA,SAAgB9kB,EAAiCukB,OAE1C5U,EAAW4U,EAAQvU,cACxBhpB,EAAUu9B,EAAQh2B,YAEnByR,EAAUqb,aAAa1L,EAAU3oB,IAGlC49B,EAAA7jC,UAAAujC,oBAAA,SAAoBtkB,EAAiCukB,GACpD1jC,KAAKkkC,cAAc/kB,EAAWukB,IAGvBK,EAAA7jC,UAAAgkC,cAAR,SAAsBtP,EAAmC8O,OAElDS,EAASvP,EAAYwP,YAErBC,EAAerkC,KAAKgkC,0BAA0Bj+B,QAAQo+B,GAExDE,GAAgBA,EAAa1jC,OAAS,GACzCX,KAAKwjC,qBAAqBG,QAAQU,wBA/BpC/6B,EAAAA,sDALQojB,UAFyCoX,EAAAA,4BAGzChL,MAsCTiL,EA3CA,GCAA,IAAAO,GAAA,WAeC,SAAAA,EAA6Bf,EACTC,EACAQ,GAFShkC,KAAAujC,+BAAAA,EACTvjC,KAAAwjC,qBAAAA,EACAxjC,KAAAgkC,0BAAAA,EA0BrB,OAvBCM,EAAApkC,UAAA2jC,WAAA,WACC,OAAO9M,IAGRuN,EAAApkC,UAAA+jC,gBAAA,SAAgB9kB,EAAiCukB,OAE1Ca,EAAwCb,EAAQ1M,YAEtD7X,EAAU0Y,WAAW0M,IAGtBD,EAAApkC,UAAAujC,oBAAA,SAAoBtkB,EAAiCukB,GACpD1jC,KAAKkkC,cAAc/kB,EAAWukB,IAGvBY,EAAApkC,UAAAgkC,cAAR,SAAsBtP,EAAmC8O,OAElDS,EAASvP,EAAYwP,YAErBC,EAAerkC,KAAKgkC,0BAA0Bj+B,QAAQo+B,GAE5DnkC,KAAKwjC,qBAAqBG,QAAQU,wBA7BnC/6B,EAAAA,sDARQojB,UAFyCoX,EAAAA,4BAGzChL,MAsCTwL,EA3CA,GCAA,IAAAE,GAAA,WAYC,SAAAA,EAAYjB,EACQC,GAAAxjC,KAAAwjC,qBAAAA,EAkBrB,OAfCgB,EAAAtkC,UAAA2jC,WAAA,WACC,OAAO5M,IAGRuN,EAAAtkC,UAAA+jC,gBAAA,SAAgBrP,EAAmC8O,OAE5Cl7B,EAAQk7B,EAAQxjB,WAEtB0U,EAAYlF,SAASlnB,IAGtBg8B,EAAAtkC,UAAAujC,oBAAA,SAAoBtkB,EAAiCukB,GACpD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAI3N,GAAyB0N,EAAQxe,wCAnBxE5b,EAAAA,sDALQojB,UAFgBoX,EAAAA,wBA6BzBU,EA/BA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAA6BlB,EAChBC,EACFQ,GAFkBhkC,KAAAujC,+BAAAA,EAChBvjC,KAAAwjC,qBAAAA,EACFxjC,KAAAgkC,0BAAAA,EA4BZ,OAzBCS,EAAAvkC,UAAA2jC,WAAA,WACC,OAAOpM,IAGRgN,EAAAvkC,UAAA+jC,gBAAA,SAAgB9kB,EAAiCukB,OAE1C5U,EAAW4U,EAAQvU,cAEzBhQ,EAAUgZ,SAASrJ,IAGpB2V,EAAAvkC,UAAAujC,oBAAA,SAAoBtkB,EAAiCukB,GACpD1jC,KAAKkkC,cAAc/kB,EAAWukB,IAGvBe,EAAAvkC,UAAAgkC,cAAR,SAAsBtP,EAAmC8O,OAElDS,EAASvP,EAAYwP,YAErBC,EAAerkC,KAAKgkC,0BAA0Bj+B,QAAQo+B,GAExDE,GAAgBA,EAAa1jC,OAAS,GACzCX,KAAKwjC,qBAAqBG,QAAQU,wBA9BpC/6B,EAAAA,sDALQojB,UAFgCoX,EAAAA,4BAGhChL,MAqCT2L,EA1CA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAA6BnB,EAChBC,EACFQ,GAFkBhkC,KAAAujC,+BAAAA,EAChBvjC,KAAAwjC,qBAAAA,EACFxjC,KAAAgkC,0BAAAA,EA4BZ,OAzBCU,EAAAxkC,UAAA2jC,WAAA,WACC,OAAOnM,IAGRgN,EAAAxkC,UAAA+jC,gBAAA,SAAgB9kB,EAAiCukB,OAE1C5U,EAAW4U,EAAQvU,cAEzBhQ,EAAUiZ,UAAUtJ,IAGrB4V,EAAAxkC,UAAAujC,oBAAA,SAAoBtkB,EAAiCukB,GACpD1jC,KAAKkkC,cAAc/kB,EAAWukB,IAGvBgB,EAAAxkC,UAAAgkC,cAAR,SAAsBtP,EAAmC8O,OAElDS,EAASvP,EAAYwP,YAErBC,EAAerkC,KAAKgkC,0BAA0Bj+B,QAAQo+B,GAExDE,GAAgBA,EAAa1jC,OAAS,GACzCX,KAAKwjC,qBAAqBG,QAAQU,wBA9BpC/6B,EAAAA,sDALQojB,UAFyCoX,EAAAA,4BAGzChL,MAqCT4L,EA1CA,GCAA,IAAAC,GAAA,WAWC,SAAAA,EAA6BnB,GAAAxjC,KAAAwjC,qBAAAA,EAsB9B,OAnBCmB,EAAAzkC,UAAA2jC,WAAA,WACC,OAAOxM,IAGRsN,EAAAzkC,UAAA+jC,gBAAA,SAAgBrP,EAAmC8O,OAE5CpM,EAAaoM,EAAQnM,gBAE3B3C,EAAYqD,WAAWX,IAGxBqN,EAAAzkC,UAAAujC,oBAAA,SAAoB7O,EAAmC8O,OAEhDrd,EAAgBqd,EAAQxe,iBAC7B3a,EAAUqqB,EAAYR,mBAEvBp0B,KAAKwjC,qBAAqBG,QAAQ,IAAI1N,GAAiC5P,EAAe9b,yBAtBvFjB,EAAAA,sDANwBw6B,EAAAA,wBA+BzBa,EAjCA,GCAA,IAAAC,GAAA,WAaC,SAAAA,EAA6BrB,EAChBC,EACFQ,GAFkBhkC,KAAAujC,+BAAAA,EAChBvjC,KAAAwjC,qBAAAA,EACFxjC,KAAAgkC,0BAAAA,EAyBZ,OAtBCY,EAAA1kC,UAAA2jC,WAAA,WACC,OAAO3M,IAGR0N,EAAA1kC,UAAA+jC,gBAAA,SAAgBrP,EAAmC8O,OAE5Cl7B,EAAQk7B,EAAQxjB,WAEtB0U,EAAYmD,kBAAkBvvB,IAG/Bo8B,EAAA1kC,UAAAujC,oBAAA,SAAoBtkB,EAAiCukB,GACpD1jC,KAAK6kC,uBAAuB1lB,EAAUilB,cAG/BQ,EAAA1kC,UAAA2kC,uBAAR,SAA+B3L,OAExBmL,EAAerkC,KAAKgkC,0BAA0Bj+B,QAAQmzB,GAE5Dl5B,KAAKwjC,qBAAqBG,QAAQU,wBA3BnC/6B,EAAAA,sDANQojB,UAFgCoX,EAAAA,4BAGhChL,MAmCT8L,EAxCA,GCAA,IAAAE,GAAA,WAYC,SAAAA,EAA6BtB,GAAAxjC,KAAAwjC,qBAAAA,EAkB9B,OAfCsB,EAAA5kC,UAAA2jC,WAAA,WACC,OAAO1M,IAGR2N,EAAA5kC,UAAA+jC,gBAAA,SAAgBrP,EAAmC8O,OAE5Cv9B,EAAUu9B,EAAQtM,aAExBxC,EAAYoD,eAAe7xB,IAG5B2+B,EAAA5kC,UAAAujC,oBAAA,SAAoBtkB,EAAiCukB,GACpD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAI/N,GAA+B8N,EAAQxe,wCAlB9E5b,EAAAA,sDAPwBw6B,EAAAA,wBA4BzBgB,EA9BA,sBCgCC,SAAAC,IAAA,IAAAx+B,EACC6G,EAAAxM,KAAAZ,OAAOA,YALCuG,EAAAijB,gBAAkB,WAEnBjjB,EAAAy+B,QAAS,IA6ClB,OApD+C33B,EAAAA,EAAAA,GAa9C03B,EAAA7kC,UAAA4pB,gBAAA,WAAA,IAAAvjB,EAAAvG,KACO+pB,EAAe/pB,KAAKilC,cAActzB,cAAcuzB,cAAc,0BAE9D9a,EAASD,EAAAA,UAAUJ,EAAc,SAEvCK,EACEvV,KACAS,EAAAA,QAAM,SAAEhT,GAAW,OAAAA,EAAE+nB,UAAY9jB,EAAKwiB,kBACtC/oB,KAAKuU,aAELO,WAAS,WACTvO,EAAK6N,cACL7N,EAAK0iB,YAGPmB,EACEvV,KACAS,EAAAA,QAAM,SAAEhT,GAAW,OAAAA,EAAE+nB,UAAY9jB,EAAKyiB,gBACtChpB,KAAKuU,aAELO,WAAS,WACTvO,EAAK6N,cACL7N,EAAK6iB,aAIR2b,EAAA7kC,UAAAwrB,OAAA,SAAOC,GACN3rB,KAAKwqB,aAAate,KAAKyf,IAGxBoZ,EAAA7kC,UAAAilC,aAAA,SAAaH,GACZhlC,KAAKglC,OAASA,EAETA,IACJhlC,KAAKoU,cACLpU,KAAKipB,+BAjEPpX,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,gBACVC,SAAU,uTAYVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,sFAIhCK,EAAAA,UAASf,KAAA,CAAC,aAAc,CAAEyW,KAAM5V,EAAAA,WAAYG,QAAQ,OAkDtDiyB,GApD+Cjc,ICvB/C,IAAAsc,GAAA,WAEA,SAAAA,IAuBCplC,KAAAqlC,gBAA0B,EAU3B,OANCD,EAAAllC,UAAAsL,YAAA,SAAYC,QACWvF,IAAlBuF,EAAQtJ,OAAyC,OAAlBsJ,EAAQtJ,QAC1CnC,KAAKwI,MAAQxI,KAAKmC,MAAQ,IAAM,IAAMnC,KAAKmC,4BA7B7C0P,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,sBACVC,SAAU,uPASVG,KAAM,CACLmzB,uBAAwB,QAEzB/qB,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,wCAIhC1F,EAAAA,8BAGAA,EAAAA,SAWFs4B,EAnCA,GCAA,IAAAG,GAAA,WAEA,SAAAA,KAgBA,2BAhBC1zB,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,6BACVC,SAAU,0BAGVG,KAAM,CACLqzB,8BAA+B,QAEhCjrB,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,wCAIhC1F,EAAAA,SAGFy4B,EAlBA,OC2CME,GAAa,CAClBje,GACA2D,GACAH,GACAP,GACAgB,GACAsZ,GACAnZ,GAEAE,GACAsZ,GACAG,IAGKG,GAAqB,CAC1Ble,GACA2D,GACAS,GAEAxY,EAAAA,iBACAD,EAAAA,qBACAF,EAAAA,mBACAa,EAAAA,kBAEAgY,GACAsZ,GACAG,IAGYI,GAAiB,uBAE9BC,GAAA,WAAA,SAAAA,KAiDA,2BAjDCzoB,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAS,CACRC,EAAAA,aACAwoB,EAAAA,oBAEAnJ,GAEAtpB,EAAAA,iBACAD,EAAAA,qBACAF,EAAAA,mBACAa,EAAAA,kBACAgyB,EAAAA,uBAEAC,EAAAA,aAAaC,gBACZL,GACAtC,GACAzW,GACA0W,GAA+B5gC,EAG3BqjC,EAAAA,aAAaE,uBAAuB3B,GAA0BqB,IAC9DI,EAAAA,aAAaE,uBAAuBzB,GAAmCmB,IACvEI,EAAAA,aAAaE,uBAAuBnB,GAAyCa,IAC7EI,EAAAA,aAAaE,uBAAuBrB,GAA4Ce,IAChFI,EAAAA,aAAaE,uBAAuBlC,GAA2C4B,IAC/EI,EAAAA,aAAaE,uBAAuBtB,GAA2CgB,IAC/EI,EAAAA,aAAaE,uBAAuBxB,GAAyCkB,IAC7EI,EAAAA,aAAaE,uBAAuBvB,GAA0CiB,OAIpF1zB,UAASvP,EACL05B,IAEJ7e,aAAc,CACbkoB,IAEDjoB,QAASkoB,GACTne,gBAAiB,CAChBC,GACA2D,GACA+a,EAAAA,oBACAC,EAAAA,wBACAC,EAAAA,sBACAC,EAAAA,0BAKFT,EAjDA,GC1EAU,GAAA,WAAA,SAAAA,IAEStmC,KAAAumC,UAAY,EAOrB,OALCD,EAAApmC,UAAAoP,WAAA,WAEC,OADAtP,KAAKumC,YACEvmC,KAAKumC,WAGdD,EATA,GCAA,OAAA,aCIA,IAAAE,GAAA,SAAAp5B,GAEC,SAAAo5B,EAAYz2B,UACX3C,EAAAxM,KAAAZ,KAAM+P,EAAa,8BAA4B/P,KAGjD,OAN+CqN,EAAAA,EAAAA,GAM/Cm5B,EANA,CAA+ChJ,EAAAA,gBCD/CiJ,GAAA,SAAAr5B,GAEC,SAAAq5B,EAAY12B,UACX3C,EAAAxM,KAAAZ,KAAM+P,EAAa,kCAAgC/P,KAGrD,OANmDqN,EAAAA,EAAAA,GAMnDo5B,EANA,CAAmDjJ,EAAAA,8BC4BlD,SAAAkJ,EAA4BvgC,EACfuD,EACAC,EACAC,EACAC,EACAC,EACAwQ,EACRqsB,GAPuB3mC,KAAAmG,QAAAA,EACfnG,KAAA0J,KAAAA,EACA1J,KAAA2J,SAAAA,EACA3J,KAAA4J,UAAAA,EACA5J,KAAA6J,SAAAA,EACA7J,KAAA8J,YAAAA,EACA9J,KAAAsa,WAAAA,EAxBIta,KAAAmkC,OAAgC,GA0BhDnkC,KAAK2mC,OAASA,EAyNhB,OAhPQD,EAAAE,QAAP,SAAeD,GACd,OAAO,IAAID,GACV,EACA,EACA,GACA,CAAC,GAAI,GAAI,GAAI,MACb,GACA,EACA,EACAC,IAkBKD,EAAAG,WAAP,SAAkB76B,EAA4B26B,OAEvCG,EAA0BJ,EAAgBE,QAAQD,GAQxD,OAAO,IAAID,EAPA16B,EAAO7F,SAAW2gC,EAAwBp5B,YAC7C1B,EAAOtC,MAAQo9B,EAAwB/rB,UACnC/O,EAAOrC,UAAYm9B,EAAwBtwB,cAC1CxK,EAAOpC,WAAak9B,EAAwB9rB,eAC7ChP,EAAOnC,UAAYi9B,EAAwB7rB,aACxCjP,EAAOlC,aAAeg9B,EAAwB5rB,gBAS5D,EACAyrB,IAIFD,EAAAxmC,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGbugC,EAAAxmC,UAAA6mC,WAAA,WACC,OAAQ/mC,KAAKmG,SAGdugC,EAAAxmC,UAAA6a,QAAA,WACC,OAAO/a,KAAK0J,MAGbg9B,EAAAxmC,UAAAsW,YAAA,WACC,OAAOxW,KAAK2J,UAGb+8B,EAAAxmC,UAAA8a,aAAA,WACC,OAAOhb,KAAK4J,WAGb88B,EAAAxmC,UAAA+a,WAAA,WACC,OAAIjb,KAAK+mC,cAIF/mC,KAAK6J,UAGb68B,EAAAxmC,UAAAgb,cAAA,WACC,OAAIlb,KAAK+mC,cAIF/mC,KAAK8J,aAGb48B,EAAAxmC,UAAAqb,cAAA,WACC,OAAOvb,KAAKsa,YAGbosB,EAAAxmC,UAAA8mC,OAAA,SAAOv9B,QAEuBvD,IAAzBuD,EAAatD,UAChBnG,KAAKmG,QAAUsD,EAAatD,cAGHD,IAAtBuD,EAAaC,OAChB1J,KAAK0J,KAAOD,EAAaC,UAEIxD,IAAzBuD,EAAatD,UAChBnG,KAAKmG,SAAU,SAIaD,IAA1BuD,EAAaE,WAChB3J,KAAK2J,SAAWF,EAAaE,cAEAzD,IAAzBuD,EAAatD,UAChBnG,KAAKmG,SAAU,SAIcD,IAA3BuD,EAAaG,YAChB5J,KAAK4J,UAAYH,EAAaG,eAED1D,IAAzBuD,EAAatD,UAChBnG,KAAKmG,SAAU,SAIaD,IAA1BuD,EAAaI,WAChB7J,KAAK6J,SAAWJ,EAAaI,cAEA3D,IAAzBuD,EAAatD,UAChBnG,KAAKmG,SAAU,SAIgBD,IAA7BuD,EAAaK,cAChB9J,KAAK8J,YAAcL,EAAaK,iBAEH5D,IAAzBuD,EAAatD,UAChBnG,KAAKmG,SAAU,KAII,IAAjBnG,KAAKmG,UACkB,IAA1BsD,EAAaI,WACgB,IAA7BJ,EAAaK,cACb9J,KAAK8J,aAAc,EAEnB9J,KAAK2mC,OAAOM,KAAK,uDAKnBP,EAAAxmC,UAAAgnC,cAAA,SAAc7sB,GACbra,KAAKsa,WAAaD,GAGnBqsB,EAAAxmC,UAAA8W,SAAA,eACKA,EAAWhX,KAAK0J,KAEf1J,KAAKmb,uBACTnE,GAAY,GAGbhX,KAAK0J,KAAOsN,GAGb0vB,EAAAxmC,UAAA+W,SAAA,eACKA,EAAWjX,KAAK0J,KAEf1J,KAAKob,uBACTnE,GAAY,GAGbjX,KAAK0J,KAAOuN,GAGbyvB,EAAAxmC,UAAA6W,eAAA,SAAepN,GAQd,OANI3J,KAAK4J,UAAU+U,MAAI,SAAEwoB,GAAe,OAAAA,IAAOx9B,OAE9C3J,KAAKonC,QAAQ,GACbpnC,KAAKqnC,YAAY19B,IAGX3J,KAAKmkC,QAGbuC,EAAAxmC,UAAAib,mBAAA,WAEC,OAAwB,IAApBnb,KAAKsa,YAIFta,KAAK0J,OAASmT,KAAKC,KAAK9c,KAAKsa,WAAata,KAAK2J,WAGvD+8B,EAAAxmC,UAAAkb,mBAAA,WACC,OAAqB,IAAdpb,KAAK0J,MAGbg9B,EAAAxmC,UAAA+gB,eAAA,eAEOqmB,EAAY,GAAMtnC,KAAK0J,KAAO,GAAK1J,KAAK2J,SAE9C,OAAI3J,KAAKsa,WAAagtB,EACd,EAGDA,GAGRZ,EAAAxmC,UAAAghB,aAAA,eAEOqmB,EAAWvnC,KAAK0J,KAAO1J,KAAK2J,SAElC,OAAI3J,KAAKsa,WAAaitB,EACdvnC,KAAKsa,WAGNitB,GAGRb,EAAAxmC,UAAAwb,OAAA,SAAOpR,GAEN,GAAItK,KAAK+mC,aACR,OAAOz8B,MAGJuQ,EAAQ7a,KAAKihB,iBAMjB,OAJc,IAAVpG,IACHA,GAAS,GAGHvQ,EAAOqR,MAAMd,EAAO7a,KAAKkhB,iBAGzBwlB,EAAAxmC,UAAAknC,QAAR,SAAgB19B,GACf1J,KAAK0J,KAAOA,EACZ1J,KAAKmkC,OAAO3hC,KAAK,IAAIgkC,GAA0B,IAAI7wB,GAAY,8BAGxD+wB,EAAAxmC,UAAAmnC,YAAR,SAAoB19B,GACnB3J,KAAK2J,SAAWA,EAChB3J,KAAKmkC,OAAO3hC,KAAK,IAAIikC,GAA8B,IAAI9wB,GAAY,8BAGrE+wB,KChQA,IAAAc,GAAA,WAWC,SAAAA,EAAoBb,GAAA3mC,KAAA2mC,OAAAA,EAWrB,OARCa,EAAAtnC,UAAAunC,cAAA,WACC,OAAOf,GAAgBE,QAAQ5mC,KAAK2mC,SAGrCa,EAAAtnC,UAAAwnC,iBAAA,SAAiBpgC,GAChB,OAAOo/B,GAAgBG,WAAWv/B,EAAQtH,KAAK2mC,6BAXhDr9B,EAAAA,sDANQq+B,MAoBTH,EAtBA,sBCcC,SAAAI,EAAoB73B,EACT83B,EACRzwB,GAFH,IAAA7Q,EAGC6G,EAAAxM,KAAAZ,KAAMoX,IAAiBpX,YAHJuG,EAAAwJ,YAAAA,EACTxJ,EAAAshC,iBAAAA,IAoCZ,OAvC+Cx6B,EAAAA,EAAAA,GAQ9Cu6B,EAAA1nC,UAAA4nC,iBAAA,eAEOC,EAA0B/nC,KAAK6nC,iBAAiBJ,gBAEtDr6B,EAAAlN,UAAM2W,UAASjW,KAAAZ,KAAC,CACf0J,KAAMq+B,EAAwBhtB,UAC9BpR,SAAUo+B,EAAwBvxB,cAClC5M,UAAWm+B,EAAwB/sB,gBACjChb,KAAK+P,cAIT63B,EAAA1nC,UAAA2W,UAAA,SAAU7K,GACToB,EAAAlN,UAAM2W,UAASjW,KAAAZ,KAACgM,EAAQhM,KAAK+P,cAI9B63B,EAAA1nC,UAAA6W,eAAA,SAAepN,GACdyD,EAAAlN,UAAM6W,eAAcnW,KAAAZ,KAAC2J,EAAU3J,KAAK+P,cAIrC63B,EAAA1nC,UAAA8W,SAAA,WACC5J,EAAAlN,UAAM8W,SAAQpW,KAAAZ,KAACA,KAAK+P,cAIrB63B,EAAA1nC,UAAA+W,SAAA,WACC7J,EAAAlN,UAAM+W,SAAQrW,KAAAZ,KAACA,KAAK+P,kCArCrBzG,EAAAA,sDANQqM,UACA6xB,UACA7wB,MAyBRuU,EAAAA,CADCN,0HAMDM,EAAAA,CADCN,+HAMDM,EAAAA,CADCN,mHAMDM,EAAAA,CADCN,mHAKFgd,GAvC+CzwB,uBCC9C,SAAA6wB,EAAoBj4B,EACjBiG,GADH,IAAAzP,EAEC6G,EAAAxM,KAAAZ,KAAMgW,IAAiBhW,YAFJuG,EAAAwJ,YAAAA,IAkBrB,OApBiD1C,EAAAA,EAAAA,GAQhD26B,EAAA9nC,UAAA+V,SAAA,WACC,OAAO7I,EAAAlN,UAAM+V,SAAQrV,KAAAZ,KAACA,KAAK+P,cAI5Bi4B,EAAA9nC,UAAAgW,eAAA,WACC,OAAO9I,EAAAlN,UAAM+V,SAAQrV,KAAAZ,KAACA,KAAK+P,aACvB8E,KACAsB,EAAAA,KAAK,yBAjBV7M,EAAAA,sDANQqM,UACAT,MAcRgW,EAAAA,CADCN,6EACWqd,EAAAA,0CAKZ/c,EAAAA,CADCN,6EACiBqd,EAAAA,gDAOnBD,GApBiDjyB,ICPjD,IAAAmyB,GAAA,SAAA96B,GAEC,SAAA86B,EAAYn4B,EACQ2P,GADpB,IAAAnZ,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,qBAAmB/P,YADnBuG,EAAAmZ,OAAAA,IAQrB,OAXsCrS,EAAAA,EAAAA,GAOrC66B,EAAAhoC,UAAA8f,UAAA,WACC,OAAOhgB,KAAK0f,QAGdwoB,EAXA,CAAsC5xB,EAAAA,SCAtC,IAAA6xB,GAAA,SAAA/6B,GAEC,SAAA+6B,EAAYp4B,EACQ5J,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,iCAA+B/P,YAD/BuG,EAAAJ,QAAAA,IAQrB,OAXkDkH,EAAAA,EAAAA,GAOjD86B,EAAAjoC,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGdgiC,EAXA,CAAkD7xB,EAAAA,SCAlD,IAAA8xB,GAAA,SAAAh7B,GAEC,SAAAg7B,EAAYr4B,EACQ5J,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,mCAAiC/P,YADjCuG,EAAAJ,QAAAA,IAQrB,OAXoDkH,EAAAA,EAAAA,GAOnD+6B,EAAAloC,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGdiiC,EAXA,CAAoD9xB,EAAAA,SCApD,IAAA+xB,GAAA,SAAAj7B,GAEC,SAAAi7B,EAAYt4B,EACQjH,GADpB,IAAAvC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,0BAAwB/P,YADxBuG,EAAAuC,MAAAA,IAQrB,OAX2CuE,EAAAA,EAAAA,GAO1Cg7B,EAAAnoC,UAAA6f,SAAA,WACC,OAAO/f,KAAK8I,OAGdu/B,EAXA,CAA2C/xB,EAAAA,SCC3C,IAAAgyB,GAAA,SAAAl7B,GAEC,SAAAk7B,EAAYv4B,EACQw4B,GADpB,IAAAhiC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,0BAAwB/P,YADxBuG,EAAAgiC,SAAAA,IAQrB,OAX2Cl7B,EAAAA,EAAAA,GAO1Ci7B,EAAApoC,UAAAsoC,YAAA,WACC,OAAOxoC,KAAKuoC,UAGdD,EAXA,CAA2ChyB,EAAAA,SCD3C,IAAAmyB,GAAA,SAAAr7B,GAEC,SAAAq7B,EAAY14B,EACQ5J,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,iCAA+B/P,YAD/BuG,EAAAJ,QAAAA,IAQrB,OAXkDkH,EAAAA,EAAAA,GAOjDo7B,EAAAvoC,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGdsiC,EAXA,CAAkDnyB,EAAAA,SCAlD,IAAAoyB,GAAA,SAAAt7B,GAEC,SAAAs7B,EAAY34B,EACQ5J,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,oCAAkC/P,YADlCuG,EAAAJ,QAAAA,IAQrB,OAXqDkH,EAAAA,EAAAA,GAOpDq7B,EAAAxoC,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGduiC,EAXA,CAAqDpyB,EAAAA,SCJrD,IAAAqyB,GAAA,WAoBC,SAAAA,EAAoB/xB,GAAA5W,KAAA4W,kBAAAA,EA+BrB,OA5BC+xB,EAAAzoC,UAAA0oC,UAAA,SAAU74B,EAA0B2P,GACnC1f,KAAK4W,kBAAkBE,SAAS,IAAIoxB,GAAiBn4B,EAAa2P,KAGnEipB,EAAAzoC,UAAA2oC,mBAAA,SAAmB94B,EAA0B5J,GAC5CnG,KAAK4W,kBAAkBE,SAAS,IAAIqxB,GAA6Bp4B,EAAa5J,KAG/EwiC,EAAAzoC,UAAA4oC,qBAAA,SAAqB/4B,EAA0B5J,GAC9CnG,KAAK4W,kBAAkBE,SAAS,IAAIsxB,GAA+Br4B,EAAa5J,KAGjFwiC,EAAAzoC,UAAA6oC,SAAA,SAASh5B,EAA0BjH,GAClC9I,KAAK4W,kBAAkBE,SAAS,IAAIuxB,GAAsBt4B,EAAajH,KAGxE6/B,EAAAzoC,UAAA8oC,eAAA,SAAej5B,EAA8Cw4B,QAA9C,IAAAx4B,IAAAA,EAAA+F,IACd9V,KAAK4W,kBAAkBE,SAAS,IAAIwxB,GAAsBv4B,EAAaw4B,KAGxEI,EAAAzoC,UAAA+oC,gBAAA,SAAgBl5B,EAA0B5J,GACzCnG,KAAK4W,kBAAkBE,SAAS,IAAI2xB,GAA6B14B,EAAa5J,KAG/EwiC,EAAAzoC,UAAAgpC,mBAAA,SAAmBn5B,EAA0B5J,GAC5CnG,KAAK4W,kBAAkBE,SAAS,IAAI4xB,GAAgC34B,EAAa5J,yBA/BlFmD,EAAAA,sDAfQ4N,EAAAA,qBAiDTyxB,EAnDA,GCAA,IAAAQ,GAAA,WAYC,SAAAA,EAAoBh0B,GAAAnV,KAAAmV,oBAAAA,EAarB,OAVCg0B,EAAAjpC,UAAAkV,GAAA,SAAGrF,GAEF,OAAO/P,KAAKmV,oBACNE,YAAYtF,GACZ8E,KACAS,EAAAA,QAAM,SAAEC,GAAyB,OAAAA,EAAUC,QAAQC,aAAe1F,EAAY0F,cAC9EvN,EAAAA,KAAG,SAAEqN,GAAyB,OAAAA,EAAU8M,qCAZ/C/Y,EAAAA,sDANQmL,MAsBT00B,EAzBA,GCAA,IAAAC,GAAA,WAeC,SAAAA,EAAoBC,GAAArpC,KAAAqpC,iBAAAA,EAwDrB,OArDCD,EAAAlpC,UAAAopC,SAAA,SAASv5B,GACR,YADQ,IAAAA,IAAAA,EAAA+F,IACD9V,KAAKqpC,iBAAiBj0B,GAAGrF,IAGjCq5B,EAAAlpC,UAAAqpC,eAAA,SAAex5B,GACd,YADc,IAAAA,IAAAA,EAAA+F,IACP9V,KAAKspC,SAASv5B,GACf8E,KACAsB,EAAAA,KAAK,KAIZizB,EAAAlpC,UAAAspC,SAAA,SAASz5B,GACR,YADQ,IAAAA,IAAAA,EAAA+F,IACD9V,KAAKqpC,iBACNj0B,GAAGrF,GACH8E,KACA3M,EAAAA,KAAG,SAAEia,GACJ,OAAOA,EAAOnC,eAEf1K,EAAAA,QAAM,SAAEoK,GAAmB,YAAWxZ,IAAXwZ,OAIlC0pB,EAAAlpC,UAAAupC,kBAAA,SAAkB15B,GACjB,YADiB,IAAAA,IAAAA,EAAA+F,IACV9V,KAAKqpC,iBACNj0B,GAAGrF,GACH8E,KACA3M,EAAAA,KAAG,SAAEia,GACJ,OAAOA,EAAOlC,wBAEf3K,EAAAA,QAAM,SAAEoK,GAAmB,YAAWxZ,IAAXwZ,OAIlC0pB,EAAAlpC,UAAAwpC,aAAA,SAAa35B,GACZ,YADY,IAAAA,IAAAA,EAAA+F,IACL9V,KAAKqpC,iBACNj0B,GAAGrF,GACH8E,KACA3M,EAAAA,KAAG,SAAEia,GACJ,OAAOA,EAAO7B,qBAKtB8oB,EAAAlpC,UAAAypC,eAAA,SAAe55B,GACd,YADc,IAAAA,IAAAA,EAAA+F,IACP9V,KAAKqpC,iBACNj0B,GAAGrF,GACH8E,KACA3M,EAAAA,KAAG,SAAEia,GACJ,OAAOA,EAAO9B,2CAtDtB/W,EAAAA,sDARQ6/B,MAmETC,EAvEA,GCAA,IAAAQ,GAAA,WAmBC,SAAAA,EAAoBC,EACTC,GADS9pC,KAAA6pC,iBAAAA,EACT7pC,KAAA8pC,mBAAAA,EAHH9pC,KAAAkU,aAAe,IAAIC,EAAAA,QAiG5B,OA3FCy1B,EAAA1pC,UAAAsR,YAAA,WACCxR,KAAKkU,aAAahS,OAClBlC,KAAKkU,aAAaI,YAGnBs1B,EAAA1pC,UAAA0oC,UAAA,SAAUlpB,EAAgB3P,QAAA,IAAAA,IAAAA,EAAA+F,IACzB9V,KAAK6pC,iBAAiBjB,UAAU74B,EAAa2P,IAG9CkqB,EAAA1pC,UAAA6pC,UAAA,SAAUrqB,EAAgB3P,QAAA,IAAAA,IAAAA,EAAA+F,IACzB9V,KAAK6pC,iBAAiBjB,UAAU74B,EAAa2P,IAG9CkqB,EAAA1pC,UAAA2oC,mBAAA,SAAmB1iC,EAAkB4J,QAAA,IAAAA,IAAAA,EAAA+F,IACpC9V,KAAK6pC,iBAAiBhB,mBAAmB94B,EAAa5J,IAGvDyjC,EAAA1pC,UAAA4oC,qBAAA,SAAqB3iC,EAAkB4J,QAAA,IAAAA,IAAAA,EAAA+F,IACtC9V,KAAK6pC,iBAAiBf,qBAAqB/4B,EAAa5J,IAGzDyjC,EAAA1pC,UAAA6oC,SAAA,SAASjgC,EAAoBiH,QAAA,IAAAA,IAAAA,EAAA+F,IAC5B9V,KAAK6pC,iBAAiBd,SAASh5B,EAAajH,IAG7C8gC,EAAA1pC,UAAA8oC,eAAA,SAAeT,EAA6Bx4B,QAAA,IAAAA,IAAAA,EAAA+F,IAC3C9V,KAAK6pC,iBAAiBb,eAAej5B,EAAaw4B,IAGnDqB,EAAA1pC,UAAA+oC,gBAAA,SAAgB9iC,EAAkB4J,QAAA,IAAAA,IAAAA,EAAA+F,IACjC9V,KAAK6pC,iBAAiBZ,gBAAgBl5B,EAAa5J,IAGpDyjC,EAAA1pC,UAAAgpC,mBAAA,SAAmB/iC,EAAkB4J,QAAA,IAAAA,IAAAA,EAAA+F,IACpC9V,KAAK6pC,iBAAiBX,mBAAmBn5B,EAAa5J,IAGvDyjC,EAAA1pC,UAAA8pC,mBAAA,SAAmBj6B,GAAnB,IAAAxJ,EAAAvG,UAAmB,IAAA+P,IAAAA,EAAA+F,IAClB9V,KAAK8pC,mBACHJ,aAAa35B,GACb8E,KACA3M,EAAAA,KAAG,SAAE+hC,GAAwB,OAAAA,EAAI3qB,gBACjChK,EAAAA,QAAM,SAAE40B,GAAkB,YAAShkC,IAATgkC,KAC1B/zB,EAAAA,KAAK,GACL5B,EAAAA,UAAUvU,KAAKkU,eAEfY,WAAS,SAAEo1B,GACX3jC,EAAKsiC,oBAAoBqB,EAAMn6B,OAIlC65B,EAAA1pC,UAAAiqC,qBAAA,SAAqBp6B,GAArB,IAAAxJ,EAAAvG,UAAqB,IAAA+P,IAAAA,EAAA+F,IACpB9V,KAAK8pC,mBACHJ,aAAa35B,GACb8E,KACA3M,EAAAA,KAAG,SAAE+hC,GAAwB,OAAAA,EAAI1qB,kBACjCjK,EAAAA,QAAM,SAAE40B,GAAkB,YAAShkC,IAATgkC,KAC1B/zB,EAAAA,KAAK,GACL5B,EAAAA,UAAUvU,KAAKkU,eAEfY,WAAS,SAAEo1B,GACX3jC,EAAKuiC,sBAAsBoB,EAAMn6B,OAIpC65B,EAAA1pC,UAAAkqC,gBAAA,SAAgBr6B,GAAhB,IAAAxJ,EAAAvG,UAAgB,IAAA+P,IAAAA,EAAA+F,IACf9V,KAAK8pC,mBACHH,eAAe55B,GACf8E,KACA3M,EAAAA,KAAG,SAAE4X,GAAqC,OAAAA,EAAaY,wBACvDvK,EAAAA,KAAK,GACL5B,EAAAA,UAAUvU,KAAKkU,eAEfY,WAAS,SAAE3O,GACXI,EAAK0iC,iBAAiB9iC,EAAS4J,OAIlC65B,EAAA1pC,UAAAmqC,mBAAA,SAAmBt6B,GAAnB,IAAAxJ,EAAAvG,UAAmB,IAAA+P,IAAAA,EAAA+F,IAClB9V,KAAK8pC,mBACHH,eAAe55B,GACf8E,KACA3M,EAAAA,KAAG,SAAE4X,GAAqC,OAAAA,EAAaa,2BACvDxK,EAAAA,KAAK,GACL5B,EAAAA,UAAUvU,KAAKkU,eAEfY,WAAS,SAAE3O,GACXI,EAAK2iC,oBAAoB/iC,EAAS4J,2BAhGrCzG,EAAAA,sDAVQq/B,UACAS,MA6GTQ,EAlHA,WCCC5lC,KAAA,EACAC,KAAA,EACAC,IAAA,6ECWA,SAAAomC,EAAoBv6B,EACjB+5B,EACAD,GAFH,IAAAtjC,EAGC6G,EAAAxM,KAAAZ,KAAM6pC,EAAkBC,IAAmB9pC,YAHxBuG,EAAAwJ,YAAAA,IAsErB,OAxE+C1C,EAAAA,EAAAA,GAQ9Ci9B,EAAApqC,UAAAqqC,iBAAA,WACCn9B,EAAAlN,UAAM0oC,UAAShoC,KAAAZ,KAACu+B,OAAOiM,iBAAkBxqC,KAAK+P,cAI/Cu6B,EAAApqC,UAAA0oC,UAAA,SAAUlpB,EAAgB3P,QAAA,IAAAA,IAAAA,EAAA+F,IACzB1I,EAAAlN,UAAM0oC,UAAShoC,KAAAZ,KAAC0f,EAAQ1f,KAAK+P,cAI9Bu6B,EAAApqC,UAAA6pC,UAAA,SAAUrqB,GACTtS,EAAAlN,UAAM6pC,UAASnpC,KAAAZ,KAAC0f,EAAQ1f,KAAK+P,cAI9Bu6B,EAAApqC,UAAA2oC,mBAAA,SAAmB1iC,GAClBiH,EAAAlN,UAAM2oC,mBAAkBjoC,KAAAZ,KAACmG,EAASnG,KAAK+P,cAIxCu6B,EAAApqC,UAAA4oC,qBAAA,SAAqB3iC,GACpBiH,EAAAlN,UAAM4oC,qBAAoBloC,KAAAZ,KAACmG,EAASnG,KAAK+P,cAI1Cu6B,EAAApqC,UAAA6oC,SAAA,SAASjgC,GACRsE,EAAAlN,UAAM6oC,SAAQnoC,KAAAZ,KAAC8I,EAAO9I,KAAK+P,cAI5Bu6B,EAAApqC,UAAA8oC,eAAA,SAAeT,EAA6Bx4B,QAAA,IAAAA,IAAAA,EAAA+F,IAC3C1I,EAAAlN,UAAM8oC,eAAcpoC,KAAAZ,KAACuoC,EAAUvoC,KAAK+P,cAIrCu6B,EAAApqC,UAAA+oC,gBAAA,SAAgB9iC,EAAkB4J,QAAA,IAAAA,IAAAA,EAAA+F,IACjC1I,EAAAlN,UAAM+oC,gBAAeroC,KAAAZ,KAACmG,EAASnG,KAAK+P,cAIrCu6B,EAAApqC,UAAAgpC,mBAAA,SAAmB/iC,EAAkB4J,QAAA,IAAAA,IAAAA,EAAA+F,IACpC1I,EAAAlN,UAAMgpC,mBAAkBtoC,KAAAZ,KAACmG,EAASnG,KAAK+P,cAIxCu6B,EAAApqC,UAAA8pC,mBAAA,WACC58B,EAAAlN,UAAM8pC,mBAAkBppC,KAAAZ,KAACA,KAAK+P,cAI/Bu6B,EAAApqC,UAAAiqC,qBAAA,WACC/8B,EAAAlN,UAAMiqC,qBAAoBvpC,KAAAZ,KAACA,KAAK+P,cAIjCu6B,EAAApqC,UAAAkqC,gBAAA,WACCh9B,EAAAlN,UAAMkqC,gBAAexpC,KAAAZ,KAACA,KAAK+P,cAI5Bu6B,EAAApqC,UAAAmqC,mBAAA,WACCj9B,EAAAlN,UAAMmqC,mBAAkBzpC,KAAAZ,KAACA,KAAK+P,kCAtE/BzG,EAAAA,sDATQqM,UACAyzB,UACAT,MAqBRzd,EAAAA,CADCN,2DACsCjV,kEAKvCuV,EAAAA,CADCN,0HAMDM,EAAAA,CADCN,oIAMDM,EAAAA,CADCN,sIAMDM,EAAAA,CADCN,yHAMDM,EAAAA,CADCN,2DACwDjV,uEAKzDuV,EAAAA,CADCN,4DAC8CjV,wEAK/CuV,EAAAA,CADCN,4DACiDjV,2EAKlDuV,EAAAA,CADCN,6HAMDM,EAAAA,CADCN,+HAMDM,EAAAA,CADCN,0HAMDM,EAAAA,CADCN,6HAKF0f,GAxE+CV,uBCG9C,SAAAa,EAAoB16B,EACjBs5B,GADH,IAAA9iC,EAEC6G,EAAAxM,KAAAZ,KAAMqpC,IAAiBrpC,YAFJuG,EAAAwJ,YAAAA,IAmCrB,OArCiD1C,EAAAA,EAAAA,GAQhDo9B,EAAAvqC,UAAAopC,SAAA,WACC,OAAOl8B,EAAAlN,UAAMopC,SAAQ1oC,KAAAZ,KAACA,KAAK+P,cAI5B06B,EAAAvqC,UAAAqpC,eAAA,WACC,OAAOn8B,EAAAlN,UAAMqpC,eAAc3oC,KAAAZ,KAACA,KAAK+P,cAIlC06B,EAAAvqC,UAAAspC,SAAA,WACC,OAAOp8B,EAAAlN,UAAMspC,SAAQ5oC,KAAAZ,KAACA,KAAK+P,cAI5B06B,EAAAvqC,UAAAupC,kBAAA,WACC,OAAOr8B,EAAAlN,UAAMupC,kBAAiB7oC,KAAAZ,KAACA,KAAK+P,cAIrC06B,EAAAvqC,UAAAwpC,aAAA,WACC,OAAOt8B,EAAAlN,UAAMwpC,aAAY9oC,KAAAZ,KAACA,KAAK+P,cAIhC06B,EAAAvqC,UAAAypC,eAAA,SAAe55B,GACd,YADc,IAAAA,IAAAA,EAAA+F,IACP1I,EAAAlN,UAAMypC,eAAc/oC,KAAAZ,KAACA,KAAK+P,kCAnClCzG,EAAAA,sDATQqM,UACAwzB,MAiBRje,EAAAA,CADCN,6EACWqd,EAAAA,0CAKZ/c,EAAAA,CADCN,6EACiBqd,EAAAA,gDAKlB/c,EAAAA,CADCN,6EACWqd,EAAAA,0CAKZ/c,EAAAA,CADCN,6EACoBqd,EAAAA,mDAKrB/c,EAAAA,CADCN,6EACeqd,EAAAA,8CAKhB/c,EAAAA,CADCN,oDAC2BjV,2BAAkCsyB,EAAAA,gDAI/DwC,GArCiDrB,ICTjD,IAAAsB,GAAA,SAAAt9B,GAEC,SAAAs9B,EAAY36B,EACQgmB,GADpB,IAAAxvB,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,wBAAsB/P,YADtBuG,EAAAwvB,QAAAA,IAIrB,OAPyC1oB,EAAAA,EAAAA,GAOzCq9B,EAPA,CAAyCp0B,EAAAA,SCAzC,IAAAq0B,GAAA,SAAAv9B,GAEC,SAAAu9B,EAAY56B,EACQ66B,GADpB,IAAArkC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,6BAA2B/P,YAD3BuG,EAAAqkC,YAAAA,IAQrB,OAX8Cv9B,EAAAA,EAAAA,GAO7Cs9B,EAAAzqC,UAAA2qC,eAAA,WACC,OAAO7qC,KAAK4qC,aAGdD,EAXA,CAA8Cr0B,EAAAA,SCJ9C,IAAAw0B,GAAA,WAWC,SAAAA,EAAoBl0B,GAAA5W,KAAA4W,kBAAAA,EAWrB,OARCk0B,EAAA5qC,UAAA6qC,WAAA,SAAWh7B,GACV/P,KAAK4W,kBAAkBE,SAAS,IAAI4zB,GAAoB36B,KAGzD+6B,EAAA5qC,UAAA8qC,kBAAA,SAAkBj7B,EAA0B66B,GAC3C5qC,KAAK4W,kBAAkBE,SAAS,IAAI6zB,GAAyB56B,EAAa66B,yBAX3EthC,EAAAA,sDALQ4N,EAAAA,qBAmBT4zB,EAtBA,GCAA,IAAAG,GAAA,WAUC,SAAAA,EAAoBC,GAAAlrC,KAAAkrC,oBAAAA,EAWrB,OARCD,EAAA/qC,UAAAirC,oBAAA,SAAoBp7B,QAAA,IAAAA,IAAAA,EAAA+F,IACnB9V,KAAKkrC,oBAAoBH,WAAWh7B,IAGrCk7B,EAAA/qC,UAAA8qC,kBAAA,SAAkBJ,EAAqB76B,QAAA,IAAAA,IAAAA,EAAA+F,IACtC9V,KAAKkrC,oBAAoBF,kBAAkBj7B,EAAa66B,wBAXzDthC,EAAAA,sDALQwhC,MAmBTG,EArBA,sBCYC,SAAAG,EAAoBr7B,EACjBm7B,GADH,IAAA3kC,EAEC6G,EAAAxM,KAAAZ,KAAMkrC,IAAoBlrC,YAFPuG,EAAAwJ,YAAAA,IAcrB,OAhBkD1C,EAAAA,EAAAA,GAOjD+9B,EAAAlrC,UAAA6qC,WAAA,WACC39B,EAAAlN,UAAMirC,oBAAmBvqC,KAAAZ,KAACA,KAAK+P,cAIhCq7B,EAAAlrC,UAAA8qC,kBAAA,SAAkBJ,GACjBx9B,EAAAlN,UAAM8qC,kBAAiBpqC,KAAAZ,KAAC4qC,EAAa5qC,KAAK+P,kCAd3CzG,EAAAA,sDAJQqM,UACAm1B,MAgBR5f,EAAAA,CADCN,kIAKFwgB,GAhBkDH,ICVlD,IAAAI,GAAA,WAaC,SAAAA,EAAoBl2B,GAAAnV,KAAAmV,oBAAAA,EAarB,OAVCk2B,EAAAnrC,UAAAorC,YAAA,SAAYv7B,GAEX,OAAO/P,KAAKmV,oBACNE,YAAYtF,GACZ8E,KACAS,EAAAA,QAAM,SAAEC,GAAyB,OAAAA,EAAUC,QAAQC,aAAe1F,EAAY0F,cAC9EvN,EAAAA,KAAG,SAAEqN,GAAyB,OAAAA,EAAU6M,wCAZ/C9Y,EAAAA,sDANQmL,MAsBT42B,EA1BA,GCAA,IAAAE,GAAA,WAcC,SAAAA,EAAoBC,GAAAxrC,KAAAwrC,oBAAAA,EAWrB,OARCD,EAAArrC,UAAAurC,eAAA,SAAe17B,GACd,YADc,IAAAA,IAAAA,EAAA+F,IACP9V,KAAKwrC,oBACNF,YAAYv7B,GACZ8E,KACA3M,EAAAA,KAAG,SAAEga,GAAyB,OAAAA,EAAUjD,2CAV/C3V,EAAAA,sDAPQ+hC,MAqBTE,EAzBA,sBCcC,SAAAG,EAAoB37B,EACjBy7B,GADH,IAAAjlC,EAEC6G,EAAAxM,KAAAZ,KAAMwrC,IAAoBxrC,YAFPuG,EAAAwJ,YAAAA,IASrB,OAXoD1C,EAAAA,EAAAA,GAQnDq+B,EAAAxrC,UAAAurC,eAAA,WACC,OAAOr+B,EAAAlN,UAAMurC,eAAc7qC,KAAAZ,KAACA,KAAK+P,kCAVlCzG,EAAAA,sDANQqM,UAEA01B,MAaRngB,EAAAA,CADCN,6EACiBqd,EAAAA,gDAGnByD,GAXoDH,ICPpD,IAAAI,GAAA,SAAAv+B,GAEC,SAAAu+B,EAAY57B,EACQ67B,GADpB,IAAArlC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,oCAAkC/P,YADlCuG,EAAAqlC,aAAAA,IAQrB,OAXqDv+B,EAAAA,EAAAA,GAOpDs+B,EAAAzrC,UAAA2rC,UAAA,WACC,OAAO7rC,KAAK4rC,cAGdD,EAXA,CAAqDr1B,EAAAA,SCCrD,IAAAw1B,GAAA,SAAA1+B,GAEC,SAAA0+B,EAAY/7B,EACQugB,EACAyb,EACAC,GAHpB,IAAAzlC,EAIC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,iCAA+B/P,YAH/BuG,EAAA+pB,QAAAA,EACA/pB,EAAAwlC,iBAAAA,EACAxlC,EAAAylC,YAAAA,IAgBrB,OArBkD3+B,EAAAA,EAAAA,GASjDy+B,EAAA5rC,UAAAuwB,WAAA,WACC,OAAOzwB,KAAKswB,SAGbwb,EAAA5rC,UAAA+rC,oBAAA,WACC,OAAOjsC,KAAK+rC,kBAGbD,EAAA5rC,UAAAgsC,eAAA,WACC,OAAOlsC,KAAKgsC,aAGdF,EArBA,CAAkDx1B,EAAAA,SCNlD,IAAA61B,GAAA,WAcC,SAAAA,EAAoBv1B,GAAA5W,KAAA4W,kBAAAA,EAWrB,OARCu1B,EAAAjsC,UAAAksC,oBAAA,SAAoB9kC,EAAsByI,GACzC/P,KAAK4W,kBAAkBE,SAAS,IAAI60B,GAAgC57B,EAAazI,KAGlF6kC,EAAAjsC,UAAAmsC,UAAA,SAAU/b,EAAkBgc,EAAyBN,EAAqBj8B,GACzE/P,KAAK4W,kBAAkBE,SAAS,IAAIg1B,GAA6B/7B,EAAaugB,EAASgc,EAAiBN,yBAXzG1iC,EAAAA,sDATQ4N,EAAAA,qBAuBTi1B,EAzBA,GCIA,IAAAI,GAAA,SAAAn/B,GAEC,SAAAm/B,EAAYx8B,EACQ5J,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,4BAA0B/P,YAD1BuG,EAAAJ,QAAAA,IAQrB,OAX6CkH,EAAAA,EAAAA,GAO5Ck/B,EAAArsC,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGdomC,EAXA,CAA6Cj2B,EAAAA,SCA7C,IAAAk2B,GAAA,SAAAp/B,GAEC,SAAAo/B,EAAYz8B,EACQ08B,QAAA,IAAAA,IAAAA,EAAA,IADpB,IAAAlmC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,qBAAmB/P,YADnBuG,EAAAkmC,MAAAA,IAQrB,OAXsCp/B,EAAAA,EAAAA,GAOrCm/B,EAAAtsC,UAAAwsC,SAAA,WACC,OAAO1sC,KAAKysC,OAGdD,EAXA,CAAsCl2B,EAAAA,SCCtC,IAAAq2B,GAAA,SAAAv/B,GAEC,SAAAu/B,EAAY58B,EACQ+nB,GADpB,IAAAvxB,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,mCAAiC/P,YADjCuG,EAAAuxB,OAAAA,IAQrB,OAXoDzqB,EAAAA,EAAAA,GAOnDs/B,EAAAzsC,UAAA82B,UAAA,WACC,OAAOh3B,KAAK83B,QAGd6U,EAXA,CAAoDr2B,EAAAA,SCLpD,IAAAs2B,GAAA,WAcC,SAAAA,EAAoBh2B,GAAA5W,KAAA4W,kBAAAA,EAerB,OAZCg2B,EAAA1sC,UAAA2sC,WAAA,SAAW98B,EAA0B5J,GACpCnG,KAAK4W,kBAAkBE,SAAS,IAAIy1B,GAAwBx8B,EAAa5J,KAG1EymC,EAAA1sC,UAAA8X,UAAA,SAAUjI,EAA0B08B,GACnCzsC,KAAK4W,kBAAkBE,SAAS,IAAI01B,GAAiBz8B,EAAa08B,KAGnEG,EAAA1sC,UAAA4sC,SAAA,SAAS/8B,EAA0B+nB,GAClC93B,KAAK4W,kBAAkBE,SAAS,IAAI61B,GAA+B58B,EAAa+nB,yBAfjFxuB,EAAAA,sDATQ4N,EAAAA,qBA2BT01B,EA7BA,GCIA,IAAAG,GAAA,SAAA3/B,GAEC,SAAA2/B,EAAYh9B,UACX3C,EAAAxM,KAAAZ,KAAM+P,EAAa,2BAAyB/P,KAG9C,OAN4CqN,EAAAA,EAAAA,GAM5C0/B,EANA,CAA4Cz2B,EAAAA,SCA5C02B,GAAA,SAAA5/B,GAEC,SAAA4/B,EAAYj9B,EACQ5J,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,oCAAkC/P,YADlCuG,EAAAJ,QAAAA,IAQrB,OAXqDkH,EAAAA,EAAAA,GAOpD2/B,EAAA9sC,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGd6mC,EAXA,CAAqD12B,EAAAA,SCArD,IAAA22B,GAAA,SAAA7/B,GAEC,SAAA6/B,EAAYl9B,EACQiT,GADpB,IAAAzc,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,6BAA2B/P,YAD3BuG,EAAAyc,SAAAA,IAQrB,OAX8C3V,EAAAA,EAAAA,GAO7C4/B,EAAA/sC,UAAAqjB,YAAA,WACC,OAAOvjB,KAAKgjB,UAGdiqB,EAXA,CAA8C32B,EAAAA,SCE9C,IAAA42B,GAAA,SAAA9/B,GAEC,SAAA8/B,EAAYn9B,EACQ3I,GADpB,IAAAb,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,sBAAoB/P,YADpBuG,EAAAa,cAAAA,IAQrB,OAXuCiG,EAAAA,EAAAA,GAOtC6/B,EAAAhtC,UAAAitC,iBAAA,WACC,OAAOntC,KAAKoH,eAGd8lC,EAXA,CAAuC52B,EAAAA,SCAvC,IAAA82B,GAAA,SAAAhgC,GAEC,SAAAggC,EAAYr9B,EACQsW,EACAiK,GAFpB,IAAA/pB,EAGC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,sBAAoB/P,YAFpBuG,EAAA8f,cAAAA,EACA9f,EAAA+pB,QAAAA,IAYrB,OAhBuCjjB,EAAAA,EAAAA,GAQtC+/B,EAAAltC,UAAAg2B,iBAAA,WACC,OAAOl2B,KAAKqmB,eAGb+mB,EAAAltC,UAAAuwB,WAAA,WACC,OAAOzwB,KAAKswB,SAGd8c,EAhBA,CAAuC92B,EAAAA,SCAvC,IAAA+2B,GAAA,SAAAjgC,GAEC,SAAAigC,EAAYt9B,EACQu9B,GADpB,IAAA/mC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,yCAAuC/P,YADvCuG,EAAA+mC,mBAAAA,IAQrB,OAX0DjgC,EAAAA,EAAAA,GAOzDggC,EAAAntC,UAAA2rC,UAAA,WACC,OAAO7rC,KAAKstC,oBAGdD,EAXA,CAA0D/2B,EAAAA,SCC1D,IAAAi3B,GAAA,SAAAngC,GAEC,SAAAmgC,EAAYx9B,EACQsW,EACA9b,GAFpB,IAAAhE,EAGC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,sBAAoB/P,YAFpBuG,EAAA8f,cAAAA,EACA9f,EAAAgE,QAAAA,IAYrB,OAhBuC8C,EAAAA,EAAAA,GAQtCkgC,EAAArtC,UAAAg2B,iBAAA,WACC,OAAOl2B,KAAKqmB,eAGbknB,EAAArtC,UAAA80B,WAAA,WACC,OAAOh1B,KAAKuK,SAGdgjC,EAhBA,CAAuCj3B,EAAAA,SCCvC,IAAAk3B,GAAA,SAAApgC,GAEC,SAAAogC,EAAYz9B,EACQsW,EACAiK,EACAR,GAHpB,IAAAvpB,EAIC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,wBAAsB/P,YAHtBuG,EAAA8f,cAAAA,EACA9f,EAAA+pB,QAAAA,EACA/pB,EAAAupB,UAAAA,IAerB,OApByCziB,EAAAA,EAAAA,GASxCmgC,EAAAttC,UAAAg2B,iBAAA,WACC,OAAOl2B,KAAKqmB,eAGbmnB,EAAAttC,UAAAuwB,WAAA,WACC,OAAOzwB,KAAKswB,SAGbkd,EAAAttC,UAAAutC,aAAA,WACC,OAAOztC,KAAK8vB,WAEd0d,EApBA,CAAyCl3B,EAAAA,SCJzC,IAAAo3B,GAAA,SAAAtgC,GAEC,SAAAsgC,EAAY39B,EACQ0R,GADpB,IAAAlb,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,wBAAsB/P,YADtBuG,EAAAkb,UAAAA,IAQrB,OAXyCpU,EAAAA,EAAAA,GAOxCqgC,EAAAxtC,UAAA0hB,aAAA,WACC,OAAO5hB,KAAKyhB,WAGdisB,EAXA,CAAyCp3B,EAAAA,SCEzC,IAAAq3B,GAAA,SAAAvgC,GAEC,SAAAugC,EAAY59B,EACQ69B,GADpB,IAAArnC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,uCAAqC/P,YADrCuG,EAAAqnC,aAAAA,IAQrB,OAXwDvgC,EAAAA,EAAAA,GAOvDsgC,EAAAztC,UAAA2rC,UAAA,WACC,OAAO7rC,KAAK4tC,cAGdD,EAXA,CAAwDr3B,EAAAA,SCFxD,IAAAu3B,GAAA,SAAAzgC,GAEC,SAAAygC,EAAY99B,EACQ+9B,GADpB,IAAAvnC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,oCAAkC/P,YADlCuG,EAAAunC,OAAAA,IAQrB,OAXqDzgC,EAAAA,EAAAA,GAOpDwgC,EAAA3tC,UAAA6tC,UAAA,WACC,OAAO/tC,KAAK8tC,QAGdD,EAXA,CAAqDv3B,EAAAA,SCJrD,IAAA03B,GAAA,WAQA,SAAAA,IAKkBhuC,KAAAiuC,cAAgB,IAAIt+B,IAEpB3P,KAAAkuC,eAAiB,IAAIn2B,EAAAA,cAiBvC,OAfCi2B,EAAA9tC,UAAAgC,KAAA,SAAKC,EAAgB4N,QAAA,IAAAA,IAAAA,EAAA+F,IACpB9V,KAAKiuC,cAAcj+B,IAAID,EAAYyF,QAASrT,GAC5CnC,KAAKkuC,eAAehsC,KAAKlC,KAAKiuC,gBAG/BD,EAAA9tC,UAAA0Z,QAAA,SAAQ7J,GACP,YADO,IAAAA,IAAAA,EAAA+F,IACA9V,KAAKkuC,eACNh2B,eACArD,KACA3M,EAAAA,KAAG,SAAE+lC,GACJ,OAAOA,EAAc79B,IAAIL,EAAYyF,UAAYw4B,EAAgCG,kBAhBjEH,EAAAG,cAAe,sBAHvC7kC,EAAAA,aAwBD0kC,EAhCA,GCAA,IAAAI,GAAA,WAQA,SAAAA,IAKkBpuC,KAAAquC,gBAAkB,IAAI1+B,IAEtB3P,KAAAsuC,iBAAmB,IAAIv2B,EAAAA,cAiBzC,OAfCq2B,EAAAluC,UAAAgC,KAAA,SAAKC,EAAe4N,QAAA,IAAAA,IAAAA,EAAA+F,IACnB9V,KAAKquC,gBAAgBr+B,IAAID,EAAYyF,QAASrT,GAC9CnC,KAAKsuC,iBAAiBpsC,KAAKlC,KAAKquC,kBAGjCD,EAAAluC,UAAA0Z,QAAA,SAAQ7J,GACP,YADO,IAAAA,IAAAA,EAAA+F,IACA9V,KAAKsuC,iBACNp2B,eACArD,KACA3M,EAAAA,KAAG,SAAE+lC,GACJ,OAAOA,EAAc79B,IAAIL,EAAYyF,UAAY44B,EAAkCG,iBAhBnEH,EAAAG,YAAc,iCAHtCjlC,EAAAA,aAwBD8kC,EAhCA,GCAA,IAAAI,GAAA,WAgBC,SAAAA,EAAoB53B,EACT63B,EACAC,GAFS1uC,KAAA4W,kBAAAA,EACT5W,KAAAyuC,gCAAAA,EACAzuC,KAAA0uC,kCAAAA,EAwBZ,OArBCF,EAAAtuC,UAAAyuC,mBAAA,SAAmBrnC,EAAsByI,QAAA,IAAAA,IAAAA,EAAA+F,SAEZ5P,IAAxBoB,EAAOsnC,cAAsD,OAAxBtnC,EAAOsnC,cAC/C5uC,KAAKyuC,gCAAgCvsC,KAAKoF,EAAOsnC,mBAGvB1oC,IAAvBoB,EAAOunC,aAAoD,OAAvBvnC,EAAOunC,aAC9C7uC,KAAK0uC,kCAAkCxsC,KAAKoF,EAAOunC,kBAG9B3oC,IAAlBoB,EAAOwmC,QAA0C,OAAlBxmC,EAAOwmC,QACzC9tC,KAAK8uC,OAAOxnC,EAAOwmC,OAAQ/9B,GAG5B/P,KAAK4W,kBAAkBE,SAAS,IAAI62B,GAAmC59B,EAAazI,KAGrFknC,EAAAtuC,UAAA4uC,OAAA,SAAOhB,EAAgB/9B,QAAA,IAAAA,IAAAA,EAAA+F,IACtB9V,KAAK4W,kBAAkBE,SAAS,IAAI+2B,GAAgC99B,EAAa+9B,yBA1BlFxkC,EAAAA,sDAXQ4N,EAAAA,yBAOA82B,UACAI,MAgCTI,EA1CA,GCAA,IAAAO,GAAA,WA+BC,SAAAA,EAA6Bn4B,EACTo4B,EACAC,EACAC,GAHSlvC,KAAA4W,kBAAAA,EACT5W,KAAAgvC,8BAAAA,EACAhvC,KAAAivC,iBAAAA,EACAjvC,KAAAkvC,0BAAAA,EA2DrB,OAxDCH,EAAA7uC,UAAAivC,gBAAA,SAAgBp/B,QAAA,IAAAA,IAAAA,EAAA+F,IACf9V,KAAK4W,kBAAkBE,SAAS,IAAIi2B,GAAuBh9B,KAG5Dg/B,EAAA7uC,UAAAkvC,qBAAA,SAAqBr/B,QAAA,IAAAA,IAAAA,EAAA+F,IACpB9V,KAAK4W,kBAAkBE,SAAS,IAAIk2B,GAAgCj9B,GAAa,KAGlFg/B,EAAA7uC,UAAAmvC,sBAAA,SAAsBt/B,QAAA,IAAAA,IAAAA,EAAA+F,IACrB9V,KAAK4W,kBAAkBE,SAAS,IAAIk2B,GAAgCj9B,GAAa,KAGlFg/B,EAAA7uC,UAAAovC,kBAAA,SAAkBtsB,EAAkBjT,QAAA,IAAAA,IAAAA,EAAA+F,IACnC9V,KAAK4W,kBAAkBE,SAAS,IAAIm2B,GAAyBl9B,EAAaiT,KAG3E+rB,EAAA7uC,UAAA8X,UAAA,SAAUy0B,EAAmB18B,QAAA,IAAAA,IAAAA,EAAA+F,IAC5B9V,KAAKivC,iBAAiBj3B,UAAUjI,EAAa08B,IAG9CsC,EAAA7uC,UAAAqvC,iBAAA,SAAiBjoC,EAAuByI,QAAA,IAAAA,IAAAA,EAAA+F,IACvC9V,KAAK4W,kBAAkBE,SAAS,IAAIo2B,GAAkBn9B,EAAazI,KAGpEynC,EAAA7uC,UAAAsvC,WAAA,SAAWlf,EAAkBjK,EAA+BtW,QAAA,IAAAA,IAAAA,EAAA+F,IAC3D9V,KAAK4W,kBAAkBE,SAAS,IAAIs2B,GAAkBr9B,EAAasW,EAAeiK,KAGnFye,EAAA7uC,UAAAuvC,aAAA,SAAanf,EAAkBR,EAAsBzJ,EAA+BtW,QAAA,IAAAA,IAAAA,EAAA+F,IACnF9V,KAAK4W,kBAAkBE,SAAS,IAAI02B,GAAoBz9B,EAAasW,EAAeiK,EAASR,KAG9Fif,EAAA7uC,UAAAwvC,gBAAA,SAAgBpoC,EAAsByI,QAAA,IAAAA,IAAAA,EAAA+F,IACrC9V,KAAKgvC,8BAA8B5C,oBAAoB9kC,EAAQyI,IAGhEg/B,EAAA7uC,UAAAyvC,sBAAA,SAAsBroC,EAA4ByI,QAAA,IAAAA,IAAAA,EAAA+F,IACjD9V,KAAK4W,kBAAkBE,SAAS,IAAIu2B,GAAqCt9B,EAAazI,KAGvFynC,EAAA7uC,UAAA0vC,WAAA,SAAWrlC,EAA8B8b,EAA8BtW,QAAA,IAAAA,IAAAA,EAAA+F,IACtE9V,KAAK4W,kBAAkBE,SAAS,IAAIy2B,GAAkBx9B,EAAasW,EAAe9b,KAGnFwkC,EAAA7uC,UAAAyuC,mBAAA,SAAmBrnC,EAAsByI,QAAA,IAAAA,IAAAA,EAAA+F,IACxC9V,KAAKkvC,0BAA0BP,mBAAmBrnC,EAAQyI,IAG3Dg/B,EAAA7uC,UAAA4uC,OAAA,SAAOhB,EAAgB/9B,QAAA,IAAAA,IAAAA,EAAA+F,IACtB9V,KAAKkvC,0BAA0BJ,OAAOhB,EAAQ/9B,IAG/Cg/B,EAAA7uC,UAAA2vC,aAAA,SAAapuB,EAAmB1R,QAAA,IAAAA,IAAAA,EAAA+F,IAC/B9V,KAAK4W,kBAAkBE,SAAS,IAAI42B,GAAoB39B,GAAc0R,yBA9DvEnY,EAAAA,sDA1BQ4N,EAAAA,yBAEAi1B,UACAS,UAoBA4B,MAoETO,EA7FA,sBCwBC,SAAAe,EAA6B//B,EACTsW,EACjBzP,EACAo4B,EACAC,EACAC,GALH,IAAA3oC,EAMC6G,EAAAxM,KAAAZ,KAAM4W,EAAmBo4B,EAA+BC,EAAkBC,IAA0BlvC,YANxEuG,EAAAwJ,YAAAA,EACTxJ,EAAA8f,cAAAA,IA8ErB,OAjFkDhZ,EAAAA,EAAAA,GAYjDyiC,EAAA5vC,UAAAivC,gBAAA,WACC/hC,EAAAlN,UAAMivC,gBAAevuC,KAAAZ,KAACA,KAAK+P,cAI5B+/B,EAAA5vC,UAAAkvC,qBAAA,WACChiC,EAAAlN,UAAMkvC,qBAAoBxuC,KAAAZ,KAACA,KAAK+P,cAIjC+/B,EAAA5vC,UAAAmvC,sBAAA,WACCjiC,EAAAlN,UAAMmvC,sBAAqBzuC,KAAAZ,KAACA,KAAK+P,cAIlC+/B,EAAA5vC,UAAAovC,kBAAA,SAAkBtsB,GACjB5V,EAAAlN,UAAMovC,kBAAiB1uC,KAAAZ,KAACgjB,EAAUhjB,KAAK+P,cAIxC+/B,EAAA5vC,UAAA8X,UAAA,SAAUy0B,GACTr/B,EAAAlN,UAAM8X,UAASpX,KAAAZ,KAACysC,EAAOzsC,KAAK+P,cAI7B+/B,EAAA5vC,UAAAqvC,iBAAA,SAAiBjoC,EAAuByI,QAAA,IAAAA,IAAAA,EAAA+F,IACvC1I,EAAAlN,UAAMqvC,iBAAgB3uC,KAAAZ,KAACsH,EAAQtH,KAAK+P,cAIrC+/B,EAAA5vC,UAAAsvC,WAAA,SAAWlf,GACVljB,EAAAlN,UAAMsvC,WAAU5uC,KAAAZ,KAACswB,EAAStwB,KAAKqmB,cAAermB,KAAK+P,cAIpD+/B,EAAA5vC,UAAAuvC,aAAA,SAAanf,EAAkBR,GAC9B1iB,EAAAlN,UAAMuvC,aAAY7uC,KAAAZ,KAACswB,EAASR,EAAW9vB,KAAKqmB,cAAermB,KAAK+P,cAIjE+/B,EAAA5vC,UAAAwvC,gBAAA,SAAgBpoC,EAAsByI,QAAA,IAAAA,IAAAA,EAAA+F,IACrC1I,EAAAlN,UAAMwvC,gBAAe9uC,KAAAZ,KAACsH,EAAQtH,KAAK+P,cAIpC+/B,EAAA5vC,UAAAyvC,sBAAA,SAAsBroC,EAA4ByI,QAAA,IAAAA,IAAAA,EAAA+F,IACjD1I,EAAAlN,UAAMyvC,sBAAqB/uC,KAAAZ,KAACsH,EAAQtH,KAAK+P,cAI1C+/B,EAAA5vC,UAAA0vC,WAAA,SAAWrlC,GACV6C,EAAAlN,UAAM0vC,WAAUhvC,KAAAZ,KAACuK,EAASvK,KAAKqmB,cAAermB,KAAK+P,cAIpD+/B,EAAA5vC,UAAAyuC,mBAAA,SAAmBrnC,EAAsByI,QAAA,IAAAA,IAAAA,EAAA+F,IACxC1I,EAAAlN,UAAMyuC,mBAAkB/tC,KAAAZ,KAACsH,EAAQtH,KAAK+P,cAIvC+/B,EAAA5vC,UAAA4uC,OAAA,SAAOhB,GACN1gC,EAAAlN,UAAM4uC,OAAMluC,KAAAZ,KAAC8tC,EAAQ9tC,KAAK+P,cAI3B+/B,EAAA5vC,UAAA2vC,aAAA,SAAapuB,GACZrU,EAAAlN,UAAM2vC,aAAYjvC,KAAAZ,KAACyhB,EAAWzhB,KAAK+P,kCA/EpCzG,EAAAA,sDAhBQqM,UACAmQ,UAJA5O,EAAAA,yBAKAi1B,UACAS,UAUA4B,MAgBRtjB,EAAAA,CADCN,0HAMDM,EAAAA,CADCN,+HAMDM,EAAAA,CADCN,gIAMDM,EAAAA,CADCN,kIAMDM,EAAAA,CADCN,oDACgBjrB,qEAKjBurB,EAAAA,CADCN,2DACoDjV,yEAKrDuV,EAAAA,CADCN,oDACmBuG,mEAKpBjG,EAAAA,CADCN,oDACqBuG,GAAOoN,yEAK7BrT,EAAAA,CADCN,2DACkDjV,wEAKnDuV,EAAAA,CADCN,2DAC8DjV,8EAK/DuV,EAAAA,CADCN,oDACmBjrB,sEAKpBurB,EAAAA,CADCN,2DACqDjV,2EAKtDuV,EAAAA,CADCN,uHAMDM,EAAAA,CADCN,6HAKFklB,GAjFkDf,uBCPjD,SAAAgB,EAAoBhgC,EACjBoF,EACA0Q,GAFH,IAAAtf,EAGC6G,EAAAxM,KAAAZ,KAAMmV,EAAqB0Q,IAA4B7lB,YAHpCuG,EAAAwJ,YAAAA,IAqBrB,OAvBoD1C,EAAAA,EAAAA,GASnD0iC,EAAA7vC,UAAAmV,YAAA,WACC,OAAOjI,EAAAlN,UAAMmV,YAAWzU,KAAAZ,KAACA,KAAK+P,cAI/BggC,EAAA7vC,UAAAmlB,wBAAA,WACC,OAAOjY,EAAAlN,UAAMmlB,wBAAuBzkB,KAAAZ,KAACA,KAAK+P,cAI3CggC,EAAA7vC,UAAAslB,YAAA,WACC,OAAOpY,EAAAlN,UAAMslB,YAAW5kB,KAAAZ,KAACA,KAAK+P,kCArB/BzG,EAAAA,sDANQqM,UACAlB,UAEAsQ,MAaRmG,EAAAA,CADCN,6EACcqd,EAAAA,6CAKf/c,EAAAA,CADCN,6EAC0Bqd,EAAAA,yDAK3B/c,EAAAA,CADCN,6EACcqd,EAAAA,6CAIhB8H,GAvBoDnqB,uBCJnD,SAAAoqB,WACC5iC,EAAAxM,KAAAZ,OAAOA,KAGT,OAN6CqN,EAAAA,EAAAA,uBAD5C/D,EAAAA,mDAOD0mC,GAN6CC,EAAAA,kBCP7CC,GAAA,WAWC,SAAAA,EAAoBC,GAAAnwC,KAAAmwC,wBAAAA,EAOrB,OAJCD,EAAAhwC,UAAAkwC,SAAA,SAASrgC,GACR,OAAO/P,KAAKmwC,wBAAwBE,KAAKtgC,wBAP1CzG,EAAAA,sDALQ0mC,MAeTE,EAlBA,GCEA,IAAAI,GAAA,WAEC,SAAAA,EAA6BC,EACT9e,EACAtvB,GAFSnC,KAAAuwC,OAAAA,EACTvwC,KAAAyxB,cAAAA,EACAzxB,KAAAmC,MAAAA,EAerB,OAZCmuC,EAAApwC,UAAAswC,UAAA,WACC,OAAOxwC,KAAKuwC,QAGbD,EAAApwC,UAAAuwC,iBAAA,WACC,OAAOzwC,KAAKyxB,eAGb6e,EAAApwC,UAAA0xB,SAAA,WACC,OAAO5xB,KAAKmC,OAGdmuC,EAnBA,sBCgBC,SAAAI,EAAoBzB,EACT0B,EACA12B,GAFX,IAAA1T,EAGC6G,EAAAxM,KAAAZ,OAAOA,YAHYuG,EAAA0oC,iBAAAA,EACT1oC,EAAAoqC,2BAAAA,EACApqC,EAAA0T,mBAAAA,IA8CZ,OAlD0C5M,EAAAA,EAAAA,GAQzCqjC,EAAAxwC,UAAA8X,UAAA,SAAUy0B,EAAmB18B,QAAA,IAAAA,IAAAA,EAAA+F,IAC5B9V,KAAKivC,iBAAiBj3B,UAAUjI,EAAa08B,IAG9CiE,EAAAxwC,UAAA2sC,WAAA,SAAW1mC,EAAkB4J,QAAA,IAAAA,IAAAA,EAAA+F,IAC5B9V,KAAKivC,iBAAiBpC,WAAW98B,EAAa5J,IAG/CuqC,EAAAxwC,UAAA4sC,SAAA,SAAShV,EAAuC/nB,QAAA,IAAAA,IAAAA,EAAA+F,IAC/C9V,KAAKivC,iBAAiBnC,SAAS/8B,EAAa+nB,IAG7C4Y,EAAAxwC,UAAA0wC,gBAAA,SAAgBC,EAAmBC,EAAoB3uC,EAAY4N,GAAnE,IAAAxJ,EAAAvG,UAAmE,IAAA+P,IAAAA,EAAA+F,QAE5Di7B,EAAU/wC,KAAKia,mBACfd,mBACAtE,KACA3M,EAAAA,KAAG,SAAEgR,GACJ,OAAOA,EAAS23B,GAAWr7B,YAI5Bw7B,EAAWhxC,KAAK2wC,2BACfP,SAASrgC,GAEhBkhC,EAAAA,IAAIF,EAASC,GACXn8B,KACAsB,EAAAA,KAAK,GACLnW,KAAKuU,aAELO,WAAS,SAAEo8B,OAELX,EAASW,EAAM,GACpB5V,EAAS4V,EAAM,GAEhB3qC,EAAKumC,SACJ,IAAIwD,GAA8BC,EAAQjV,EAAOwV,GAAa3uC,GAC9D4N,2BA9CJzG,EAAAA,sDATQsjC,UACAsD,UACA33B,MA0DTm4B,GAlD0Cz8B,uBCDzC,SAAAk9B,EAA6BphC,EAC1Bk/B,EACA0B,EACA12B,GAHH,IAAA1T,EAIC6G,EAAAxM,KAAAZ,KAAMivC,EAAkB0B,EAA4B12B,IAAmBja,YAJ3CuG,EAAAwJ,YAAAA,IA2B9B,OA7B+C1C,EAAAA,EAAAA,GAU9C8jC,EAAAjxC,UAAA8X,UAAA,SAAUy0B,GACTr/B,EAAAlN,UAAM8X,UAASpX,KAAAZ,KAACysC,EAAOzsC,KAAK+P,cAI7BohC,EAAAjxC,UAAA2sC,WAAA,SAAW1mC,GACViH,EAAAlN,UAAM2sC,WAAUjsC,KAAAZ,KAACmG,EAASnG,KAAK+P,cAIhCohC,EAAAjxC,UAAA4sC,SAAA,SAAShV,GACR1qB,EAAAlN,UAAM4sC,SAAQlsC,KAAAZ,KAAC83B,EAAQ93B,KAAK+P,cAI7BohC,EAAAjxC,UAAA0wC,gBAAA,SAAgBC,EAAmBC,EAAoB3uC,GACtDiL,EAAAlN,UAAM0wC,gBAAehwC,KAAAZ,KAAC6wC,EAAWC,EAAY3uC,EAAOnC,KAAK+P,kCA3B1DzG,EAAAA,sDAPQqM,UACAi3B,UACAsD,UACA33B,MAeR2S,EAAAA,CADCN,oDACgBjrB,qEAKjBurB,EAAAA,CADCN,4HAMDM,EAAAA,CADCN,oDACgB0lB,iEAKjBplB,EAAAA,CADCN,8IAKFumB,GA7B+CT,uBCG9C,SAAAU,EAAoBrhC,EACjBoF,EACAqD,EACAC,GAHH,IAAAlS,EAIC6G,EAAAxM,KAAAZ,KAAMmV,EAAqBqD,EAAkCC,IAAgCzY,YAJ1EuG,EAAAwJ,YAAAA,IAqCrB,OAvCiD1C,EAAAA,EAAAA,GAUhD+jC,EAAAlxC,UAAAwY,WAAA,WACC,OAAOtL,EAAAlN,UAAMwY,WAAU9X,KAAAZ,KAACA,KAAK+P,cAI9BqhC,EAAAlxC,UAAA+Y,eAAA,WACC,OAAO7L,EAAAlN,UAAM+Y,eAAcrY,KAAAZ,KAACA,KAAK+P,cAIlCqhC,EAAAlxC,UAAAiZ,iBAAA,WACC,OAAO/L,EAAAlN,UAAMiZ,iBAAgBvY,KAAAZ,KAACA,KAAK+P,cAIpCqhC,EAAAlxC,UAAAkZ,aAAA,WACC,OAAOhM,EAAAlN,UAAMkZ,aAAYxY,KAAAZ,KAACA,KAAK+P,cAIhCqhC,EAAAlxC,UAAAmZ,UAAA,WACC,OAAOjM,EAAAlN,UAAMmZ,UAASzY,KAAAZ,KAACA,KAAK+P,cAI7BqhC,EAAAlxC,UAAAsZ,mBAAA,WACC,OAAOpM,EAAAlN,UAAMsZ,mBAAkB5Y,KAAAZ,KAACA,KAAK+P,kCArCtCzG,EAAAA,sDAPQqM,UACAlB,UAGA2D,UAFAR,MAgBRsT,EAAAA,CADCN,6EACaqd,EAAAA,4CAKd/c,EAAAA,CADCN,6EACiBqd,EAAAA,gDAKlB/c,EAAAA,CADCN,6EACmBqd,EAAAA,kDAKpB/c,EAAAA,CADCN,6EACeqd,EAAAA,8CAKhB/c,EAAAA,CADCN,6EACYqd,EAAAA,2CAKb/c,EAAAA,CADCN,6EACqBqd,EAAAA,oDAIvBmJ,GAvCiD74B,uBCChD,SAAA84B,EAA6BhrB,EAC1BkU,GADH,IAAAh0B,EAEC6G,EAAAxM,KAAAZ,KAAMu6B,IAAsBv6B,YAFAuG,EAAA8f,cAAAA,IAkD9B,OApDoDhZ,EAAAA,EAAAA,GAQnDgkC,EAAAnxC,UAAA03B,kBAAA,SAAkBvR,QAAA,IAAAA,IAAAA,EAAAsT,IACjBvsB,EAAAlN,UAAM03B,kBAAiBh3B,KAAAZ,KAACA,KAAKqmB,gBAI9BgrB,EAAAnxC,UAAA23B,WAAA,SAAWC,GACV1qB,EAAAlN,UAAM23B,WAAUj3B,KAAAZ,KAAC83B,EAAQ93B,KAAKqmB,gBAI/BgrB,EAAAnxC,UAAAwvB,SAAA,SAASlnB,EAAe6d,QAAA,IAAAA,IAAAA,EAAAsT,IACvBvsB,EAAAlN,UAAMwvB,SAAQ9uB,KAAAZ,KAACwI,EAAOxI,KAAKqmB,gBAI5BgrB,EAAAnxC,UAAA63B,kBAAA,SAAkBvvB,EAAe6d,QAAA,IAAAA,IAAAA,EAAAsT,IAChCvsB,EAAAlN,UAAM63B,kBAAiBn3B,KAAAZ,KAACwI,EAAOxI,KAAKqmB,gBAIrCgrB,EAAAnxC,UAAA83B,eAAA,SAAe7xB,EAAkBkgB,QAAA,IAAAA,IAAAA,EAAAsT,IAChCvsB,EAAAlN,UAAM83B,eAAcp3B,KAAAZ,KAACmG,EAASnG,KAAKqmB,gBAIpCgrB,EAAAnxC,UAAAs6B,aAAA,SAAa1L,EAAoBzI,QAAA,IAAAA,IAAAA,EAAAsT,IAChCvsB,EAAAlN,UAAMs6B,aAAY55B,KAAAZ,KAAC8uB,EAAU9uB,KAAKqmB,gBAInCgrB,EAAAnxC,UAAAu6B,cAAA,SAAc3L,EAAoBzI,QAAA,IAAAA,IAAAA,EAAAsT,IACjCvsB,EAAAlN,UAAMu6B,cAAa75B,KAAAZ,KAAC8uB,EAAU9uB,KAAKqmB,gBAIpCgrB,EAAAnxC,UAAAi4B,SAAA,SAASrJ,EAAoBzI,QAAA,IAAAA,IAAAA,EAAAsT,IAC5BvsB,EAAAlN,UAAMi4B,SAAQv3B,KAAAZ,KAAC8uB,EAAU9uB,KAAKqmB,gBAI/BgrB,EAAAnxC,UAAAk4B,UAAA,SAAUtJ,EAAoBzI,QAAA,IAAAA,IAAAA,EAAAsT,IAC7BvsB,EAAAlN,UAAMk4B,UAASx3B,KAAAZ,KAAC8uB,EAAU9uB,KAAKqmB,oCAlDhC/c,EAAAA,sDAPQwc,UACA6R,MAeRzM,EAAAA,CADCN,oDACgC9E,0EAKjCoF,EAAAA,CADCN,oDACkBjrB,sEAKnBurB,EAAAA,CADCN,2DACsC9E,iEAKvCoF,EAAAA,CADCN,2DAC+C9E,0EAKhDoF,EAAAA,CADCN,4DAC+C9E,uEAKhDoF,EAAAA,CADCN,oDACsByN,GAAyBvS,qEAKhDoF,EAAAA,CADCN,oDACuByN,GAAyBvS,sEAKjDoF,EAAAA,CADCN,oDACkByN,GAAyBvS,iEAK5CoF,EAAAA,CADCN,oDACmByN,GAAyBvS,kEAI9CurB,GApDoD/W,uBCKnD,SAAAgX,EAA6BjrB,EAC1BwT,GADH,IAAAtzB,EAEC6G,EAAAxM,KAAAZ,KAAM65B,IAAsB75B,YAFAuG,EAAA8f,cAAAA,IA6C9B,OA/CsDhZ,EAAAA,EAAAA,GAQrDikC,EAAApxC,UAAA45B,QAAA,WACC,OAAO1sB,EAAAlN,UAAM45B,QAAOl5B,KAAAZ,KAACA,KAAKqmB,gBAI3BirB,EAAApxC,UAAA65B,iBAAA,SAAiB1T,GAChB,YADgB,IAAAA,IAAAA,EAAAsT,IACTvsB,EAAAlN,UAAM65B,iBAAgBn5B,KAAAZ,KAACA,KAAKqmB,gBAIpCirB,EAAApxC,UAAA85B,qBAAA,WACC,OAAO5sB,EAAAlN,UAAM85B,qBAAoBp5B,KAAAZ,KAACA,KAAKqmB,gBAIxCirB,EAAApxC,UAAA+5B,gBAAA,WACC,OAAO7sB,EAAAlN,UAAM+5B,gBAAer5B,KAAAZ,KAACA,KAAKqmB,gBAInCirB,EAAApxC,UAAAg6B,aAAA,SAAa7T,GACZ,YADY,IAAAA,IAAAA,EAAAsT,IACLvsB,EAAAlN,UAAMg6B,aAAYt5B,KAAAZ,KAACA,KAAKqmB,gBAIhCirB,EAAApxC,UAAAi6B,YAAA,SAAY7J,GACX,OAAOljB,EAAAlN,UAAMi6B,YAAWv5B,KAAAZ,KAACswB,EAAStwB,KAAKqmB,gBAIxCirB,EAAApxC,UAAAk6B,kBAAA,WACC,OAAOhtB,EAAAlN,UAAMk6B,kBAAiBx5B,KAAAZ,KAACA,KAAKqmB,gBAIrCirB,EAAApxC,UAAAm6B,cAAA,WACC,OAAOjtB,EAAAlN,UAAMm6B,cAAaz5B,KAAAZ,KAACA,KAAKqmB,oCA7CjC/c,EAAAA,sDATQwc,UACA2P,MAiBRvK,EAAAA,CADCN,6EACUqd,EAAAA,yCAKX/c,EAAAA,CADCN,oDAC+B9E,2BAAsCmiB,EAAAA,kDAKtE/c,EAAAA,CADCN,6EACuBqd,EAAAA,sDAKxB/c,EAAAA,CADCN,6EACkBqd,EAAAA,iDAKnB/c,EAAAA,CADCN,oDAC2B9E,2BAAsCmiB,EAAAA,8CAKlE/c,EAAAA,CADCN,oDACoBuG,2BAAU8W,EAAAA,6CAK/B/c,EAAAA,CADCN,6EACoBqd,EAAAA,mDAKrB/c,EAAAA,CADCN,6EACgBqd,EAAAA,+CAIlBqJ,GA/CsD1X,uBCDrD,SAAA2X,EAAoBxhC,EACjB6G,EACA63B,EACAC,GAHH,IAAAnoC,EAIC6G,EAAAxM,KAAAZ,KAAM4W,EAAmB63B,EAAiCC,IAAkC1uC,YAJzEuG,EAAAwJ,YAAAA,IAgBrB,OAlBoD1C,EAAAA,EAAAA,GAUnDkkC,EAAArxC,UAAAyuC,mBAAA,SAAmBrnC,GAClB8F,EAAAlN,UAAMyuC,mBAAkB/tC,KAAAZ,KAACsH,EAAQtH,KAAK+P,cAIvCwhC,EAAArxC,UAAA4uC,OAAA,SAAOhB,GACN1gC,EAAAlN,UAAM4uC,OAAMluC,KAAAZ,KAAC8tC,EAAQ9tC,KAAK+P,kCAjB3BzG,EAAAA,sDAPQqM,UAHAuB,EAAAA,yBAMA82B,UACAI,MAcRljB,EAAAA,CADCN,mIAMDM,EAAAA,CADCN,uHAIF2mB,GAlBoD/C,ICcpD,IAAagD,GAAiB,CAC7B,CAAEviC,QAASkI,GAAsBwf,SAAUiR,IAC3C,CAAE34B,QAAS8G,GAAwB4gB,SAAUqR,IAC7C,CAAE/4B,QAAS26B,GAAsBjT,SAAU2T,IAC3C,CAAEr7B,QAASm6B,GAAwBzS,SAAU8T,IAC7C,CAAEx7B,QAASg8B,GAAyBtU,SAAUyU,IAC9C,CAAEn8B,QAASs8B,GAA2B5U,SAAU+U,IAChD,CAAEz8B,QAAS8/B,GAAyBpY,SAAUmZ,IAC9C,CAAE7gC,QAAS2W,GAA2B+Q,SAAUoZ,IAChD,CAAE9gC,QAASyhC,GAAsB/Z,SAAUwa,IAC3C,CAAEliC,QAASsJ,GAAwBoe,SAAUya,IAE7C,CAAEniC,QAASqrB,GAA2B3D,SAAU0a,IAChD,CAAEpiC,QAAS2qB,GAA6BjD,SAAU2a,IAElD,CAAEriC,QAASu/B,GAA2B7X,SAAU4a,KC1CjDE,GAAA,WAsCC,SAAAA,EAAoBC,EACT5H,GADS9pC,KAAA0xC,iBAAAA,EACT1xC,KAAA8pC,mBAAAA,EAzBM9pC,KAAA2xC,yBAA2B,oBAE3B3xC,KAAA4xC,2BAA6B,sBAE7B5xC,KAAA6xC,wBAA0B,aAE1B7xC,KAAA8xC,0BAA4B,eAE5B9xC,KAAA+xC,uBAAyB,YAEzB/xC,KAAAgyC,sBAAwB,WAExBhyC,KAAAiyC,iBAAmB,eAEnBjyC,KAAAkyC,kBAAoB,gBAI7BlyC,KAAAmyC,SAA2B,KAI3BnyC,KAAAkU,aAAe,IAAIC,EAAAA,QAI1BnU,KAAK0mB,SAAW1mB,KAAK0xC,iBAAiBU,eAAe,KAAM,MAgJ7D,OA7ICX,EAAAvxC,UAAAsR,YAAA,WACCxR,KAAKkU,aAAahS,OAClBlC,KAAKkU,aAAaI,YAGnBm9B,EAAAvxC,UAAAmyC,KAAA,SAAKzhC,EAAwBb,GAA7B,IAAAxJ,EAAAvG,KAECA,KAAKsyC,WAAa1hC,EAElB5Q,KAAK8pC,mBACHJ,aAAa35B,GACb8E,KAAKN,EAAAA,UAAUvU,KAAKkU,eACpBY,WAAS,SAAEy9B,OAELC,EAAOjsC,EAAKksC,YAAYF,GAE9BhsC,EAAKmsC,iBAAiBF,OAIjBf,EAAAvxC,UAAAuyC,YAAR,SAAoBxI,GAApB,IAAA1jC,EAAAvG,KAEC,GAAKA,KAAKmyC,SAGH,KAEFQ,EAAO,GAWX,OATAnzC,OAAOuuB,KAAK/tB,KAAKmyC,UACb3rC,SAAO,SAAEvF,GACLgpC,EAAIhpC,KAASsF,EAAK4rC,SAASlxC,KAC9B0xC,EAAK1xC,GAAOgpC,EAAIhpC,OAIrBjB,KAAKmyC,SAAWlI,EAET0I,EAdP,OADA3yC,KAAKmyC,SAAWlI,EACTjqC,KAAKmyC,UAkBNV,EAAAvxC,UAAAwyC,iBAAR,SAAyBF,GAEpBA,EAAK3yC,eAAe,iBACvBG,KAAK4yC,eAAeJ,EAAKlzB,aAActf,KAAK2xC,0BAGzCa,EAAK3yC,eAAe,mBACvBG,KAAK4yC,eAAeJ,EAAKjzB,eAAgBvf,KAAK4xC,4BAG3CY,EAAK3yC,eAAe,WACvBG,KAAK6yC,wBACL7yC,KAAK8yC,SAAS9yC,KAAK+yC,sBAAsBP,EAAK1pC,SAG3C0pC,EAAK3yC,eAAe,iBACvBG,KAAKgzC,2BACLhzC,KAAK8yC,SAAS9yC,KAAKizC,4BAA4BT,EAAKtpC,gBAI9CuoC,EAAAvxC,UAAA0yC,eAAR,SAAuBlnB,EAAiBwnB,GACnCxnB,EACH1rB,KAAK8yC,SAASI,GAEdlzC,KAAKmzC,YAAYD,IAIXzB,EAAAvxC,UAAA2yC,sBAAR,WAAA,IAAAtsC,EAAAvG,KACCR,OAAOuuB,KAAKhlB,GACRb,KAAG,SAAEjH,GAAgB,OAAA8H,EAAY9H,MACjCiH,KAAG,SAAEY,GAAuB,OAAAvC,EAAKwsC,sBAAsBjqC,MACvDwM,QAAM,SAAE89B,GAAsB,QAAEA,KAChC5sC,SAAO,SAAE4sC,GACT7sC,EAAK4sC,YAAYC,OAId3B,EAAAvxC,UAAA6yC,sBAAR,SAA8BjqC,GAC7B,OAAQA,GACP,KAAKC,EAAYnF,OACjB,KAAKmF,EAAYA,EAAYnF,QAC5B,OAAO5D,KAAK6xC,wBAEb,KAAK9oC,EAAYlF,SACjB,KAAKkF,EAAYA,EAAYlF,UAC5B,OAAO7D,KAAK8xC,0BAEb,KAAK/oC,EAAYjF,MACjB,KAAKiF,EAAYA,EAAYjF,OAC5B,OAAO9D,KAAK+xC,uBAEb,KAAKhpC,EAAYhF,KACjB,KAAKgF,EAAYA,EAAYhF,MAC5B,OAAO/D,KAAKgyC,sBAEb,QACC,OAAOhyC,KAAK6xC,0BAIPJ,EAAAvxC,UAAA+yC,4BAAR,SAAoC1K,GACnC,OAAQA,GACP,KAAK8K,GAAkBnvC,IACvB,KAAKmvC,GAAkBA,GAAkBnvC,KACxC,OAAOlE,KAAKiyC,iBAEb,KAAKoB,GAAkBpvC,KACvB,KAAKovC,GAAkBA,GAAkBpvC,MACxC,OAAOjE,KAAKkyC,kBAEb,QACC,OAAO,OAIFT,EAAAvxC,UAAA8yC,yBAAR,WAAA,IAAAzsC,EAAAvG,KACCR,OAAOuuB,KAAKslB,IACRnrC,KAAG,SAAEjH,GAAgB,OAAAoyC,GAAkBpyC,MACvCiH,KAAG,SAAEqgC,GAAgC,OAAAhiC,EAAK0sC,4BAA4B1K,MACtEjzB,QAAM,SAAE89B,GAAsB,QAAEA,KAChC5sC,SAAO,SAAE4sC,GACT7sC,EAAK4sC,YAAYC,OAId3B,EAAAvxC,UAAA4yC,SAAR,SAAiBI,GACZA,GACHlzC,KAAK0mB,SAASosB,SAAS9yC,KAAKsyC,WAAW3gC,cAAeuhC,IAIhDzB,EAAAvxC,UAAAizC,YAAR,SAAoBD,GACfA,GACHlzC,KAAK0mB,SAASysB,YAAYnzC,KAAKsyC,WAAW3gC,cAAeuhC,wBAzK3D5pC,EAAAA,sDAXsDgqC,EAAAA,wBAK9ClK,MAmLTqI,EAxLA,sBCQC,SAAA8B,WACCnmC,EAAAxM,KAAAZ,OAAOA,KAET,OAL8CqN,EAAAA,EAAAA,uBAD7C/D,EAAAA,mDAMDiqC,GAL8C95B,mBCI7C,SAAA+5B,WACCpmC,EAAAxM,KAAAZ,OAAOA,KAGT,OAN4CqN,EAAAA,EAAAA,uBAD3C/D,EAAAA,mDAODkqC,GAN4C/5B,mBCD3C,SAAAg6B,WACCrmC,EAAAxM,KAAAZ,OAAOA,KAET,OAL8CqN,EAAAA,EAAAA,uBAD7C/D,EAAAA,mDAMDmqC,GAL8Ch6B,mBCG7C,SAAAi6B,WACCtmC,EAAAxM,KAAAZ,MAAM,IAAMA,KAEd,OALsDqN,EAAAA,EAAAA,uBADrD/D,EAAAA,mDAMDoqC,GALsDj6B,ICNtDk6B,GAAA,WAMC,SAAAA,EAAYnzB,EACTC,GALczgB,KAAAwgB,KAAe,EAEfxgB,KAAAygB,QAAkB,EAK9BD,MAAAA,IACHxgB,KAAKwgB,IAAMA,GAGRC,MAAAA,IACHzgB,KAAKygB,OAASA,GAajB,OARCkzB,EAAAzzC,UAAA0zC,aAAA,WACC,OAAO5zC,KAAKwgB,KAGbmzB,EAAAzzC,UAAA2zC,gBAAA,WACC,OAAO7zC,KAAKygB,QAGdkzB,EA3BA,sBCUC,SAAAG,WACC1mC,EAAAxM,KAAAZ,KAAM,IAAI2zC,KAAkC3zC,KAG9C,OANiDqN,EAAAA,EAAAA,uBADhD/D,EAAAA,mDAODwqC,GANiDr6B,ICRjDs6B,GAAA,WAOA,SAAAA,KAWA,OARCA,EAAA7zC,UAAA6F,QAAA,SAAQuB,GAEP,OAAIA,EAAOnB,QACH,IAAIwtC,GAAgCrsC,EAAOkZ,IAAKlZ,EAAOmZ,QAEvD,IAAIkzB,IAAgC,GAAO,wBARpDrqC,EAAAA,aAWDyqC,EAlBA,GCIAC,GAAA,SAAA5mC,GAEC,SAAA4mC,EAAYjkC,EACQ5J,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,0CAAwC/P,YADxCuG,EAAAJ,QAAAA,IAQrB,OAX2DkH,EAAAA,EAAAA,GAO1D2mC,EAAA9zC,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGd6tC,EAXA,CAA2D19B,EAAAA,SCJ3D,IAAA29B,GAAA,WAUC,SAAAA,EAAoBr9B,GAAA5W,KAAA4W,kBAAAA,EAOrB,OAJCq9B,EAAA/zC,UAAAg0C,sBAAA,SAAsB/tC,EAAkB4J,GACvC/P,KAAK4W,kBAAkBE,SAAS,IAAIk9B,GAAsCjkC,EAAa5J,yBAPxFmD,EAAAA,sDALQ4N,EAAAA,qBAeT+8B,EAjBA,GCAA,IAAAE,GAAA,WAaC,SAAAA,EAAoBC,EACTC,EACAC,EACAvkC,GAHS/P,KAAAo0C,yCAAAA,EACTp0C,KAAAq0C,4BAAAA,EACAr0C,KAAAs0C,mCAAAA,EACAt0C,KAAA+P,YAAAA,EAYZ,OATCokC,EAAAj0C,UAAA8P,IAAA,SAAI1I,OAEGitC,EAAyBv0C,KAAKo0C,yCAAyCruC,QAAQuB,GAErFtH,KAAKq0C,4BAA4BnyC,KAAKqyC,GAEtCv0C,KAAKs0C,mCAAmCJ,sBAAsB5sC,EAAOnB,QAASnG,KAAK+P,kCAfpFzG,EAAAA,sDARQyqC,UACAD,UAEAG,UACAt+B,MAsBTw+B,EA5BA,GCIA,IAAaK,GAA0B,IAAIplC,EAAAA,eAAmC,+BCH7EqlC,MAAA,EACA9rB,OAAA,EACAE,OAAA,sECoCD,IAAA6rB,GAAA,SAAAtnC,GAoHC,SAAAsnC,EACQ3kC,EACGsW,EACAsuB,EACA36B,EACA46B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAt7B,EACAu7B,EACAC,GApBX,IAAAnvC,EAsBC6G,EAAAxM,KAAAZ,OAAOA,YArBAuG,EAAAwJ,YAAAA,EACGxJ,EAAA8f,cAAAA,EACA9f,EAAAouC,wBAAAA,EACApuC,EAAAyT,qBAAAA,EACAzT,EAAAquC,mBAAAA,EACAruC,EAAAsuC,qBAAAA,EACAtuC,EAAAuuC,mBAAAA,EACAvuC,EAAAwuC,qBAAAA,EACAxuC,EAAAyuC,0BAAAA,EACAzuC,EAAA0uC,wBAAAA,EACA1uC,EAAA2uC,sBAAAA,EACA3uC,EAAA4uC,yBAAAA,EACA5uC,EAAA6uC,yBAAAA,EACA7uC,EAAA8uC,iCAAAA,EACA9uC,EAAA+uC,kCAAAA,EACA/uC,EAAAgvC,uBAAAA,EACAhvC,EAAAivC,iCAAAA,EACAjvC,EAAA2T,kCAAAA,EACA3T,EAAAkvC,iCAAAA,EACAlvC,EAAAmvC,4BAAAA,EA/GXnvC,EAAA+D,OAAqB,GAGrB/D,EAAAgE,QAA+B,GA2D/BhE,EAAAiE,YAAoC,IAAIC,EAAAA,aAGxClE,EAAAmE,gBAAwC,IAAID,EAAAA,aAG5ClE,EAAAoE,cAAmC,IAAIF,EAAAA,aAGvClE,EAAAqE,eAAqC,IAAIH,EAAAA,aAGzClE,EAAAsE,sBAA8C,IAAIJ,EAAAA,aAGlDlE,EAAAuE,aAA+C,IAAIL,EAAAA,aAGnDlE,EAAAwE,gBAAsC,IAAIN,EAAAA,aAG1ClE,EAAAyE,iBAAuC,IAAIP,EAAAA,aAG3ClE,EAAA0E,kBAAwC,IAAIR,EAAAA,aAG5ClE,EAAA2E,oBAA4C,IAAIT,EAAAA,eA6RjD,OA/Y+C4C,EAAAA,EAAAA,GA6I9CqnC,EAAAx0C,UAAAsL,YAAA,SAAYmqC,GAkDX,QAhDiCzvC,IAA7ByvC,EAAc7pC,iBAAsE5F,IAA1CyvC,EAAc7pC,WAAWJ,cACtE1L,KAAKw1C,iCAAiCI,WAAW51C,KAAK8L,iBAGpB5F,IAA/ByvC,EAAcE,mBAA0E3vC,IAA5CyvC,EAAcE,aAAanqC,cAC1E1L,KAAKy1C,iCAAiCvzC,KAAKlC,KAAK61C,mBAGjB3vC,IAA5ByvC,EAAc7uB,gBAAoE5gB,IAAzCyvC,EAAc7uB,UAAUpb,cACpE1L,KAAKq1C,iCAAiCnzC,KAAKlC,KAAK8mB,gBAGf5gB,IAA9ByvC,EAAcltC,kBAAwEvC,IAA3CyvC,EAAcltC,YAAYiD,cACxE1L,KAAKs1C,kCAAkCtlC,IAAIhQ,KAAKyI,kBAGlBvC,IAA3ByvC,EAAcG,eAAkE5vC,IAAxCyvC,EAAcG,SAASpqC,cAClE1L,KAAKm1C,yBAAyBjzC,KAAKlC,KAAK81C,eAGP5vC,IAA9ByvC,EAAchtC,kBAAwEzC,IAA3CyvC,EAAchtC,YAAY+C,cACxE1L,KAAKo1C,yBAAyBlzC,KAAKlC,KAAK2I,kBAGbzC,IAAxByvC,EAAcntC,YAA4DtC,IAArCyvC,EAAcntC,MAAMkD,cAC5D1L,KAAKg1C,0BAA0BtlB,SAAS1vB,KAAKwI,YAGdtC,IAA5ByvC,EAAcl0B,gBAAoEvb,IAAzCyvC,EAAcl0B,UAAU/V,cACpE1L,KAAK20C,wBAAwB9E,aAAa7vC,KAAKyhB,gBAGVvb,IAAlCyvC,EAAcI,sBAAgF7vC,IAA/CyvC,EAAcI,gBAAgBrqC,cAChF1L,KAAKg1C,0BAA0Bhd,eAAeh4B,KAAK+1C,sBAGd7vC,IAAlCyvC,EAAcnlC,sBAAgFtK,IAA/CyvC,EAAcnlC,gBAAgB9E,cAChF1L,KAAK+0C,qBAAqB9L,gBAAgBjpC,KAAKwQ,sBAGPtK,IAArCyvC,EAAcK,yBAAsF9vC,IAAlDyvC,EAAcK,mBAAmBtqC,cACtF1L,KAAK+0C,qBAAqB7L,mBAAmBlpC,KAAKg2C,yBAGrB9vC,IAA1ByvC,EAAcv0B,cAAgElb,IAAvCyvC,EAAcv0B,QAAQ1V,cAChE1L,KAAK60C,qBAAqBhI,WAAW7sC,KAAKohB,cAGdlb,IAAzByvC,EAAc3pC,aAA8D9F,IAAtCyvC,EAAc3pC,OAAON,aAA4B,KAEtFjC,OAAY,EAEW,kBAAhBzJ,KAAKgM,OACfvC,EAAe,CACdtD,QAASnG,KAAKgM,SAGfvC,EAAezJ,KAAKgM,YAEY9F,IAA5BlG,KAAKgM,OAAOhC,aACfhK,KAAKka,kCAAkChY,KAAKlC,KAAKgM,OAAOhC,cAI1DhK,KAAKga,qBAAqBnD,UAAUpN,GAoCrC,GAjCIksC,EAAcprC,SACjBvK,KAAK20C,wBAAwB/E,WAAW5vC,KAAKuK,QAASvK,KAAKqmB,cAAermB,KAAK+P,kBAI7C7J,IAA/ByvC,EAAcr2B,mBAA0EpZ,IAA5CyvC,EAAcr2B,aAAa5T,cAC1E1L,KAAK+0C,qBAAqBlM,mBAAmB7oC,KAAKsf,mBAGdpZ,IAAjCyvC,EAAcp2B,qBAA8ErZ,IAA9CyvC,EAAcp2B,eAAe7T,cAC9E1L,KAAK+0C,qBAAqBjM,qBAAqB9oC,KAAKuf,qBAGzBrZ,IAAxByvC,EAAc7sC,YAA4D5C,IAArCyvC,EAAc7sC,MAAM4C,cAC5D1L,KAAK+0C,qBAAqBhM,SAAS/oC,KAAK8I,YAGP5C,IAA9ByvC,EAAczsC,kBAAwEhD,IAA3CyvC,EAAczsC,YAAYwC,cACxE1L,KAAK+0C,qBAAqB/L,eAAehpC,KAAKkJ,aAG3CysC,EAAcM,WAAaj2C,KAAKi2C,WACnCj2C,KAAK+0C,qBAAqBhL,UAAU/pC,KAAKi2C,gBAGN/vC,IAAhCyvC,EAAcO,oBAA4EhwC,IAA7CyvC,EAAcO,cAAcxqC,eACxE1L,KAAKk2C,cACRl2C,KAAK20C,wBAAwBvF,uBAE7BpvC,KAAK20C,wBAAwBtF,8BAIDnpC,IAA1ByvC,EAAcjtC,cAAgExC,IAAvCyvC,EAAcjtC,QAAQgD,aAA4B,KAExFhD,OAAO,EAGVA,EAD2B,kBAAjB1I,KAAK0I,QACL,CACTvC,QAASnG,KAAK0I,SAGL1I,KAAK0I,QAGhB1I,KAAK20C,wBAAwBpF,iBAAiB7mC,GAG/C,QAAgCxC,IAA5ByvC,EAAcQ,gBAAoEjwC,IAAzCyvC,EAAcQ,UAAUzqC,aAA4B,KAE5FyqC,OAAS,EAGZA,EAD6B,kBAAnBn2C,KAAKm2C,UACH,CACXhwC,QAASnG,KAAKm2C,WAGHn2C,KAAKm2C,UAGlBn2C,KAAK20C,wBAAwBjF,gBAAgByG,GAG9C,QAAmCjwC,IAA/ByvC,EAAcS,mBAA0ElwC,IAA5CyvC,EAAcS,aAAa1qC,aAA4B,KAElG0qC,OAAY,EAGfA,EADgC,kBAAtBp2C,KAAKo2C,aACA,CACdjwC,QAASnG,KAAKo2C,cAGAp2C,KAAKo2C,aAGrBp2C,KAAK20C,wBAAwBhF,sBAAsByG,GAGpD,QAAgClwC,IAA5ByvC,EAAcU,gBAAoEnwC,IAAzCyvC,EAAcU,UAAU3qC,aAA4B,KAE5F2qC,OAAS,EAGZA,EAD6B,kBAAnBr2C,KAAKq2C,UACH,CACXlwC,QAASnG,KAAKq2C,WAGHr2C,KAAKq2C,UAGlBr2C,KAAK20C,wBAAwBhG,mBAAmB0H,GAM7CV,EAAcrrC,QACjBtK,KAAK60C,qBAAqB78B,UAAUhY,KAAKsK,SAI3CoqC,EAAAx0C,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAECA,KAAK40C,mBACH3oC,aAAajM,KAAK+P,aAClB8E,KAAK7U,KAAKuU,aACVO,WAAS,SAAE0C,GACXjR,EAAKiE,YAAY0B,KAAKsL,MAGxBxX,KAAK40C,mBACHzoC,iBAAiBnM,KAAK+P,aACtB8E,KAAK7U,KAAKuU,aACVO,WAAS,SAAEnL,GACXpD,EAAKmE,gBAAgBwB,KAAKvC,MAG5B3J,KAAKk1C,sBACHoB,eAAet2C,KAAK+P,aACpB8E,KAAK7U,KAAKuU,aACVO,WAAS,SAAE23B,GACXlmC,EAAKoE,cAAcuB,KAAKugC,MAG1BzsC,KAAKi1C,wBACHzb,iBAAiBx5B,KAAKqmB,eACtBxR,KACA0hC,EAAAA,KAAK,GACLv2C,KAAKuU,aACLO,WAAS,WACTvO,EAAKqE,eAAesB,UAItBlM,KAAKi1C,wBACHxb,wBAAwBz5B,KAAKqmB,eAC7BxR,KAEA7U,KAAKuU,aAELO,WAAS,SAAEtI,GACXjG,EAAKsE,sBAAsBqB,KAAKM,MAGlCxM,KAAK80C,mBACH0B,eAAex2C,KAAK+P,aACpB8E,OAGAC,WAAS,SAAE2hC,GACXlwC,EAAKuE,aAAaoB,KAAKuqC,MAGzBz2C,KAAKu1C,uBACH37B,UACA/E,KAAK7U,KAAKuU,aACVO,WAAS,SAAE4hC,GAEX,OAAQA,GAEP,KAAKC,GAAuBlC,MAC3BluC,EAAKwE,gBAAgBmB,OACrB,MAED,KAAKyqC,GAAuBhuB,OAC3BpiB,EAAK0E,kBAAkBiB,OACvB,MAED,KAAKyqC,GAAuB9tB,OAC3BtiB,EAAKyE,iBAAiBkB,WAM1BlM,KAAK01C,4BACH7oC,eAAe7M,KAAK+P,aACpB8E,KAAK7U,KAAKuU,aACVO,WAAS,SAAEg5B,GACXvnC,EAAK2E,oBAAoBgB,KAAK4hC,OAMjC4G,EAAAx0C,UAAA+L,aAAA,SAAavC,GACZ1J,KAAKwK,YAAY0B,KAAKxC,6CAtYtBoD,EAAAA,kCAGAA,EAAAA,yBAGAA,EAAAA,qBAGAA,EAAAA,yBAGAA,EAAAA,+BAGAA,EAAAA,sBAGAA,EAAAA,uBAGAA,EAAAA,sBAGAA,EAAAA,4BAGAA,EAAAA,8BAGAA,EAAAA,qBAGAA,EAAAA,2BAGAA,EAAAA,4BAGAA,EAAAA,uBAGAA,EAAAA,6BAGAA,EAAAA,uBAGAA,EAAAA,yBAGAA,EAAAA,4BAGAA,EAAAA,yBAGAA,EAAAA,wBAGAA,EAAAA,2BAGAA,EAAAA,yBAGAA,EAAAA,2BAGAA,EAAAA,0BAGAA,EAAAA,2BAQAC,EAAAA,gCAGAA,EAAAA,8BAGAA,EAAAA,+BAGAA,EAAAA,sCAGAA,EAAAA,6BAGAA,EAAAA,gCAGAA,EAAAA,iCAGAA,EAAAA,kCAGAA,EAAAA,oCAGAA,EAAAA,UA8RF2nC,EA/YA,CAA+ClgC,ICrC/C,IAAAoiC,GAAA,SAAAxpC,GAEC,SAAAwpC,EAAY14B,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,kBAAgBle,KAErC,OALmCqN,EAAAA,EAAAA,GAKnCupC,EALA,CAAmCz4B,EAAAA,aCAnC04B,GAAA,SAAAzpC,GAEC,SAAAypC,EAAY34B,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,kBAAgBle,KAErC,OALmCqN,EAAAA,EAAAA,GAKnCwpC,EALA,CAAmC14B,EAAAA,aCAnC24B,GAAA,SAAA1pC,GAEC,SAAA0pC,EAAY54B,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,qBAAmBle,KAExC,OALsCqN,EAAAA,EAAAA,GAKtCypC,EALA,CAAsC34B,EAAAA,aCAtC44B,GAAA,SAAA3pC,GAEC,SAAA2pC,EAAY74B,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,yBAAuBle,KAE5C,OAL0CqN,EAAAA,EAAAA,GAK1C0pC,EALA,CAA0C54B,EAAAA,aCF1C64B,GAAA,WAkBC,SAAAA,EAA6BtiC,EACTqF,GADS/Z,KAAA0U,eAAAA,EACT1U,KAAA+Z,mBAAAA,EA6CrB,OA1CCi9B,EAAA92C,UAAA+L,aAAA,SAAa8D,GAAb,IAAAxJ,EAAAvG,KAEC,OAAOA,KAAK0U,eACNC,QACAiiC,GACAC,GACAC,IAEAjiC,KACAS,EAAAA,QAAM,SAAEP,GAAuB,OAAAA,EAAMmQ,iBAAiBzP,aAAe1F,EAAY0F,cACjFwhC,EAAAA,WAAS,SAAEliC,GAEV,OAAOxO,EAAKwT,mBACT9D,SAASlG,GACT8E,KACA3M,EAAAA,KAAG,SAAE8D,GAAmB,OAAAA,EAAO+O,aAC/B5E,EAAAA,KAAK,SAMhB6gC,EAAA92C,UAAAiM,iBAAA,SAAiB4D,GAAjB,IAAAxJ,EAAAvG,KAEC,OAAOA,KAAK0U,eACNC,QACAoiC,IAEAliC,KACAS,EAAAA,QAAM,SAAEP,GAAuB,OAAAA,EAAMmQ,iBAAiBzP,aAAe1F,EAAY0F,cACjFwhC,EAAAA,WAAS,SAAEliC,GAEV,OAAOxO,EAAKwT,mBACT9D,SAASlG,GACT8E,KACA3M,EAAAA,KAAG,SAAE8D,GAAmB,OAAAA,EAAOwK,iBAC/BL,EAAAA,KAAK,6BA3ChB7M,EAAAA,sDAXqBqc,EAAAA,sBAEb5P,MA0DTihC,EAhEA,GCAA,IAAAE,GAEC,SAA4BC,EACTC,GADSp3C,KAAAm3C,MAAAA,EACTn3C,KAAAo3C,OAAAA,GCEpB,IAAAC,GAAA,SAAAjqC,GAEC,SAAAiqC,EAAYn5B,EACQo5B,EACAC,GAFpB,IAAAhxC,EAGC6G,EAAAxM,KAAAZ,KAAMke,EAAa,mCAAiCle,YAFjCuG,EAAA+wC,WAAAA,EACA/wC,EAAAgxC,UAAAA,IAYrB,OAhBoDlqC,EAAAA,EAAAA,GAQnDgqC,EAAAn3C,UAAAs3C,cAAA,WACC,OAAOx3C,KAAKs3C,YAGbD,EAAAn3C,UAAAu3C,aAAA,WACC,OAAOz3C,KAAKu3C,WAGdF,EAhBA,CAAoDl5B,EAAAA,aCLpD,IAAAu5B,GAAA,WAcC,SAAAA,EAA6BhjC,GAAA1U,KAAA0U,eAAAA,EAoB9B,OAjBCgjC,EAAAx3C,UAAAs2C,eAAA,SAAezmC,GAEd,OAAO/P,KAAK0U,eACNC,QAAO,IAGPE,KACAS,EAAAA,QAAM,SAAEP,GAAuB,OAAAA,EAAMmQ,iBAAiBzP,aAAe1F,EAAY0F,cACjFvN,EAAAA,KAAG,SAAE6M,OAEEwiC,EAAYxiC,EAAM0iC,eAAer0B,UACtCk0B,EAAaviC,EAAMyiC,gBAAgBp0B,UAEpC,OAAO,IAAI8zB,GAAiBK,EAAWD,4BAnB/ChuC,EAAAA,sDAPqBqc,EAAAA,kBA8BtB+xB,EAlCA,GCEA,IAAAC,GAAA,SAAAvqC,GAEC,SAAAuqC,EAAYz5B,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,4BAA0Ble,KAG/C,OAN6CqN,EAAAA,EAAAA,GAM7CsqC,EANA,CAA6Cx5B,EAAAA,aCF7Cy5B,GAAA,WAgBC,SAAAA,EAA6BljC,EACTmjC,GADS73C,KAAA0U,eAAAA,EACT1U,KAAA63C,sBAAAA,EAwBrB,OArBCD,EAAA13C,UAAAo2C,eAAA,SAAevmC,GAAf,IAAAxJ,EAAAvG,KAEC,OAAOA,KAAK0U,eACNC,QACAgjC,IAEA9iC,KACAS,EAAAA,QAAM,SAAEP,GAAuB,OAAAA,EAAMmQ,iBAAiBzP,aAAe1F,EAAY0F,cACjFwhC,EAAAA,WAAS,SAAEliC,GAEV,OAAOxO,EAAKsxC,sBACTxiC,YAAYtF,GACZ8E,KACAsB,EAAAA,KAAK,GACLjO,EAAAA,KAAG,SAAE4vC,GAAmB,OAAAA,EAAIv1B,yBAC5Bra,EAAAA,KAAG,SAAEgR,GAAgC,OAAAA,EAAShR,KAAG,SAAC6Q,GAAO,OAAAA,EAAIqK,0CAtBxE9Z,EAAAA,sDATqBqc,EAAAA,sBAEbC,MAmCTgyB,EAzCA,GCEA,IAAAG,GAAA,WAqBC,SAAAA,EAAoB5xC,EACTwsB,EACArd,EACA0iC,QAHS,IAAA7xC,IAAAA,GAAA,QACT,IAAAwsB,IAAAA,GAAA,QACA,IAAArd,IAAAA,GAAA,QACA,IAAA0iC,IAAAA,GAAA,GAHSh4C,KAAAmG,QAAAA,EACTnG,KAAA2yB,KAAAA,EACA3yB,KAAAsV,OAAAA,EACAtV,KAAAg4C,eAAAA,EA2DZ,OAjFQD,EAAAnR,QAAP,WACC,OAAO,IAAImR,GAGLA,EAAAlR,WAAP,SAAkBv/B,GACjB,OAAO,IAAIywC,EACVzwC,EAAOnB,QACPmB,EAAOqrB,KACPrrB,EAAOgO,OACPhO,EAAO0wC,iBAgBTD,EAAA73C,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,UACVnG,KAAK2yB,MAAQ3yB,KAAKsV,QAAUtV,KAAKg4C,iBAGpCD,EAAA73C,UAAA+3C,cAAA,WACC,OAAOj4C,KAAK2yB,MAGbolB,EAAA73C,UAAAg4C,iBAAA,WACC,OAAOl4C,KAAK2yB,MAGbolB,EAAA73C,UAAAi4C,mBAAA,WACC,OAAOn4C,KAAKsV,QAGbyiC,EAAA73C,UAAAk4C,uBAAA,WACC,OAAOp4C,KAAKg4C,gBAGbD,EAAA73C,UAAAm4C,SAAA,eAEOC,EAAQ,GAcd,OAZIt4C,KAAKi4C,iBACRK,EAAM91C,KAAKxC,KAAKu4C,eAGbv4C,KAAKm4C,sBACRG,EAAM91C,KAAKxC,KAAKw4C,iBAGbx4C,KAAKo4C,0BACRE,EAAM91C,KAAKxC,KAAKy4C,iBAGVH,GAGRP,EAAA73C,UAAAw4C,cAAA,WACC,OAAO14C,KAAKq4C,WAAW,IAGxBN,EAAA73C,UAAAq4C,YAAA,WACC,OAAOR,EAA0BY,MAGlCZ,EAAA73C,UAAAs4C,cAAA,WACC,OAAOT,EAA0Ba,QAGlCb,EAAA73C,UAAAu4C,cAAA,WACC,OAAOV,EAA0Bc,SAjEVd,EAAAY,KAAO,OAEPZ,EAAAa,OAAS,SAETb,EAAAc,QAAU,UAgEnCd,EAnFA,sBCQC,SAAAe,WACC1rC,EAAAxM,KAAAZ,KAAM+3C,GAA0BnR,YAAU5mC,KAU5C,OAbsDqN,EAAAA,EAAAA,GAMrDyrC,EAAA54C,UAAA01C,WAAA,SAAWtuC,OAEJyxC,EAAahB,GAA0BlR,WAAWv/B,GAExDtH,KAAKkC,KAAK62C,wBAXXzvC,EAAAA,mDAcDwvC,GAbsDr/B,mBCErD,SAAAu/B,WACC5rC,EAAAxM,KAAAZ,KAAMg5C,EAAiCC,qBAAmBj5C,KAE5D,OAPsDqN,EAAAA,EAAAA,GAErC2rC,EAAAC,oBAAqB,sBAHrC3vC,EAAAA,mDAQD0vC,GAPsDv/B,ICJtD,IAAAy/B,GAAA,SAAA9rC,GAEC,SAAA8rC,EAAYh7B,EACQ4vB,GADpB,IAAAvnC,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,wCAAsCle,YADtCuG,EAAAunC,OAAAA,IAQrB,OAXyDzgC,EAAAA,EAAAA,GAOxD6rC,EAAAh5C,UAAA6tC,UAAA,WACC,OAAO/tC,KAAK8tC,QAGdoL,EAXA,CAAyD/6B,EAAAA,gCCaxD,SAAAg7B,IAAA,IAAA5yC,EACC6G,EAAAxM,KAAAZ,OAAOA,YALAuG,EAAAunC,OAAS,IAAIn+B,IAEbpJ,EAAA6yC,QAAU,IAAIrhC,EAAAA,gBA6BvB,OAjCqD1K,EAAAA,EAAAA,GAUpD8rC,EAAAj5C,UAAAm5C,UAAA,SAAUvL,EAAgB/9B,GACzB/P,KAAK8tC,OAAO99B,IAAID,EAAY0F,WAAYq4B,GACxC9tC,KAAKo5C,QAAQl3C,KAAKlC,KAAK8tC,SAGxBqL,EAAAj5C,UAAAo5C,SAAA,SAASvpC,GAER,OAAO/P,KAAKu5C,eAAexpC,GACrB8E,KACAsD,EAAAA,yBAICghC,EAAAj5C,UAAAq5C,eAAR,SAAuBxpC,GACtB,OAAO/P,KAAKo5C,QACNlhC,eACArD,KACA3M,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAIkI,IAAIL,EAAY0F,qCA7BnCnM,EAAAA,mDAkCD6vC,GAjCqDllC,ICTrD,IAAAulC,GAAA,WAcC,SAAAA,EAA6B9kC,EACT+kC,GADSz5C,KAAA0U,eAAAA,EACT1U,KAAAy5C,gCAAAA,EAqBrB,OAlBCD,EAAAt5C,UAAA2M,eAAA,SAAekD,GAAf,IAAAxJ,EAAAvG,KAEC,OAAOA,KAAK0U,eACNC,QACAukC,IAEArkC,KACAS,EAAAA,QAAM,SAAEP,GAAuB,OAAAA,EAAMmQ,iBAAiBzP,aAAe1F,EAAY0F,cACjFwhC,EAAAA,WAAS,SAAEliC,GAEV,OAAOxO,EAAKkzC,gCACTH,SAASvpC,GACT8E,KACAsB,EAAAA,KAAK,6BApBhB7M,EAAAA,sDAPqBqc,EAAAA,sBAIbwzB,MA4BTK,EApCA,GCAA,IAAAE,GAAA,WAGA,SAAAA,IAGkB15C,KAAA25C,UAAY,IAAIxlC,EAAAA,QASlC,OAPCulC,EAAAx5C,UAAA05C,SAAA,WACC55C,KAAK25C,UAAUz3C,QAGhBw3C,EAAAx5C,UAAA25C,WAAA,WACC,OAAO75C,KAAK25C,UAAUzhC,oCAVvB5O,EAAAA,aAYDowC,EAfA,GCiDA,SAAgBI,GAAmBC,GAClC,OAAO,IAAIpkC,GAAY,OAASokC,EAAUzqC,cAI3C,SAAgB0qC,GAAqBD,GACpC,OAAO,IAAIj0B,GAAc,OAASi0B,EAAUzqC,cAI7C,IAAa2qC,GAA+Bv3C,EAAA,CAC3C,CACCuM,QAAS0G,GACTukC,WAAYJ,GACZK,KAAM,CACL7T,KAGF,CACCr3B,QAAS6W,GACTo0B,WAAYF,GACZG,KAAM,CACL7T,MAGCkL,GAAc,CAEjBC,GACA8B,GACAmG,GACAlG,GACAC,GACAC,GACAI,GACAK,GACA2E,GACAj/B,GACAm/B,KAIDoB,GAAA,SAAAhtC,GA+CC,SAAAgtC,EAAYrqC,EACTsW,EACArM,EACA46B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAP,EACAQ,EACAC,EACAC,EACAC,EACAC,EACAC,EACAt7B,EACAu7B,EACAC,EACQ9kC,EACAC,EACA6V,EACA2zB,EACAxC,EACAyC,EACAC,EACAC,GA3BX,IAAAj0C,EA6BC6G,EAAAxM,KAAAZ,KACC+P,EACAsW,EACAsuB,EACA36B,EACA46B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAt7B,EACAu7B,EACAC,IACA11C,YA9BSuG,EAAAqK,WAAAA,EACArK,EAAAsK,kBAAAA,EACAtK,EAAAmgB,SAAAA,EACAngB,EAAA8zC,oBAAAA,EACA9zC,EAAAsxC,sBAAAA,EACAtxC,EAAA+zC,wBAAAA,EACA/zC,EAAAg0C,uBAAAA,EACAh0C,EAAAi0C,oBAAAA,EAvCXj0C,EAAAk0C,eAAyB,EAEzBl0C,EAAAm0C,qBAA+B,EAE/Bn0C,EAAAo0C,wBAAkC,EA4DjCp0C,EAAKouC,wBAAwBxF,kBAC7B6F,EAA0Bpd,sBAqF5B,OAxJwCvqB,EAAAA,EAAAA,GAsEvC+sC,EAAAl6C,UAAAsL,YAAA,SAAYC,GACX2B,EAAAlN,UAAMsL,YAAW5K,KAAAZ,KAACyL,IAGnB2uC,EAAAl6C,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KACCoN,EAAAlN,UAAM8Q,SAAQpQ,KAAAZ,MAEdA,KAAKu6C,uBACH/Q,WACA30B,KAAK7U,KAAKuU,aACVO,WAAS,SAAE4K,GACXnZ,EAAKq0C,gBAAkBl7B,KAGzB1f,KAAKu6C,uBACH5Q,iBACA90B,KAAK7U,KAAKuU,aACVO,WAAS,SAAEgL,GACXvZ,EAAKuZ,aAAeA,KAGtB9f,KAAK63C,sBACHxiC,cACAR,KAAK7U,KAAKuU,aACVO,WAAS,SAAES,GACXhP,EAAKgP,UAAYA,EAEjBhP,EAAKk0C,cAAgBllC,EAAU+D,YAAYC,YAE3ChT,EAAKm0C,oBAAsBnlC,EAAUmN,kBAEjCnc,EAAKk0C,gBAAkBl0C,EAAKo0C,yBAC/Bp0C,EAAKo0C,wBAAyB,OAKlCP,EAAAl6C,UAAA4pB,gBAAA,WAAA,IAAAvjB,EAAAvG,KACKwI,EAAQxI,KAAK4Q,WAAWe,cAAckpC,YAEtCryC,EAAQ,EACXxI,KAAKg1C,0BAA0Bjd,kBAAkBvvB,GAMjDsyC,EAAAA,MAAM,GACJjmC,KACA7U,KAAKuU,aAELO,WAAS,YAETtM,EAAQjC,EAAKqK,WAAWe,cAAckpC,aAE1B,GACXt0C,EAAKyuC,0BAA0Bjd,kBAAkBvvB,MAKrDxI,KAAKw6C,oBACHnI,KAAKryC,KAAK4Q,WAAY5Q,KAAK+P,aAE7B/P,KAAKs6C,wBACHxgB,UACAjlB,KACA7U,KAAKuU,aAELO,WAAS,SAAEtM,GACXjC,EAAKmgB,SAASQ,SAAS3gB,EAAKqK,WAAWe,cAAe,QAASnJ,EAAQ,UAI1E4xC,EAAAl6C,UAAA0O,gBAAA,WACC,OAAO5O,KAAKq6C,oBAAoBzrC,mBAGjCwrC,EAAAl6C,UAAAkR,eAAA,WACC,OAAOpR,KAAK+P,iCAtLb8B,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,gBACVC,SAAA,mXAeAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,KACjCL,KAAM,CACLC,UAAW,kBAEX2oC,+BAAgC,oBAChCC,OAAQ,0BAET/oC,UAASvP,EACLu3C,GAA+B,CAClC,CACChrC,QAASulC,GACTtiC,YAAakoC,y0jFAvGPzkC,UACAmQ,UAaA3O,UACA6/B,UACAtG,UACAgH,UACA9N,UACAtP,UACAf,UACAqe,UACA7I,UAhBA0E,UAFAF,UAGAG,UAEAS,UAJAX,UAqBAsF,UACAj/B,UACAm/B,UACAQ,UAxCR7mC,EAAAA,kBAFAC,EAAAA,yBAKAyU,EAAAA,iBAMQnZ,SAyBA0X,UACAgU,UACAwP,UAtBAqI,MAgQT2I,EAzLA,CAiCwC1F,uBCvDvC,SAAAuG,EAAoBpqC,EACT8jC,EACAuG,EACA1F,EACiBjiB,GAJ5B,IAAAhtB,EAKC6G,EAAAxM,KAAAZ,OAAOA,YALYuG,EAAAsK,kBAAAA,EACTtK,EAAAouC,wBAAAA,EACApuC,EAAA20C,4BAAAA,EACA30C,EAAAivC,iCAAAA,EACiBjvC,EAAAgtB,OAAAA,IAoB7B,OA/BoDlmB,EAAAA,EAAAA,GAenD4tC,EAAA/6C,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAECA,KAAKw1C,iCACH57B,UACA/E,KACA7U,KAAKuU,aAELO,WAAS,SAAExN,GACXf,EAAKe,OAASA,EACdf,EAAKsK,kBAAkBJ,oBAI1BwqC,EAAA/6C,UAAAwN,UAAA,WACC,OAAO1N,KAAKsH,QAAUtH,KAAKsH,OAAOoG,iCA/EnCmE,EAAAA,UAASC,KAAA,CAAC,CACVE,SAAU,q5CAZFY,EAAAA,yBAEAm8B,UAGAnV,UAEAkf,UAJA5oB,GAAuBnvB,WAAA,CAAA,CAAA6D,KAqE3B6N,EAAAA,OAAMX,KAAA,CAAC,uDATVe,EAAAA,UAASf,KAAA,CAAC,iBAAkB,CAAEgB,QAAQ,OA6BxCmoC,GA/BoDzmC,IC7DpD,IAAA2mC,GAAA,WAUC,SAAAA,EAAoBj1B,EACTk1B,GADSp7C,KAAAkmB,SAAAA,EACTlmB,KAAAo7C,oBAAAA,EAoBZ,OAjBCD,EAAAj7C,UAAAkmB,KAAA,SAAKxV,EAAwB2iB,OAEtBrN,EAAWI,EAAAA,SAASnmB,OAAO,CAChC8R,UAAW,CAAC,CACXhD,QAAS,SACTC,SAAUqkB,IAEXhN,OAAQvmB,KAAKkmB,WAGdlmB,KAAKo7C,oBAAoBh1B,KAAKxV,EAAYqqC,GAAgC/0B,EAAUm1B,EAAAA,sBAAsBC,KAAM,IAGjHH,EAAAj7C,UAAAq7C,MAAA,WACCv7C,KAAKo7C,oBAAoBG,6BArB1BjyC,EAAAA,sDAPgCgd,EAAAA,gBAExBk1B,EAAAA,6BA6BTL,EA/BA,sBC0BC,SAAAM,EAAoB7qC,EACTsV,EACArV,EACA8jC,GAHX,IAAApuC,EAIC6G,EAAAxM,KAAAZ,OAAOA,YAJYuG,EAAAqK,WAAAA,EACTrK,EAAA2f,SAAAA,EACA3f,EAAAsK,kBAAAA,EACAtK,EAAAouC,wBAAAA,EALXpuC,EAAAm1C,iBAAkB,IAwCnB,OA7CqDruC,EAAAA,EAAAA,GAcpDouC,EAAAv7C,UAAA8Q,SAAA,aAYAyqC,EAAAv7C,UAAAsvC,WAAA,SAAWjc,GAENA,EAAO5C,iBACV3wB,KAAK20C,wBAAwBnF,WAAWjc,EAAO9C,eAIjDgrB,EAAAv7C,UAAAy7C,UAAA,SAAUpoB,GACT,OAAOA,EAAO7C,kBAAoBX,GAAU5rB,KAG7Cs3C,EAAAv7C,UAAA07C,WAAA,SAAWroB,GACV,OAAOA,EAAO7C,kBAAoBX,GAAU3rB,MAG7Cq3C,EAAAv7C,UAAA27C,oBAAA,WACC,OAAO77C,KAAK07C,qCAnDb7pC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,+BACVC,SAAA,grBACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,KACjCP,UAAW,CACVkpC,iDAhB8DxoC,EAAAA,kBAAY2T,EAAAA,gBAA1C1T,EAAAA,yBAGzBm8B,uCAkBPjiC,EAAAA,SA2CF2uC,GA7CqDjnC,ICnBrD,IAAAsnC,GAAA,WAcC,SAAAA,IAJQ97C,KAAAmG,QAAU,IAAIwJ,IAEd3P,KAAA+7C,SAAW,IAAIhkC,EAAAA,cAuBxB,OAlBC+jC,EAAA57C,UAAA8vB,WAAA,SAAW7pB,EAAkB4J,GAC5B/P,KAAKmG,QAAQ6J,IAAID,EAAY0F,WAAYtP,GACzCnG,KAAK+7C,SAAS75C,KAAKlC,KAAKmG,UAGzB21C,EAAA57C,UAAA87C,oBAAA,SAAoBjsC,GAEnB,OAAO/P,KAAK+7C,SACN7jC,eACArD,KACA3M,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAIkI,IAAIL,EAAY0F,eAE5B0C,EAAAA,6CAvBP7O,EAAAA,mDA4BDwyC,EAnCA,GCAA,IAAAG,GAAA,WAaC,SAAAA,IAJQj8C,KAAAmG,QAAU,IAAIwJ,IAEd3P,KAAA+7C,SAAW,IAAIhkC,EAAAA,cAsBxB,OAjBCkkC,EAAA/7C,UAAA8vB,WAAA,SAAW7pB,EAAkB4J,GAC5B/P,KAAKmG,QAAQ6J,IAAID,EAAY0F,WAAYtP,GACzCnG,KAAK+7C,SAAS75C,KAAKlC,KAAKmG,UAGzB81C,EAAA/7C,UAAAg8C,yBAAA,SAAyBnsC,GAExB,OAAO/P,KAAK+7C,SACN7jC,eACArD,KACA3M,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAIkI,IAAIL,EAAY0F,eAE5B0C,EAAAA,6CAvBP7O,EAAAA,mDA2BD2yC,EAjCA,GCAA,IAAAE,GAAA,WAWC,SAAAA,EAAoBC,EACTC,GADSr8C,KAAAo8C,0BAAAA,EACTp8C,KAAAq8C,+BAAAA,EAWZ,OARCF,EAAAj8C,UAAAo8C,mBAAA,SAAmBvsC,GAClB,OAAO/P,KAAKo8C,0BAA0BJ,oBAAoBjsC,IAG3DosC,EAAAj8C,UAAAq8C,sBAAA,SAAsBxsC,GACrB,OAAO/P,KAAKq8C,+BAA+BH,yBAAyBnsC,wBAZrEzG,EAAAA,sDALQwyC,UACAG,MAmBTE,EAvBA,GCAA,IAAAK,GAAA,WA4DC,SAAAA,EAAoBxN,EACTzlB,EACAkzB,EACA1sC,SAHS/P,KAAAgvC,8BAAAA,EACThvC,KAAAupB,YAAAA,EACAvpB,KAAAy8C,GAAAA,EACAz8C,KAAA+P,YAAAA,EAXX/P,KAAA08C,OAAS,IAAIjyC,EAAAA,aAEJzK,KAAAwpB,gBAAkB,SAI3BxpB,KAAA28C,YAAsB,EAMrB38C,KAAKypB,WAAazpB,KAAKupB,YAAYG,QAAKC,EAAA,IACtC3pB,KAAKwpB,iBAAkB,CAAC,QAuC5B,OAlCCgzB,EAAAt8C,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KACCA,KAAKypB,WACHe,aAIA1V,WAAS,SAAE8nC,GACXr2C,EAAK+O,OAAOsnC,EAAEr2C,EAAKijB,sBAItBgzB,EAAAt8C,UAAAoV,OAAA,SAAOw4B,GAEFA,MAAAA,IACHA,EAAS,IAGV9tC,KAAKgvC,8BAA8B3C,UAAUrsC,KAAKuK,QAAQ,GAAGkmB,aAAc,IAAKqd,EAAQ9tC,KAAK+P,cAG9FysC,EAAAt8C,UAAA28C,aAAA,WACC78C,KAAKypB,WAAWqzB,SAGjBN,EAAAt8C,UAAA68C,iBAAA,WACC/8C,KAAK28C,YAAa,EAClB38C,KAAKy8C,GAAGhsC,iBAGT+rC,EAAAt8C,UAAA88C,kBAAA,WACCh9C,KAAK28C,YAAa,EAClB38C,KAAKy8C,GAAGhsC,qCA7FToB,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,+BACVC,SAAU,+4BAiCVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDAzCzB25B,UAFAxhB,EAAAA,mBADyB/X,EAAAA,yBAIzB+C,uCA4CP7I,EAAAA,sBAGAC,EAAAA,UAqDFyvC,EAxGA,sBC2CC,SAAAS,EAA6BpsC,EACT6V,EACAw2B,EACAntC,EACAotC,EACAt2B,EACAyzB,GANpB,IAAA/zC,EAOC6G,EAAAxM,KAAAZ,OAAOA,YAPqBuG,EAAAsK,kBAAAA,EACTtK,EAAAmgB,SAAAA,EACAngB,EAAA22C,SAAAA,EACA32C,EAAAwJ,YAAAA,EACAxJ,EAAA42C,mCAAAA,EACA52C,EAAAsgB,0BAAAA,EACAtgB,EAAA+zC,wBAAAA,EAVpB/zC,EAAA62C,cAAgD,GAEhD72C,EAAA82C,kBAA4B,IAiE7B,OA3E8ChwC,EAAAA,EAAAA,GAsB7C4vC,EAAA/8C,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAECA,KAAKs6C,wBACHrgB,kBACAplB,KACA7U,KAAKuU,aAELO,WAAS,SAAEvK,GACXhE,EAAK62C,cAAgB7yC,EACrBhE,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKs6C,wBACHvgB,mBACAllB,KACA7U,KAAKuU,aAELO,WAAS,SAAEtM,GACXjC,EAAKmgB,SAASQ,SAAS3gB,EAAK+2C,aAAa3rC,cAAe,QAASnJ,EAAQ,SAG3ExI,KAAKm9C,mCACHb,mBAAmBt8C,KAAK+P,aACxB8E,KACA7U,KAAKuU,aAELO,WAAS,SAAE3O,GAEXI,EAAK82C,iBAAmBl3C,EACxBI,EAAKsK,kBAAkBJ,oBAI1BwsC,EAAA/8C,UAAA4pB,gBAAA,WAAA,IAAAvjB,EAAAvG,KACCA,KAAK6mB,0BACHrB,cACA3Q,KACA7U,KAAKuU,aAELO,WAAS,SAAE2M,OAEL87B,GAAe,EAAe,EAEhCh3C,EAAK+2C,cACR/2C,EAAKmgB,SAASQ,SAAS3gB,EAAK+2C,aAAa3rC,cAAe,SAAU4rC,EAAe,MAG9Eh3C,EAAKi3C,YACRj3C,EAAKmgB,SAASQ,SAAS3gB,EAAKi3C,WAAW7rC,cAAe,SAAU4rC,EAAe,8BA5EnF1rC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,uBACVC,SAAA,yQACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDA1BjCI,EAAAA,yBAIAyU,EAAAA,iBAKQ1B,EAAAA,sBAMAhQ,UACAwmC,UAGAv2B,UAFAgU,4CAaP/mB,EAAAA,UAASf,KAAA,CAAC2pC,GAAiC,CAAElzB,KAAM5V,EAAAA,WAAYG,QAAQ,wBAGvED,EAAAA,UAASf,KAAA,CAAC0qC,GAAiC,CAAEj0B,KAAM5V,EAAAA,WAAYG,QAAQ,OAsEzEmqC,GA3E8CzoC,uBCE7C,SAAAipC,EAAoBzO,EACTj/B,GADX,IAAAxJ,EAEC6G,EAAAxM,KAAAZ,OAAOA,YAFYuG,EAAAyoC,8BAAAA,EACTzoC,EAAAwJ,YAAAA,EALXxJ,EAAAm3C,IAAM,IAAIj1B,GAQTliB,EAAKo3C,YAAc,CAClBlyC,QAASlF,EAAKm3C,OAcjB,OA5BoDrwC,EAAAA,EAAAA,GAkBnDowC,EAAAv9C,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KACCA,KAAK09C,IACHtoC,KACAN,WAAS,SAAEg5B,GAAmB,OAAAvnC,EAAK+O,OAAOw4B,OAG7C2P,EAAAv9C,UAAAoV,OAAA,SAAOw4B,GACN9tC,KAAKgvC,8BAA8B3C,UAAUrsC,KAAKuzB,OAAO9C,aAAc,IAAKqd,EAAQ9tC,KAAK+P,kCAvC1F8B,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,8BACVC,SAAU,0OASVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDAhBzB25B,UACAx2B,sCAmBP7I,EAAAA,SA0BF2wC,GA5BoDjpC,uBCsCnD,SAAAopC,EAAyCjtC,EAC9B+V,EACA9V,EACAC,EACAgtC,EACAzI,EACAD,EACA2I,EACAj3B,EACA4uB,EACA5vB,EACA9V,EACA0pC,EACAhL,GAbX,IAAAloC,EAcC6G,EAAAxM,KAAAZ,OAAOA,YAdiCuG,EAAAoK,WAAAA,EAC9BpK,EAAAmgB,SAAAA,EACAngB,EAAAqK,WAAAA,EACArK,EAAAsK,kBAAAA,EACAtK,EAAAs3C,wBAAAA,EACAt3C,EAAA6uC,yBAAAA,EACA7uC,EAAA4uC,yBAAAA,EACA5uC,EAAAu3C,sBAAAA,EACAv3C,EAAAsgB,0BAAAA,EACAtgB,EAAAkvC,iCAAAA,EACAlvC,EAAAsf,4BAAAA,EACAtf,EAAAwJ,YAAAA,EACAxJ,EAAAkzC,gCAAAA,EACAlzC,EAAAkoC,gCAAAA,EA7BXloC,EAAAuvC,UAAW,EAEXvvC,EAAAoC,aAAc,EAIdpC,EAAAsrB,aAAuB,GAEvBtrB,EAAAqoC,cAAwB,EAExBroC,EAAAunC,QAAkB,EAElBvnC,EAAAsvC,aAAemD,GAAiCC,mBAEhD1yC,EAAAw3C,gBAAkB,IAwInB,OA9J+C1wC,EAAAA,EAAAA,GAyC9CuwC,EAAA19C,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAECA,KAAK89C,sBACHrS,iBACA52B,KACA7U,KAAKuU,aAELO,WAAS,SAAEkpC,GAEXz3C,EAAK03C,oBAELD,EAASn/B,SAASrY,SAAO,SAAEoP,OAEpBsoC,EAAa,MAAQtoC,EAAGgI,QAAQ,KAAM,IAC3CugC,EAAgB53C,EAAKqK,WAAWe,cAAcuzB,cAAc,IAAIgZ,GAE7DC,GACH53C,EAAKmgB,SAASosB,SAASqL,EAAe,kBAK1Cn+C,KAAKm1C,yBACHv7B,UACA/E,KACA7U,KAAKuU,aAELO,WAAS,SAAE3O,GACXI,EAAKuvC,SAAW3vC,EAChBI,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKo1C,yBACHx7B,UACA/E,KACA7U,KAAKuU,aAELO,WAAS,SAAE3O,GACXI,EAAKoC,YAAcxC,EACnBI,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAK6mB,0BACHrB,cACA3Q,KACA7U,KAAKuU,aAELO,WAAS,SAAE2M,GACXlb,EAAKkb,UAAYA,EACjBlb,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKy1C,iCACH77B,UACA/E,KACA7U,KAAKuU,aAELO,WAAS,SAAE+gC,GACXtvC,EAAKsvC,aAAeA,KAGtBuI,EAAAA,cACCp+C,KAAKy5C,gCACHH,SAASt5C,KAAK+P,aAChB/P,KAAKyuC,gCACH70B,WACD/E,KACD7U,KAAKuU,aAEJO,WAAS,SAAEhD,OAEL+f,EAAe/f,EAAK,GAC1B88B,EAAe98B,EAAK,GAEpBvL,EAAKqoC,aAAeA,EACpBroC,EAAKsrB,aAAeA,EAEftrB,EAAKqoC,eACTroC,EAAKsrB,aAAe,IAGrBtrB,EAAKsK,kBAAkBJ,oBAI1BmtC,EAAA19C,UAAAm+C,UAAA,WACC,OAAO,GAGRT,EAAA19C,UAAAo+C,WAAA,SAAW/uC,GAQV,MAAO,cANMA,EAAQvP,KAAKyhB,UAMC,OAG5Bm8B,EAAA19C,UAAA8qC,kBAAA,SAAkBtsB,GACb1e,KAAK61C,cACR71C,KAAK69C,wBAAwB7S,kBAAkB,EAAgBp1B,KAIzDgoC,EAAA19C,UAAA+9C,kBAAR,WAAA,IAAA13C,EAAAvG,KACOu+C,EAAmBv+C,KAAK4Q,WAAWe,cAAc6sC,iBAAiB,aAEpEntC,EAAAA,kBAAkBrR,KAAK2Q,aAC1B4tC,EAAiB/3C,SAAO,SAAEi4C,GACzBl4C,EAAKmgB,SAASysB,YAAYsL,EAAI,oCA9JjC5sC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,wBACVC,SAAA,iuBACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,2EA0BpBC,EAAAA,OAAMX,KAAA,CAACY,EAAAA,sBArDpB2U,EAAAA,iBALA1U,EAAAA,kBAFAC,EAAAA,yBAgBQq4B,UACAsI,UACAE,UACAlI,UAIA3lB,UACAozB,UAFAj0B,UAGApP,UACAwjC,UACAnL,sCAWPlhC,EAAAA,uBAGAA,EAAAA,SAyJF8wC,GA9J+CppC,ICtC/C,IAAAkqC,GAAA,WAMA,SAAAA,IA2BC1+C,KAAA2+C,gBAA0B,EAM3B,OAJCD,EAAAx+C,UAAAm+C,UAAA,WACC,OAAO,uBA9BRxsC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,oBACVC,SAAA,ypBACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,yCAIhC1F,EAAAA,uBAGAA,EAAAA,wBAGAA,EAAAA,2BAGAA,EAAAA,4BAGAA,EAAAA,qBAGAA,EAAAA,8BAGAA,EAAAA,SAOF4xC,EAvCA,sBCkDC,SAAAE,EAA6B/tC,EACTukC,EACAG,EACAsJ,EACAhK,GAJpB,IAAAtuC,EAKC6G,EAAAxM,KAAAZ,OAAOA,YALqBuG,EAAAsK,kBAAAA,EACTtK,EAAA6uC,yBAAAA,EACA7uC,EAAAgvC,uBAAAA,EACAhvC,EAAAs4C,wBAAAA,EACAt4C,EAAAsuC,qBAAAA,EAdpBtuC,EAAAu4C,YAAsB,IA6JvB,OA9K4CzxC,EAAAA,EAAAA,GAmC3CuxC,EAAA1+C,UAAAsL,YAAA,SAAYC,QAEcvF,IAArBuF,EAAQqqC,WACP91C,KAAK81C,UACR91C,KAAK0xB,oBAAqB,EAC1B1xB,KAAK++C,eAAc,IACR/+C,KAAK81C,UAChB91C,KAAKg/C,gBAIFh/C,KAAK81C,UACT91C,KAAKg/C,gBAIPJ,EAAA1+C,UAAA4pB,gBAAA,WAAA,IAAAvjB,EAAAvG,KACCA,KAAK6+C,wBACHhF,aACAhlC,KACA7U,KAAKuU,aAELO,WAAS,WACTvO,EAAKy4C,mBAIRJ,EAAA1+C,UAAA0vB,qBAAA,WACC,OAAO5vB,KAAK0xB,oBAAsB1xB,KAAKi/C,KAAKrvB,wBAG7CgvB,EAAA1+C,UAAA6+C,cAAA,SAAcG,GAAd,IAAA34C,EAAAvG,UAAc,IAAAk/C,IAAAA,GAAA,GAERl/C,KAAK4vB,yBAIV5vB,KAAK6+C,wBAAwBjF,WAE7BkB,EAAAA,MAAM,GACJjmC,KACA7U,KAAKuU,aAELO,WAAS,WACTvO,EAAKu4C,YAAa,EAElBv4C,EAAK44C,cAAgB,IAAI12B,GACzBliB,EAAK64C,QAAU,IAAI32B,GAEnBliB,EAAKo3C,YAAc,CAClBt0B,OAAQ9iB,EAAK64C,QACb50B,aAAcjkB,EAAK44C,cACnBh9C,MAAOoE,EAAK04C,KAAKrtB,SAASrrB,EAAKmY,QAC/B4L,MAAO40B,GAGR34C,EAAK84C,qBACL94C,EAAK+4C,sBAEL/4C,EAAKg5C,mBAEAL,EAGJ34C,EAAKsK,kBAAkBJ,gBAFvBlK,EAAKsK,kBAAkB2uC,oBAQ3BZ,EAAA1+C,UAAA8+C,aAAA,WACCh/C,KAAK8+C,YAAa,EAClB9+C,KAAK6Q,kBAAkBJ,iBAGxBmuC,EAAA1+C,UAAAu/C,qBAAA,eAEOlP,EAASvwC,KAAK0e,OAAOlJ,QAC1BkqC,EAAe1/C,KAAK2/C,YACpBrvB,EAAUtwB,KAAKi/C,KAAKxtB,cAErBzxB,KAAK60C,qBAAqB/H,SAAS,IAAIwD,GAA8BC,EAAQjgB,EAASovB,IAEtF1/C,KAAKg/C,gBAGEJ,EAAA1+C,UAAAm/C,mBAAR,WAAA,IAAA94C,EAAAvG,KAECA,KAAKo/C,QACHhqC,KACAP,KACA7U,KAAKuU,aAELO,WAAS,SAAEuU,GAEX,OAAQA,GACP,KAAKF,GAAcR,OAClBpiB,EAAKk5C,uBACLl5C,EAAKq5C,oBACL,MAED,KAAKz2B,GAAcN,OAClBtiB,EAAKy4C,eACLz4C,EAAKs5C,yBASFjB,EAAA1+C,UAAAo/C,oBAAR,WAAA,IAAA/4C,EAAAvG,KAECA,KAAKm/C,cACH/pC,KACAP,KACA7U,KAAKuU,aAELO,WAAS,SAAE3S,GACXoE,EAAKo5C,YAAcx9C,MAIdy8C,EAAA1+C,UAAA4/C,iBAAR,SAAyBpJ,GACxB12C,KAAKu1C,uBAAuBrzC,KAAKw0C,IAG1BkI,EAAA1+C,UAAAq/C,iBAAR,WACCv/C,KAAK8/C,iBAAiBnJ,GAAuBlC,QAGtCmK,EAAA1+C,UAAA2/C,kBAAR,WACC7/C,KAAK8/C,iBAAiBnJ,GAAuB9tB,SAGtC+1B,EAAA1+C,UAAA0/C,kBAAR,WACC5/C,KAAK8/C,iBAAiBnJ,GAAuBhuB,6BAlL9C9W,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,mCACVC,SAAA,g4BACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDArBAI,EAAAA,yBAMzB2gC,UACAC,UAOAkG,UANAhJ,sCAiBP5jC,EAAAA,oBAGAA,EAAAA,wBAGAA,EAAAA,kCAGAA,EAAAA,4BAGAA,EAAAA,SAgKF8xC,GA9K4CpqC,uBCoC3C,SAAAurC,EAAoBnvC,EACT8V,EACA7V,EACAmvC,EACAjwC,EACA4kC,EACAkD,EACA59B,EACA6vB,EACAkL,EACAsF,EACAwD,EACAmC,EAC8CC,GAbzD,IAAA35C,EAcC6G,EAAAxM,KAAAZ,OAAOA,YAdYuG,EAAAqK,WAAAA,EACTrK,EAAAmgB,SAAAA,EACAngB,EAAAsK,kBAAAA,EACAtK,EAAAy5C,OAAAA,EACAz5C,EAAAwJ,YAAAA,EACAxJ,EAAAouC,wBAAAA,EACApuC,EAAAsxC,sBAAAA,EACAtxC,EAAA0T,mBAAAA,EACA1T,EAAAujC,mBAAAA,EACAvjC,EAAAyuC,0BAAAA,EACAzuC,EAAA+zC,wBAAAA,EACA/zC,EAAAu3C,sBAAAA,EACAv3C,EAAA05C,eAAAA,EAC8C15C,EAAA25C,gBAAAA,EAzBzD35C,EAAAgE,QAA2C,GAE3ChE,EAAA+D,OAA4B,GAMpB/D,EAAA45C,wBAAkC,EAElC55C,EAAA65C,mBAAqB,IAAIjsC,EAAAA,UAoLlC,OAnMiD9G,EAAAA,EAAAA,GAkChD0yC,EAAA7/C,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAOCo+C,EAAAA,cACCp+C,KAAKia,mBAAmBvB,aACxB1Y,KAAK63C,sBAAsBryB,eAE1B3Q,KAAK7U,KAAKuU,aACVO,WAAS,SAAEurC,OAEL/1C,EAA4B+1C,EAAQ,GACzC5+B,EAAY4+B,EAAQ,GAErB95C,EAAK+D,OAASA,EACd/D,EAAKwjC,UAAUz/B,EAAO3J,OAAS8gB,GAC/Blb,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKs6C,wBACHlgB,oBACAvlB,KAAK7U,KAAKuU,aACVO,WAAS,SAAEvK,GACXhE,EAAKgE,QAAUA,EAEfhE,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKs6C,wBACHjgB,gBACAxlB,KAAK7U,KAAKuU,aACVO,WAAS,SAAE3O,GACXI,EAAK45C,uBAAyBh6C,KAGhCi4C,EAAAA,cACCp+C,KAAKia,mBAAmBvB,aACxB1Y,KAAK8pC,mBAAmBL,oBACxBzpC,KAAK63C,sBAAsBryB,eAE1B3Q,KAAK7U,KAAKuU,aACVO,WAAS,SAAEurC,OAEL/1C,EAA4B+1C,EAAQ,GACzC3gC,EAAiB2gC,EAAQ,GACzB5+B,EAAY4+B,EAAQ,GAEfC,EAAmBh2C,EAAO3J,OAAS8gB,EAErC6+B,EAAmB5gC,EACtBnZ,EAAKwjC,UAAUrqB,GAEfnZ,EAAKwjC,UAAUuW,GAGhB/5C,EAAKsK,kBAAkBJ,oBAI1BsvC,EAAA7/C,UAAA4pB,gBAAA,WAAA,IAAAvjB,EAAAvG,KAGKA,KAAKkgD,iBACRlgD,KAAKigD,eACHM,QAAQvgD,KAAKkgD,gBAAgBzuC,gBAAgBE,eAC7CkD,KACAS,EAAAA,QAAM,WAAO,OAAA/O,EAAK45C,0BAClBj4C,EAAAA,KAAG,SAAEgkB,GAAyB,OAAAA,EAAQ2uB,eACtC1iC,EAAAA,uBACAnY,KAAKuU,aAELO,WAAS,SAAEtM,GACXjC,EAAKi6C,qBAAqBh4C,MAI7BxI,KAAKs6C,wBACHvgB,mBACAllB,KACA7U,KAAKuU,aAELO,WAAS,SAAEtM,GACXjC,EAAKmgB,SAASQ,SAAS3gB,EAAK+2C,aAAa3rC,cAAe,QAASnJ,EAAQ,SAG3ExI,KAAK63C,sBACHxyB,0BACAxQ,KACA7U,KAAKuU,aAELO,WAAS,SAAE3O,GACPA,EACHI,EAAKk6C,0BAELl6C,EAAKm6C,8BAMR1gD,KAAK63C,sBACHxiC,cACAR,KACAS,EAAAA,QAAM,SAAEwiC,GACP,OAAOA,EAAIl1B,6BAEZ5iB,KAAKuU,aAELO,WAAS,SAAES,OAELoK,EAAkBpK,EAAU0K,qBACjCsB,EAAYhM,EAAUmM,eAEvBnb,EAAKmgB,SAASQ,SAAS3gB,EAAK+2C,aAAa3rC,cAAe,cAAe4P,EAAY,MACnFhb,EAAKmgB,SAASQ,SAAS3gB,EAAK+2C,aAAa3rC,cAAe,SAAUgO,EAAkB,UAIvFogC,EAAA7/C,UAAAsR,YAAA,WACCpE,EAAAlN,UAAMsR,YAAW5Q,KAAAZ,MACjBA,KAAKigD,eAAe3yB,QAAQttB,KAAK4Q,WAAWe,gBAG7CouC,EAAA7/C,UAAA6pC,UAAA,SAAUrqB,GACT1f,KAAK0f,OAASA,EACd1f,KAAK0mB,SAASQ,SAASlnB,KAAK4Q,WAAWe,cAAe,SAAU3R,KAAK0f,OAAS,OAGvEqgC,EAAA7/C,UAAAsgD,qBAAR,SAA6Bh4C,GACxBxI,KAAKmgD,wBACRngD,KAAKg1C,0BAA0Bjd,kBAAkBvvB,IAI3Cu3C,EAAA7/C,UAAAugD,wBAAR,WAAA,IAAAl6C,EAAAvG,KACCA,KAAKggD,OACHW,mBAAiB,WAEjBx2B,EAAAA,UAAU5jB,EAAKqK,WAAWe,cAAe,UACvCkD,KAEAN,EAAAA,UAAUhO,EAAK65C,oBACf75C,EAAKgO,aAELO,WAAS,SAAEC,OAEL6rC,EAAY7rC,EAAM/T,OAAO4/C,UAE/Br6C,EAAKouC,wBAAwBrF,kBAAkBsR,UAK5Cb,EAAA7/C,UAAAwgD,yBAAR,WACC1gD,KAAKogD,mBAAmBl+C,OACxBlC,KAAKogD,mBAAmB9rC,gCAtMzBzC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0BACVC,SAAA,kLACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDAnCjCG,EAAAA,kBAMA0U,EAAAA,iBARAzU,EAAAA,yBAIAiuC,EAAAA,cAgBQlrC,UACAo5B,UACAnpB,UACArN,UACA6wB,UACA9O,UACAV,UACA2R,UAZAuV,EAAAA,+CAsDJC,EAAAA,UAAQ,CAAAn8C,KAAI6N,EAAAA,OAAMX,KAAA,CAAC3C,+CA5BtB0D,EAAAA,UAASf,KAAA,CAAC,YAAa,CAAEgB,QAAQ,OAiMnCitC,GAnMiDvrC,IC1CjD,IAAAwsC,GAAA,WAEA,SAAAA,KASA,2BATCnvC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,8BACVC,SAAU,uCAOXgvC,EAXA,kBCeC,SAAAC,IAAA,IAAA16C,EACC6G,EAAAxM,KAAAZ,OAAOA,YALAuG,EAAAJ,QAAU,IAAIwJ,IAEdpJ,EAAAw1C,SAAW,IAAIhkC,EAAAA,gBAuBxB,OA3BkD1K,EAAAA,EAAAA,GAUjD4zC,EAAA/gD,UAAA8vB,WAAA,SAAW7pB,EAAkB4J,GAC5B/P,KAAKmG,QAAQ6J,IAAID,EAAY0F,WAAYtP,GACzCnG,KAAK+7C,SAAS75C,KAAKlC,KAAKmG,UAGzB86C,EAAA/gD,UAAAghD,mBAAA,SAAmBnxC,GAElB,OAAO/P,KAAK+7C,SACN7jC,eACArD,KACA3M,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAIkI,IAAIL,EAAY0F,eAE5B0C,EAAAA,6CAxBP7O,EAAAA,mDA4BD23C,GA3BkDhtC,ICTlD,IAAAktC,GAAA,WAWC,SAAAA,EAAoBC,GAAAphD,KAAAohD,6BAAAA,EAOrB,OAJCD,EAAAjhD,UAAAmhD,gBAAA,SAAgBtxC,GACf,YADe,IAAAA,IAAAA,EAAA+F,IACR9V,KAAKohD,6BAA6BF,mBAAmBnxC,wBAP7DzG,EAAAA,sDALQ23C,MAeTE,EAlBA,OCIaG,GAA2B,IAAIlyC,EAAAA,eAA0BmyC,8CCuCrE,SAAAC,EAAoB3wC,EACTwpC,EACAtqC,EACA8nC,EACA99B,EACAs7B,EACAhB,EACA8I,EACAsE,EACkCrO,GAT7C,IAAA7sC,EAUC6G,EAAAxM,KAAAZ,OAAOA,YAVYuG,EAAAsK,kBAAAA,EACTtK,EAAA8zC,oBAAAA,EACA9zC,EAAAwJ,YAAAA,EACAxJ,EAAAsxC,sBAAAA,EACAtxC,EAAAwT,mBAAAA,EACAxT,EAAA8uC,iCAAAA,EACA9uC,EAAA8tC,4BAAAA,EACA9tC,EAAA42C,mCAAAA,EACA52C,EAAAk7C,mCAAAA,EACkCl7C,EAAA6sC,UAAAA,EAzB7C7sC,EAAAm7C,eAAyB,EAEzBn7C,EAAAo7C,4BAAsC,EAEtCp7C,EAAAq7C,+BAAyC,EAEzCr7C,EAAAs7C,qBAA+B,EAE/Bt7C,EAAAu7C,kBAA4B,EAoB3Bv7C,EAAKw7C,eAAiB,OAAOx7C,EAAK6sC,UAAS,UAC3C7sC,EAAKy7C,gBAAkB,OAAOz7C,EAAK6sC,UAAS,aA2F9C,OA5HiD/lC,EAAAA,EAAAA,GAoChDm0C,EAAAthD,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KACCA,KAAK63C,sBACHxiC,cACAR,KAAK7U,KAAKuU,aACVO,WAAS,SAAES,GACXhP,EAAKgP,UAAYA,EACjBhP,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAK+Z,mBACH9D,WACApB,KAAK7U,KAAKuU,aACVO,WAAS,SAAE9I,GACXzF,EAAK07C,gBAAkBj2C,EACvBzF,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKyhD,mCACHJ,gBAAgBrhD,KAAK+P,aACrB8E,KACA7U,KAAKuU,aAELO,WAAS,SAAE3O,GACXI,EAAKm7C,cAAgBv7C,EACrBI,EAAKsK,kBAAkBJ,mBAIzBzQ,KAAKm9C,mCACHZ,sBAAsBv8C,KAAK+P,aAC3B8E,KACA7U,KAAKuU,aAELO,WAAS,SAAE3O,GACXI,EAAKs7C,oBAAsB17C,EAC3BI,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKq0C,4BACHz6B,UACA/E,KACA7U,KAAKuU,aAELO,WAAS,SAAExN,GACXf,EAAKo7C,2BAA6Br6C,EAAOssC,eACzCrtC,EAAKq7C,8BAAgCt6C,EAAOusC,kBAC5CttC,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKq1C,iCACHz7B,UACA/E,KACA7U,KAAKuU,aAELO,WAAS,SAAE3O,GACXI,EAAKu7C,iBAAmB37C,EACxBI,EAAKsK,kBAAkBJ,oBAI1B+wC,EAAAthD,UAAAgiD,oBAAA,WACC,OAAOliD,KAAK+hD,eAAiB,mBAG9BP,EAAAthD,UAAAiiD,uBAAA,WACC,OAAOniD,KAAK+hD,eAAiB,sBAG9BP,EAAAthD,UAAAkiD,yBAAA,WACC,OAAOpiD,KAAKq6C,oBAAoB1rC,mBAAqB3O,KAAKuV,WAAavV,KAAKuV,UAAUmL,sBAGvF8gC,EAAAthD,UAAAmiD,4BAAA,WACC,OAAOriD,KAAKq6C,oBAAoB1rC,mBAAqB3O,KAAKuV,WAAavV,KAAKuV,UAAUoL,yBAGvF6gC,EAAAthD,UAAAoiD,mBAAA,WACC,OAAOtiD,KAAKq6C,oBAAoBvrC,eAAepB,aAAe1N,KAAKiiD,iBAAmBjiD,KAAKiiD,gBAAgBhnC,cAG5GumC,EAAAthD,UAAAqiD,sBAAA,WACC,OAAOviD,KAAKq6C,oBAAoBxrC,kBAAkBnB,aAAe1N,KAAKiiD,iBAAmBjiD,KAAKiiD,gBAAgB/mC,iBAG/GsmC,EAAAthD,UAAAsiD,cAAA,WACC,OAAOxiD,KAAKuV,WAAqD,IAAxCvV,KAAKuV,UAAUoD,cAAchY,4BA/HvDkR,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0BACVC,SAAA,i5CACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDArBAI,EAAAA,yBAKzB1E,SACAyH,UACAiQ,UACA7P,UACA29B,UACAI,UACAqI,UACAgF,mCAwCJ1uC,EAAAA,OAAMX,KAAA,CAACwvC,SA+FZE,GA5HiDhtC,uBCZhD,SAAAiuC,EAAYC,EACTn2B,UACFnf,EAAAxM,KAAAZ,KAAM0iD,EAAwBn2B,IAAuBvsB,KAEvD,OANqDqN,EAAAA,EAAAA,uBADpD/D,EAAAA,sDAHQ+U,UAHAmO,EAAAA,0BAaTi2B,GANqDh2B,EAAAA,uCCLrD,SAAAk2B,mDAMA,OAN2Dt1C,EAAAA,EAAAA,GAM3Ds1C,GAN2Dh2B,EAAAA,wCCS1D,SAAAi2B,EAAoBC,GAApB,IAAAt8C,EACC6G,EAAAxM,KAAAZ,OAAOA,YADYuG,EAAAs8C,gCAAAA,IAYrB,OAd0Dx1C,EAAAA,EAAAA,GAMzDu1C,EAAA1iD,UAAAilB,QAAA,SAAQjH,GACP,OAAOle,KAAK6iD,gCAAgC19B,QAAQjH,IAGrD0kC,EAAA1iD,UAAA4sB,KAAA,SAAK3N,GACJnf,KAAK6iD,gCAAgC/1B,KAAK3N,wBAZ3C7V,EAAAA,sDAHQm5C,MAkBTG,GAd0DD,ICT1D,IAAAG,GAAA,SAAA11C,GAEC,SAAA01C,EAAY5kC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,0BAAwBle,KAE7C,OAL2CqN,EAAAA,EAAAA,GAK3Cy1C,EALA,CAA2C3kC,EAAAA,aCA3C4kC,GAAA,SAAA31C,GAEC,SAAA21C,EAAY7kC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,mBAAiBle,KAEtC,OALoCqN,EAAAA,EAAAA,GAKpC01C,EALA,CAAoC5kC,EAAAA,aCApC6kC,GAAA,SAAA51C,GAEC,SAAA41C,EAAY9kC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,wBAAsBle,KAE3C,OALyCqN,EAAAA,EAAAA,GAKzC21C,EALA,CAAyC7kC,EAAAA,aCAzC8kC,GAAA,SAAA71C,GAEC,SAAA61C,EAAY/kC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,iCAA+Ble,KAEpD,OALkDqN,EAAAA,EAAAA,GAKlD41C,EALA,CAAkD9kC,EAAAA,aCAlD+kC,GAAA,SAAA91C,GAEC,SAAA81C,EAAYhlC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,+BAA6Ble,KAElD,OALgDqN,EAAAA,EAAAA,GAKhD61C,EALA,CAAgD/kC,EAAAA,aCAhDglC,GAAA,SAAA/1C,GAEC,SAAA+1C,EAAYjlC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,gCAA8Ble,KAEnD,OALiDqN,EAAAA,EAAAA,GAKjD81C,EALA,CAAiDhlC,EAAAA,aCAjDilC,GAAA,SAAAh2C,GAEC,SAAAg2C,EAAYllC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,mCAAiCle,KAEtD,OALoDqN,EAAAA,EAAAA,GAKpD+1C,EALA,CAAoDjlC,EAAAA,aCApDklC,GAAA,SAAAj2C,GAEC,SAAAi2C,EAAYnlC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,wBAAsBle,KAE3C,OALyCqN,EAAAA,EAAAA,GAKzCg2C,EALA,CAAyCllC,EAAAA,aCAzCmlC,GAAA,SAAAl2C,GAEC,SAAAk2C,EAAYplC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,mBAAiBle,KAEtC,OALoCqN,EAAAA,EAAAA,GAKpCi2C,EALA,CAAoCnlC,EAAAA,aCApColC,GAAA,SAAAn2C,GAEC,SAAAm2C,EAAYrlC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,sBAAoBle,KAGzC,OANuCqN,EAAAA,EAAAA,GAMvCk2C,EANA,CAAuCplC,EAAAA,aCAvCqlC,GAAA,SAAAp2C,GAEC,SAAAo2C,EAAYtlC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,2BAAyBle,KAE9C,OAL4CqN,EAAAA,EAAAA,GAK5Cm2C,EALA,CAA4CrlC,EAAAA,aCG5CslC,GAAA,SAAAr2C,GAEC,SAAAq2C,EAAYvlC,EACQrG,GADpB,IAAAtR,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,mBAAiBle,YADjBuG,EAAAsR,OAAAA,IAOrB,OAVoCxK,EAAAA,EAAAA,GAOnCo2C,EAAAvjD,UAAAwjD,UAAA,WACC,OAAO1jD,KAAK6X,QAEd4rC,EAVA,CAAoCtlC,EAAAA,aCHpC,IAAAwlC,GAAA,SAAAv2C,GAEC,SAAAu2C,EAAYzlC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,gCAA8Ble,KAGnD,OANiDqN,EAAAA,EAAAA,GAMjDs2C,EANA,CAAiDxlC,EAAAA,4BCuChD,SAAAylC,EAAYlvC,EACDsQ,GADX,IAAAze,EAEC6G,EAAAxM,KAAAZ,KAAM0U,IAAe1U,YADXuG,EAAAye,4BAAAA,EALMze,EAAAs9C,uBAAyB,IAAIl0C,IAE7BpJ,EAAAu9C,WAAa,IAAI/rC,EAAAA,cAAsC,KAiEzE,OArEiD1K,EAAAA,EAAAA,GAWhDu2C,EAAA1jD,UAAAmV,YAAA,SAAY6I,GAEX,OAAOle,KAAK8jD,WACN5rC,eACArD,KACAS,EAAAA,QAAM,SAAEuuC,OAED5iD,EAAMid,EAAY1I,QAExB,OAAOquC,EAAuBn+B,IAAIzkB,MAEnCiH,EAAAA,KAAG,SAAE27C,GAAmD,OAAAA,EAAuBzzC,IAAI8N,EAAY1I,cAI5FouC,EAAA1jD,UAAA0U,UAAV,WACC,MAAO,CACNqJ,GACA6kC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAzM,GACAD,GACAG,GACAwM,GACA5L,GACAv5B,GACAolC,MAEAG,GACAzK,SAGAp0B,KAIQ8+B,EAAA1jD,UAAA8U,KAAV,SAAeD,GAAf,IAAAxO,EAAAvG,KAEOke,EAAcnJ,EAAMmQ,iBAELllB,KAAKglB,4BAA4BG,QAAQjH,GAEjDkH,WAAS,SAAE7P,OACjBtU,EAAMsU,EAAUC,QAAQC,WAE9BlP,EAAKs9C,uBAAuB7zC,IAAI/O,EAAKsU,GAErChP,EAAKu9C,WAAW5hD,KAAKqE,EAAKs9C,gDAlE5Bv6C,EAAAA,sDA9BkCqc,EAAAA,sBAI1BlB,MAgGTm/B,GArEiDnvC,IC1BjD,IAAasvC,GAAoC,CAChDtB,GACA,CACCxzC,QAAS0zC,GACThsB,SAAUisB,KAICoB,GAAiC,CAC7Cv/B,GACA,CACCxV,QAASwF,GACTkiB,SAAUitB,KAICK,GAA6B,CACzC5lC,IC1BD6lC,GAAA,WAYC,SAAAA,EAA6B1gB,GAAAxjC,KAAAwjC,qBAAAA,EAoB9B,OAjBC0gB,EAAAhkD,UAAA2jC,WAAA,WACC,OAAOmJ,IAGRkX,EAAAhkD,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExCv9B,EAAUu9B,EAAQh2B,YAEN6H,EAAU+M,uBAElB0N,WAAW7pB,IAGtB+9C,EAAAhkD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIvlB,GAA8BslB,EAAQxe,wCApB7E5b,EAAAA,sDAPwBw6B,EAAAA,wBA8BzBogB,EAhCA,GCAA,IAAAC,GAAA,WAWC,SAAAA,EAA6B3gB,GAAAxjC,KAAAwjC,qBAAAA,EAkB9B,OAfC2gB,EAAAjkD,UAAA2jC,WAAA,WACC,OAAOoJ,IAGRkX,EAAAjkD,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExC1gB,EAAW0gB,EAAQngB,cAEzBhO,EAAU+5B,kBAAkBtsB,IAG7BmhC,EAAAjkD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAI6f,GAAuB9f,EAAQxe,wCAlBtE5b,EAAAA,sDANwBw6B,EAAAA,wBA2BzBqgB,EA7BA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAAoB5gB,GAAAxjC,KAAAwjC,qBAAAA,EA2BrB,OAxBC4gB,EAAAlkD,UAAA2jC,WAAA,WACC,OAAO0J,IAGR6W,EAAAlkD,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExCn5B,EAAUm5B,EAAQ1O,aAExBzf,EAAU8uC,aAAa95C,IAGxB65C,EAAAlkD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,OAE5Crd,EAAgBqd,EAAQxN,mBAC7B3rB,EAAUm5B,EAAQ1O,aAIbsG,EAFkBnc,EAAUilB,YAEF,GAAkC7I,YAElEv7B,KAAKwjC,qBAAqBG,QAAQ,IAAItI,GAAkBqI,EAAQxe,iBAAkBmB,EAAe9b,EAAS+wB,yBA1B3GhyB,EAAAA,sDAPwBw6B,EAAAA,wBAqCzBsgB,EAvCA,GCAA,IAAAE,GAAA,WAgBC,SAAAA,EAA6BC,EAClB/gB,GADkBxjC,KAAAukD,6BAAAA,EAClBvkD,KAAAwjC,qBAAAA,EAiCZ,OA9BC8gB,EAAApkD,UAAA2jC,WAAA,WACC,OAAOuJ,IAGRkX,EAAApkD,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExCxlB,EAAcwlB,EAAQxe,iBAC3BmB,EAAgBqd,EAAQxN,mBACxB5F,EAAUoT,EAAQjT,aAEb+zB,EAAUjvC,EAAUi6B,WAAWlf,GAErCtwB,KAAKykD,iBAAiBvmC,EAAamI,EAAeiK,EAASk0B,IAG5DF,EAAApkD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,KAG3C4gB,EAAApkD,UAAAukD,iBAAR,SAAyBvmC,EAA0BmI,EAA8BiK,EAAkBk0B,OAE5F7pB,EAAa6pB,EAAQt8C,KAAG,SAAEw8C,GAC/B,MAAO,CACN3pB,UAAW2pB,EAAOC,eAClBr0B,QAASo0B,EAAOt1B,WAAW5Z,YAI7BxV,KAAKwjC,qBAAqBG,QAAQ,IAAIjJ,GAAiBxc,EAAamI,EAAesU,yBAlCpFrxB,EAAAA,sDATQq5C,UAF6B7e,EAAAA,wBAgDtCwgB,EAlDA,GCEA,IAAAM,GAAA,SAAAx3C,GAEC,SAAAw3C,EAAY1mC,UACX9Q,EAAAxM,KAAAZ,KAAMke,EAAa,oBAAkBle,KAGvC,OANqCqN,EAAAA,EAAAA,GAMrCu3C,EANA,CAAqCzmC,EAAAA,aCFrC0mC,GAAA,WAWC,SAAAA,EAAoBrhB,GAAAxjC,KAAAwjC,qBAAAA,EAkBrB,OAfCqhB,EAAA3kD,UAAA2jC,WAAA,WACC,OAAOqJ,IAGR2X,EAAA3kD,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCt8B,EAAgBs8B,EAAQyJ,mBAE9BhuB,EAAUowB,iBAAiBnoC,IAG5By9C,EAAA3kD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIihB,GAAgBlhB,EAAQxe,wCAlB/D5b,EAAAA,sDANwBw6B,EAAAA,wBA2BzB+gB,EA7BA,GCEA,IAAAC,GAAA,SAAA13C,GAEC,SAAA03C,EAAY5mC,EACQ/X,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,kCAAgCle,YADhCuG,EAAAJ,QAAAA,IAQrB,OAXmDkH,EAAAA,EAAAA,GAOlDy3C,EAAA5kD,UAAAk3B,WAAA,WACC,OAAOp3B,KAAKmG,SAGd2+C,EAXA,CAAmD3mC,EAAAA,aCFnD,IAAA4mC,GAAA,WAWC,SAAAA,EAA6BvhB,GAAAxjC,KAAAwjC,qBAAAA,EAqB9B,OAlBCuhB,EAAA7kD,UAAA2jC,WAAA,WACC,OAAO8H,IAGRoZ,EAAA7kD,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCkI,EAAelI,EAAQmI,YAE7B1sB,EAAUuwB,gBAAgB9D,IAG3BmZ,EAAA7kD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,OAE5CkI,EAAelI,EAAQmI,YAE7B7rC,KAAKwjC,qBAAqBG,QAAQ,IAAImhB,GAA8BphB,EAAQxe,iBAAkB0mB,EAAazlC,+BArB5GmD,EAAAA,sDANwBw6B,EAAAA,wBA8BzBihB,EAhCA,GCEA,IAAAC,GAAA,SAAA53C,GAEC,SAAA43C,EAAY9mC,EACQ/X,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,qCAAmCle,YADnCuG,EAAAJ,QAAAA,IAQrB,OAXsDkH,EAAAA,EAAAA,GAOrD23C,EAAA9kD,UAAAk3B,WAAA,WACC,OAAOp3B,KAAKmG,SAGd6+C,EAXA,CAAsD7mC,EAAAA,aCFtD,IAAA8mC,GAAA,WAYC,SAAAA,EAAoBzhB,GAAAxjC,KAAAwjC,qBAAAA,EAqBrB,OAlBCyhB,EAAA/kD,UAAA2jC,WAAA,WACC,OAAO8J,IAGRsX,EAAA/kD,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCwhB,EAAkBxhB,EAAQmI,YAEhC1sB,EAAUwvB,mBAAmBuW,IAG9BD,EAAA/kD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,OAE5CwhB,EAAkBxhB,EAAQmI,YAEhC7rC,KAAKwjC,qBAAqBG,QAAQ,IAAIqhB,GAAiCthB,EAAQxe,iBAAkBggC,EAAgB/+C,+BArBlHmD,EAAAA,sDAPwBw6B,EAAAA,wBA+BzBmhB,EAjCA,GCGA,IAAAE,GAAA,SAAA/3C,GAEC,SAAA+3C,EAAYjnC,EACQ/X,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,uCAAqCle,YADrCuG,EAAAJ,QAAAA,IAQrB,OAXwDkH,EAAAA,EAAAA,GAOvD83C,EAAAjlD,UAAAk3B,WAAA,WACC,OAAOp3B,KAAKmG,SAGdg/C,EAXA,CAAwDhnC,EAAAA,aCHxD,IAAAinC,GAAA,WAaC,SAAAA,EAA6Bb,EAClB/gB,GADkBxjC,KAAAukD,6BAAAA,EAClBvkD,KAAAwjC,qBAAAA,EAsBZ,OAnBC4hB,EAAAllD,UAAA2jC,WAAA,WACC,OAAOwJ,IAGR+X,EAAAllD,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExC4J,EAAqB5J,EAAQmI,YAEnC1sB,EAAUwwB,sBAAsBrC,IAGjC8X,EAAAllD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,OAE5C3zB,EAAc2zB,EAAQxe,iBAC3BooB,EAAqB5J,EAAQmI,YAE9B7rC,KAAKwjC,qBAAqBG,QAAQ,IAAIwhB,GAAmCp1C,EAAau9B,EAAmBnnC,+BAvB1GmD,EAAAA,sDANQq5C,UAFgB7e,EAAAA,wBAkCzBshB,EApCA,GCAA,IAAAC,GAAA,WAcC,SAAAA,EAA6Bd,EAClB/gB,GADkBxjC,KAAAukD,6BAAAA,EAClBvkD,KAAAwjC,qBAAAA,EAoBZ,OAjBC6hB,EAAAnlD,UAAA2jC,WAAA,WACC,OAAOiI,IAGRuZ,EAAAnlD,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCpT,EAAmBoT,EAAQjT,aAChC6b,EAA0B5I,EAAQuI,sBAClCD,EAActI,EAAQwI,iBAEvB/sB,EAAUmmC,aAAah1B,EAASgc,EAAiBN,IAGlDqZ,EAAAnlD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIggB,GAA4BjgB,EAAQxe,wCArB3E5b,EAAAA,sDAPQq5C,UAFgB7e,EAAAA,wBAiCzBuhB,EAnCA,GCMA,IAAAE,GAAA,SAAAn4C,GAEC,SAAAm4C,EAAYx1C,EACQ0mC,GADpB,IAAAlwC,EAEC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,sCAAoC/P,YADpCuG,EAAAkwC,OAAAA,IAQrB,OAXuDppC,EAAAA,EAAAA,GAOtDk4C,EAAArlD,UAAAslD,gBAAA,WACC,OAAOxlD,KAAKy2C,QAGd8O,EAXA,CAAuDpnC,EAAAA,aCFvD,IAAAsnC,GAAA,SAAAr4C,GAEC,SAAAq4C,EAAYvnC,EACQ8I,GADpB,IAAAzgB,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,sCAAoCle,YADpCuG,EAAAygB,cAAAA,IAOrB,OAVuD3Z,EAAAA,EAAAA,GAOtDo4C,EAAAvlD,UAAAwlD,iBAAA,WACC,OAAO1lD,KAAKgnB,eAEdy+B,EAVA,CAAuDtnC,EAAAA,aCJvD,IAAAwnC,GAAA,WAiBC,SAAAA,EAAoBniB,GAAAxjC,KAAAwjC,qBAAAA,EAsDrB,OAnDCmiB,EAAAzlD,UAAAyjC,QAAA,SAAQQ,GAAR,IAAA59B,EAAAvG,KAECmkC,EAAO39B,SAAO,SAAEuO,GACfxO,EAAKq/C,aAAa7wC,OAIZ4wC,EAAAzlD,UAAA0lD,aAAR,SAAqB7wC,GAEpB,GAAwB,yCAApBA,EAAMqkB,UAAsD,KAEzDysB,EAAoC,EAEpCC,EAAc,IAAIrC,GAAeoC,EAAqC3gC,iBAAkB2gC,EAAqCnC,aAEnI1jD,KAAKwjC,qBAAqBG,QAAQmiB,GAGnC,GAAwB,4CAApB/wC,EAAMqkB,UAAyD,KAE5D2sB,EAAuC,EAEvCD,EAAc,IAAIzO,GACvB0O,EAAwC7gC,iBACxC6gC,EAAwCvO,gBACxCuO,EAAwCtO,gBAGzCz3C,KAAKwjC,qBAAqBG,QAAQmiB,GAGnC,GAAwB,+CAApB/wC,EAAMqkB,UAA4D,KAE/D4sB,EAA0C,EAE1CF,EAAc,IAAIP,GAAkCS,EAA2C9gC,iBAAkB8gC,EAA2CR,mBAElKxlD,KAAKwjC,qBAAqBG,QAAQmiB,GAInC,GAAwB,+CAApB/wC,EAAMqkB,UAA4D,KAE/D6sB,EAA0C,EAE1CH,EAAc,IAAIL,GAAkCQ,EAA2C/gC,iBAAkB+gC,EAA2CP,oBAElK1lD,KAAKwjC,qBAAqBG,QAAQmiB,yBArDpCx8C,EAAAA,sDAZwBw6B,EAAAA,wBAqEzB6hB,EAvEA,GCKA,IAAAO,GAAA,SAAA94C,GAEC,SAAA84C,EAAYhoC,EACQ/X,GADpB,IAAAI,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,wCAAsCle,YADtCuG,EAAAJ,QAAAA,IAQrB,OAXyDkH,EAAAA,EAAAA,GAOxD64C,EAAAhmD,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SAGd+/C,EAXA,CAAyD/nC,EAAAA,aCLzD,IAAAgoC,GAAA,WAYC,SAAAA,EAA6BC,EAClB5iB,GADkBxjC,KAAAomD,oCAAAA,EAClBpmD,KAAAwjC,qBAAAA,EAuBZ,OApBC2iB,EAAAjmD,UAAA2jC,WAAA,WACC,OAAOmQ,IAGRmS,EAAAjmD,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExCv9B,EAAUu9B,EAAQh2B,YAExB6H,EAAU2+B,sBAAsB/tC,IAGjCggD,EAAAjmD,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,OAE5Cv9B,EAAUu9B,EAAQh2B,YACvBwrB,EAAkB/Z,EAAUilB,YAE7BpkC,KAAKwjC,qBAAqBG,QAAQ,IAAIuiB,GAAoCxiB,EAAQxe,iBAAkB/e,IACpGnG,KAAKomD,oCAAoCziB,QAAQzK,wBAxBlD5vB,EAAAA,sDANQq8C,UADgB7hB,EAAAA,wBAkCzBqiB,EApCA,GCAA,IAAAE,GAAA,WAEC,SAAAA,EAA6BxrC,EACTC,GADS9a,KAAA6a,MAAAA,EACT7a,KAAA8a,IAAAA,EAWrB,OARCurC,EAAAnmD,UAAAmb,SAAA,WACC,OAAOrb,KAAK6a,OAGbwrC,EAAAnmD,UAAAob,OAAA,WACC,OAAOtb,KAAK8a,KAGdurC,EAdA,GCAA,IAAAC,GAAA,WAqBC,SAAAA,EAAoBngD,EACjBqb,EACAlH,EACAisC,EACA9kC,EACA+kC,EACAC,QANiB,IAAAtgD,IAAAA,GAAA,QACjB,IAAAqb,IAAAA,EAAA,QACA,IAAAlH,IAAAA,EAAA,QACA,IAAAisC,IAAAA,EAAA,GAHiBvmD,KAAAmG,QAAAA,EAhBZnG,KAAAyhB,UAAoB,GAEpBzhB,KAAAwmD,eAAiB,EAEjBxmD,KAAAymD,kBAAoB,EAmB3BzmD,KAAKwhB,eAAiBA,EACtBxhB,KAAKsa,WAAaA,EAClBta,KAAKumD,eAAiBA,EAElBhoB,OAAOmoB,UAAUjlC,KACpBzhB,KAAKyhB,UAAYA,GAGd8c,OAAOmoB,UAAUF,KACpBxmD,KAAKwmD,eAAiBA,GAGnBjoB,OAAOmoB,UAAUD,KACpBzmD,KAAKymD,kBAAoBA,GAG1BzmD,KAAK2mD,iBA2GP,OAvGCL,EAAApmD,UAAAwN,UAAA,WACC,OAAO1N,KAAKmG,SACXnG,KAAKwhB,eAAiB,GACtBxhB,KAAKsa,WAAa,GAGpBgsC,EAAApmD,UAAA0hB,aAAA,WACC,OAAO5hB,KAAKyhB,WAGb6kC,EAAApmD,UAAA0mD,SAAA,WACC,OAAO5mD,KAAK6mD,OAGbP,EAAApmD,UAAAwhB,aAAA,WACC,OAAO1hB,KAAK6mD,MAAMxrC,WAAarb,KAAKyhB,WAGrC6kC,EAAApmD,UAAAymD,eAAA,WAEC,KAAI3mD,KAAK+hB,kBAAoB/hB,KAAKwhB,gBAAlC,KAKMslC,EAAkBjqC,KAAKkqC,MAAM/mD,KAAKwhB,eAAiBxhB,KAAKyhB,WAExDulC,EAAiBnqC,KAAKkqC,MAAM/mD,KAAKumD,eAAiBvmD,KAAKyhB,WAEvDF,EAAY1E,KAAKoqC,IAAID,EAAiBhnD,KAAKwmD,gBAAkBxmD,KAAKyhB,UAEpE5G,EAASmsC,EAAiBhnD,KAAKwmD,eAI/B1rC,EAAMD,EAFegC,KAAKC,KAAK9c,KAAKwhB,eAAiBxhB,KAAKyhB,WAEzBzhB,KAAKymD,kBAS1C,OAPI3rC,EAAM9a,KAAKsa,aAEdO,GADAC,EAAM9a,KAAKsa,YACGwsC,GAGf9mD,KAAK6mD,MAAQ,IAAIR,GAAcxrC,EAAOC,GAE/B,CACND,MAAKA,EACLC,IAAGA,EACHyG,UAASA,GA1BTvhB,KAAK6mD,MAAQ,IAAIR,GAAc,EAAGrmD,KAAKsa,aA8BzCgsC,EAAApmD,UAAA8vB,WAAA,SAAW7pB,GACVnG,KAAKmG,QAAUA,EAGXnG,KAAKmG,SAAmC,IAAxBnG,KAAKwhB,gBACxBxhB,KAAK2mC,OAAOM,KAAK,qEAGlBjnC,KAAK2mD,kBAGNL,EAAApmD,UAAAgnC,cAAA,SAAc5sB,QAAA,IAAAA,IAAAA,EAAA,GACbta,KAAKsa,WAAaA,EAClBta,KAAK2mD,kBAGNL,EAAApmD,UAAAgnD,uBAAA,SAAuBC,GACtBnnD,KAAKwmD,eAAiBW,EACtBnnD,KAAK2mD,kBAGNL,EAAApmD,UAAAknD,0BAAA,SAA0BD,GACzBnnD,KAAKymD,kBAAoBU,EACzBnnD,KAAK2mD,kBAGNL,EAAApmD,UAAAovC,kBAAA,SAAkBiX,GACjBvmD,KAAKumD,eAAiBA,EACtBvmD,KAAK2mD,kBAGNL,EAAApmD,UAAAmnD,kBAAA,SAAkB3nC,GACjB1f,KAAKwhB,eAAiB9B,EACtB1f,KAAK2mD,kBAGNL,EAAApmD,UAAA2vC,aAAA,SAAanwB,GACZ1f,KAAKyhB,UAAY/B,EACjB1f,KAAK2mD,kBAGNL,EAAApmD,UAAAonD,UAAA,SAAU3gB,GACT3mC,KAAK2mC,OAASA,GAGf2f,EAAApmD,UAAA6hB,eAAA,WACC,OAAO/hB,KAAKsa,WAAata,KAAKyhB,WAG/B6kC,EAAApmD,UAAAyhB,kBAAA,WACC,OAAO3hB,KAAKwhB,gBAEd8kC,EAvJA,GCAA,IAAAiB,GAAA,WAQC,SAAAA,EAAoB5gB,GAAA3mC,KAAA2mC,OAAAA,EA0BrB,OAvBC4gB,EAAArnD,UAAAC,OAAA,SAAOgG,EACHqb,EACAlH,EACAisC,EACA9kC,EACA+kC,EACAC,QANG,IAAAtgD,IAAAA,GAAA,QACH,IAAAqb,IAAAA,EAAA,QACA,IAAAlH,IAAAA,EAAA,QACA,IAAAisC,IAAAA,EAAA,OAKGiB,EAAK,IAAIlB,GACdngD,EACAqb,EACAlH,EACAisC,EACA9kC,EACA+kC,EACAC,GAKD,OAFAe,EAAGF,UAAUtnD,KAAK2mC,QAEX6gB,uBA1BRl+C,EAAAA,sDAJQq+B,MAiCT4f,EAlCA,GCAA,IAAAE,GAAA,WAIA,SAAAA,KAQA,OANCA,EAAAvnD,UAAAoP,WAAA,eAEOsG,EAAKsN,EAAAA,sBAAsBC,WACjC,OAAO,IAAIgO,GAAQvb,IAGrB6xC,EAZA,iBC2BC,SAAAC,EAAsB9xC,EACf2b,EACAnG,EACAu8B,EACA3hD,GAZChG,KAAA4nD,oBAA8B,EAarC5nD,KAAK4V,GAAKA,EACV5V,KAAKuxB,SAAWA,EAChBvxB,KAAKorB,SAAWA,EAChBprB,KAAK2nD,SAAWA,EAEQ,iBAAbp2B,EACVvxB,KAAK6nD,eAAc,SAAInpC,GAA6B,OAAAA,EAAO0E,UAAUmO,IACvC,mBAAbA,IACjBvxB,KAAK6nD,eAAc,SAAInpC,GAA6B,OAAA6S,EAAS7S,EAAO0E,aAGrEpjB,KAAK8nD,qBAAuB9nD,KAAK+nD,6BAEjC/nD,KAAKgoD,mBAAmBhiD,GAqH1B,OA9GC0hD,EAAAxnD,UAAAsV,MAAA,WACC,OAAOxV,KAAK4V,IAGb8xC,EAAAxnD,UAAA+nD,OAAA,WACC,OAAOjoD,KAAKwV,QAAQA,SAGrBkyC,EAAAxnD,UAAA8uB,YAAA,WACC,OAAOhvB,KAAKorB,UAGbs8B,EAAAxnD,UAAAgzB,YAAA,WACC,OAAOlzB,KAAKuxB,UAGbm2B,EAAAxnD,UAAA47B,kBAAA,WACC,OAAO97B,KAAK6nD,gBAGbH,EAAAxnD,UAAA67B,wBAAA,WAAA,IAEKnzB,EAFLrC,EAAAvG,KAUC,OANAA,KAAK2nD,SACHO,mBACA9iC,WAAS,SAAErjB,GACX6G,EAAU7G,KAGR6G,EACH,SAAQ8V,OACDypC,EAAM5hD,EAAKshD,eAAenpC,GAChC,OAAO9V,EAAQu/C,IAGhB,SAAQzpC,GACP,OAAOnY,EAAKshD,eAAenpC,KAK9BgpC,EAAAxnD,UAAA0xB,SAAA,SAASlT,GACR,OAAO1e,KAAK6nD,eAAenpC,IAG5BgpC,EAAAxnD,UAAAkoD,aAAA,SAAa1pC,OACRvc,EAAQnC,KAAK6nD,eAAenpC,GAQhC,OANA1e,KAAK2nD,SACHU,iBACAjjC,WAAS,SAAExc,GACXzG,EAAQyG,EAAQzG,MAGXA,GAGRulD,EAAAxnD,UAAAooD,eAAA,SAAe5pC,OACVvc,EAAQnC,KAAK6nD,eAAenpC,GAQhC,OANA1e,KAAK2nD,SACHO,mBACA9iC,WAAS,SAAExc,GACXzG,EAAQyG,EAAQzG,MAGXA,GAGRulD,EAAAxnD,UAAAqoD,cAAA,SAAc3jD,GAEb,QAAK5E,KAAKwoD,2BAIAxoD,KAAKyoD,aAAe7jD,IAG/B8iD,EAAAxnD,UAAAsoD,qBAAA,WACC,OAAOxoD,KAAK4nD,oBAGbF,EAAAxnD,UAAAg0C,sBAAA,SAAsB/tC,GACrBnG,KAAK4nD,mBAAqBzhD,GAGnBuhD,EAAAxnD,UAAA8nD,mBAAR,SAA2BhiD,GAA3B,IAAAO,EAAAvG,KAEOgG,GAA+D,IAA1CxG,OAAOuuB,KAAK/nB,GAAmBrF,QAErDqF,EAAkBG,UACrBnG,KAAK4nD,qBAAuB5hD,EAAkBG,SAG3CH,EAAkBI,kBAErBpG,KAAKyoD,aAAe,EAEpBziD,EAAkBI,iBAAiBI,SAAO,SAAElG,GAC3CiG,EAAKkiD,cAAgBnoD,MAGtBN,KAAKyoD,aAAezoD,KAAK0oD,6BAG1B1oD,KAAKyoD,aAAezoD,KAAK0oD,6BAI5BhB,KC1JA,IAAAiB,GAAA,SAAAv7C,GAEC,SAAAu7C,EAAY/yC,EACT2b,EACAo2B,EACA3hD,UACFoH,EAAAxM,KAAAZ,KAAM4V,EACL2b,EACAtsB,EAASrC,QACT+kD,EACA3hD,IAAkBhG,KAcrB,OAxBkCqN,EAAAA,EAAAA,GAajCs7C,EAAAzoD,UAAAwoD,0BAAA,WACC,OAAO,GAKRC,EAAAzoD,UAAA6nD,2BAAA,WACC,OAAOphD,EAAgBxB,MACtBwB,EAAgBvB,UAGnBujD,EAxBA,CAAkCjB,ICAlCkB,GAAA,SAAAx7C,GAEC,SAAAw7C,EAAYhzC,EACT2b,EACAo2B,EACA3hD,UACFoH,EAAAxM,KAAAZ,KAAM4V,EACL2b,EACAtsB,EAASpC,OACT8kD,EACA3hD,IAAkBhG,KAwBrB,OAlCiCqN,EAAAA,EAAAA,GAahCu7C,EAAA1oD,UAAAwoD,0BAAA,WACC,OAAO,GAURE,EAAA1oD,UAAA6nD,2BAAA,WACC,OAAOphD,EAAgBxB,MACtBwB,EAAgBvB,SAChBuB,EAAgBtB,IAChBsB,EAAgBpB,IAChBoB,EAAgBnB,IAChBmB,EAAgBrB,QAChBqB,EAAgBlB,QAGnBmjD,EAlCA,CAAiClB,ICAjCmB,GAAA,SAAAz7C,GAEC,SAAAy7C,EAAYjzC,EACT2b,EACAo2B,EACA3hD,UACFoH,EAAAxM,KAAAZ,KAAM4V,EACL2b,EACAtsB,EAASnC,OACT6kD,EACA3hD,IAAkBhG,KAcrB,OAxBiCqN,EAAAA,EAAAA,GAahCw7C,EAAA3oD,UAAAwoD,0BAAA,WACC,OAAO,GAKRG,EAAA3oD,UAAA6nD,2BAAA,WACC,OAAOphD,EAAgBxB,MACtBwB,EAAgBvB,UAGnByjD,EAxBA,CAAiCnB,ICAjCoB,GAAA,SAAA17C,GAEC,SAAA07C,EAAYlzC,EACT2b,EACAo2B,EACA3hD,UACFoH,EAAAxM,KAAAZ,KAAM4V,EACL2b,EACAtsB,EAASlC,QACT4kD,EACA3hD,IAAkBhG,KAkBrB,OA5BkCqN,EAAAA,EAAAA,GAajCy7C,EAAA5oD,UAAAwoD,0BAAA,WACC,OAAO,GAORI,EAAA5oD,UAAA6nD,2BAAA,WACC,OAAOphD,EAAgBxB,MACtBwB,EAAgBvB,SAChBuB,EAAgBjB,OAChBiB,EAAgBhB,OAGnBmjD,EA5BA,CAAkCpB,ICAlCqB,GAAA,SAAA37C,GAEC,SAAA27C,EAAYnzC,EACT2b,EACAo2B,EACA3hD,UACFoH,EAAAxM,KAAAZ,KAAM4V,EACL2b,EACAtsB,EAASjC,KACT2kD,EACA3hD,IAAkBhG,KAcrB,OAxB+BqN,EAAAA,EAAAA,GAa9B07C,EAAA7oD,UAAAwoD,0BAAA,WACC,OAAO,GAKRK,EAAA7oD,UAAA6nD,2BAAA,WACC,OAAOphD,EAAgBxB,MACtBwB,EAAgBvB,UAGnB2jD,EAxBA,CAA+BrB,ICR/BsB,GAAA,WAMC,SAAAA,EAA6BpgD,EACTqgD,EACAC,GAFSlpD,KAAA4I,QAAAA,EACT5I,KAAAipD,YAAAA,EACAjpD,KAAAkpD,cAAAA,EAoCrB,OAjCCF,EAAA9oD,UAAAipD,WAAA,WACC,OAAOpI,EAAAA,SAASqI,GAAGppD,KAAK4I,UAGzBogD,EAAA9oD,UAAAmoD,eAAA,eAEKz/C,EAUJ,OARI5I,KAAKipD,cACRrgD,EAAU5I,KAAKipD,aAGZjpD,KAAK4I,UACRA,EAAU5I,KAAK4I,SAGTm4C,EAAAA,SAASqI,GAAGxgD,IAGpBogD,EAAA9oD,UAAAgoD,iBAAA,eAEKt/C,EAUJ,OARI5I,KAAKkpD,gBACRtgD,EAAU5I,KAAKkpD,eAGZlpD,KAAK4I,UACRA,EAAU5I,KAAK4I,SAGTm4C,EAAAA,SAASqI,GAAGxgD,IAErBogD,EA5CA,GCAA,IAAAK,GAAA,WAiBC,SAAAA,EAA6BC,GAAAtpD,KAAAspD,iBAAAA,EAgD9B,OA7CCD,EAAAnpD,UAAAC,OAAA,SAAOozB,OAEAg2B,EAAgBvpD,KAAKwpD,eAAej2B,GAEtCk2B,EAAal2B,EAAO3uB,KAMxB,YAJmBsB,IAAfujD,IACHA,EAAaxkD,EAASnC,QAGnB2mD,IAAexkD,EAASrC,QACpB,IAAI+lD,GAAa3oD,KAAKspD,iBAAiBh6C,aAAcikB,EAAY,MAAYg2B,EAAeh2B,EAAO9qB,aAGvGghD,IAAexkD,EAASpC,OACpB,IAAI+lD,GAAY5oD,KAAKspD,iBAAiBh6C,aAAcikB,EAAY,MAAYg2B,EAAeh2B,EAAO9qB,aAGtGghD,IAAexkD,EAASnC,OACpB,IAAI+lD,GAAY7oD,KAAKspD,iBAAiBh6C,aAAcikB,EAAY,MAAYg2B,GAGhFE,IAAexkD,EAASlC,QACpB,IAAI+lD,GAAa9oD,KAAKspD,iBAAiBh6C,aAAcikB,EAAY,MAAYg2B,GAGjFE,IAAexkD,EAASjC,KACpB,IAAI+lD,GAAU/oD,KAAKspD,iBAAiBh6C,aAAcikB,EAAY,MAAYg2B,QADlF,GAMOF,EAAAnpD,UAAAspD,eAAR,SAAuBj2B,OAGrB01B,EADGrgD,EAAU2qB,EAAO3qB,QAOrB,OAJI2qB,EAAO7qB,UACVugD,EAAc11B,EAAO7qB,QAAQE,SAGvB,IAAIogD,GAAcpgD,EAASqgD,wBA/CnC3/C,EAAAA,sDAZQm+C,MA+DT4B,EAjEA,GCOA,IAAAK,GAAA,WAIC,SAAAA,EAA6BC,GAAA3pD,KAAA2pD,aAAAA,EAFZ3pD,KAAAs7B,OAAS,IAAI3rB,IA6C/B,OAxCC+5C,EAAAxpD,UAAAkvB,SAAA,SAASkB,GAER,OAAgB,OAAZA,EACItwB,KAAK4pD,eAAe,GAGrB5pD,KAAKs7B,OAAOlrB,IAAIkgB,EAAQ9a,UAGhCk0C,EAAAxpD,UAAA2pD,eAAA,WACC,OAAOlqD,MAAMmqD,KAAK9pD,KAAKs7B,OAAOvN,SAG/B27B,EAAAxpD,UAAA0pD,aAAA,WACC,OAAOjqD,MAAMmqD,KAAK9pD,KAAKs7B,OAAOmb,WAG/BiT,EAAAxpD,UAAA0vC,WAAA,SAAWrlC,GAAX,IAAAhE,EAAAvG,KAEMuK,GAILA,EAAQ/D,SAAO,SAAE+sB,OAEVhrB,EAAQhC,EAAKojD,aAAaxpD,OAAOozB,GAEvChtB,EAAKwjD,SAASxhD,OAIhBmhD,EAAAxpD,UAAA8pD,UAAA,SAAU1uB,eACT,IAAkB,IAAA2uB,EAAAlrB,EAAAzD,GAAM4uB,EAAAD,EAAA/nD,QAAAgoD,EAAA9nD,KAAA8nD,EAAAD,EAAA/nD,OAAE,CAArB,IAAIqG,EAAK2hD,EAAA/nD,MACbnC,KAAK+pD,SAASxhD,uGAIRmhD,EAAAxpD,UAAA6pD,SAAR,SAAiBxhD,GAChBvI,KAAKs7B,OAAOtrB,IAAIzH,EAAMiN,QAAQC,WAAYlN,IAE5CmhD,EA/CA,GCPA,IAAAS,GAAA,WASC,SAAAA,EAAoBR,GAAA3pD,KAAA2pD,aAAAA,EAOrB,OAJCQ,EAAAjqD,UAAAC,OAAA,WACC,OAAO,IAAIupD,GAAgB1pD,KAAK2pD,mCAPjCrgD,EAAAA,sDAJQ+/C,MAcTc,EAhBA,GCIA,IAAAC,GAAA,WAUC,SAAAA,EAAYx0C,EACTrN,EACAyjC,GACFhsC,KAAKqqD,SAAWz0C,EAChB5V,KAAKuI,MAAQA,EACbvI,KAAKgsC,YAAcA,EA2DrB,OAxDCoe,EAAAlqD,UAAAuwB,WAAA,WACC,OAAOzwB,KAAKuI,MAAMiN,SAGnB40C,EAAAlqD,UAAAgsC,eAAA,WACC,OAAOlsC,KAAKgsC,aAGboe,EAAAlqD,UAAAoqD,eAAA,SAAete,GACdhsC,KAAKgsC,YAAcA,GAIpBoe,EAAAlqD,UAAAoV,OAAA,SAAO4D,GAAP,IAAA3S,EAAAvG,KAEC,OAAwB,IAApBkZ,EAASvY,OACLuY,EAGDA,EAAS5D,QAAM,SAAEjJ,GAEvB,OAAI9F,EAAKgC,MAAMymB,gBAAkB/pB,EAASnC,OAClCyD,EAAKgkD,aAAal+C,GACf9F,EAAKgC,MAAMymB,gBAAkB/pB,EAASpC,OACzC0D,EAAKikD,aAAan+C,GACf9F,EAAKgC,MAAMymB,gBAAkB/pB,EAASlC,SACzCwD,EAAKkkD,cAAcp+C,OAQrB+9C,EAAAlqD,UAAAqqD,aAAR,SAAqBl+C,OACdlK,EAAQnC,KAAKuI,MAAMqpB,SAASvlB,GAElC,MAAqB,iBAAVlK,GACHA,EAAMuoD,cAAct4B,QAAQpyB,KAAKgsC,YAAY0e,gBAAkB,GAMhEN,EAAAlqD,UAAAsqD,aAAR,SAAqBn+C,GAGpB,OAFoBrM,KAAKuI,MAAMqpB,SAASvlB,GAEnBrM,KAAKgsC,aAGnBoe,EAAAlqD,UAAAuqD,cAAR,SAAsBp+C,GAGrB,OAFqBrM,KAAKuI,MAAMqpB,SAASvlB,KAEjBrM,KAAKgsC,aAG/Boe,EA1EA,GCFA,IAAAO,GAAA,WAIC,SAAAA,EAAYpiD,EACT8hD,OAEI/5B,EAAU/nB,EAAMiN,QAAQC,WAE9BzV,KAAK4V,GAAK0a,EAAU,IAAM+5B,EAM5B,OAHCM,EAAAzqD,UAAAsV,MAAA,WACC,OAAOxV,KAAK4V,IAEd+0C,EAfA,GCEA,IAAAC,GAAA,WAQC,SAAAA,EAAYC,EACTnJ,EACAG,QAFS,IAAAgJ,IAAAA,GAAA,QACT,IAAAnJ,IAAAA,GAAA,QACA,IAAAG,IAAAA,GAAA,GARK7hD,KAAA6qD,kBAA4B,EAE5B7qD,KAAA0hD,eAAyB,EAEzB1hD,KAAA6hD,qBAA+B,EAKtC7hD,KAAK6qD,iBAAmBA,EACxB7qD,KAAK0hD,cAAgBA,EACrB1hD,KAAK6hD,oBAAsBA,EAiC7B,OA9BC+I,EAAA1qD,UAAAi4C,mBAAA,WACC,OAAOn4C,KAAK6qD,kBAGbD,EAAA1qD,UAAA4qD,wBAAA,WACC,OAAO9qD,KAAK6hD,qBAGb+I,EAAA1qD,UAAA6qD,mBAAA,WACC,OAAO/qD,KAAK0hD,eAGbkJ,EAAA1qD,UAAAwvC,gBAAA,SAAgBpoC,GACXA,QAA6BpB,IAAnBoB,EAAOnB,SAA4C,OAAnBmB,EAAOnB,UACpDnG,KAAK6qD,iBAAmBvjD,EAAOnB,UAIjCykD,EAAA1qD,UAAAyuC,mBAAA,SAAmBrnC,GACdA,QAA6BpB,IAAnBoB,EAAOnB,SAA4C,OAAnBmB,EAAOnB,UACpDnG,KAAK0hD,cAAgBp6C,EAAOnB,UAI9BykD,EAAA1qD,UAAAyvC,sBAAA,SAAsBroC,GACjBA,QAA6BpB,IAAnBoB,EAAOnB,SAA4C,OAAnBmB,EAAOnB,UACpDnG,KAAK6hD,oBAAsBv6C,EAAOnB,UAIrCykD,EA9CA,GCGA,IAAAI,GAAA,WAAA,SAAAA,IAEkBhrD,KAAAirD,eAAiB,IAAIL,GAErB5qD,KAAAkrD,QAAU,IAAIv7C,IAmChC,OAjCCq7C,EAAA9qD,UAAAirD,OAAA,WACC,OAAOxrD,MAAMmqD,KAAK9pD,KAAKkrD,SACnBhjD,KAAG,SAAEkjD,GAAQ,OAAAA,EAAI,OAGtBJ,EAAA9qD,UAAAmrD,YAAA,WACC,OAAOrrD,KAAKirD,gBAGbD,EAAA9qD,UAAAmsC,UAAA,SAAU9jC,EAAcwjC,EAA0BC,OAE3Cqe,EAAW,IAAIM,GAASpiD,EAAOwjC,GACpCz2B,EAAS,IAAI80C,GAAgBC,EAAU9hD,EAAOyjC,GAE3B,KAAhBA,EACHhsC,KAAKkrD,QAAQh7C,OAAOm6C,EAAS70C,SAE7BxV,KAAKkrD,QAAQl7C,IAAIq6C,EAAS70C,QAASF,IAIrC01C,EAAA9qD,UAAAoV,OAAA,SAAO4D,WACAgyC,EAAUlrD,KAAKmrD,SAEjBG,EAAgB5oD,EAAOwW,OAE3B,IAAmB,IAAAqyC,EAAAxsB,EAAAmsB,GAAOM,EAAAD,EAAArpD,QAAAspD,EAAAppD,KAAAopD,EAAAD,EAAArpD,OAAE,CAC3BopD,EADcE,EAAArpD,MACYmT,OAAOg2C,qGAGlC,OAAOA,GAGTN,EAvCA,GCPA,IAAAS,GAAA,WAKA,SAAAA,KAMA,OAHCA,EAAAvrD,UAAAC,OAAA,SAAOgG,GACN,YADM,IAAAA,IAAAA,GAAA,GACC,IAAI6kD,wBAJZ1hD,EAAAA,aAMDmiD,EAXA,GCAaC,GAA0B,8CCOvC,SAAAC,KAuFA,OA3ECA,EAAAzrD,UAAAmc,UAAA,SAAUif,EAAsBmR,GAAhC,IAAAlmC,EAAAvG,KAEO4rD,EAAiBtwB,EAAOhmB,QAAM,SAAE/M,GAAiB,OAAAhC,EAAKslD,YAAYtjD,EAAMymB,kBAE9E,IAAK48B,GAA4C,IAA1BA,EAAejrD,QAAiC,IAAjB8rC,EAAM9rC,OAC3D,OAAO,SAGJwmD,EAAQ,IAAIx3C,IACfm8C,EAAW,IAAIn8C,IAGhBi8C,EAAeplD,SAAO,SAAE+B,OAEjBtH,EAAMsH,EAAM0/C,SAElBd,EAAMn3C,IAAI/O,EAAK,GACf6qD,EAAS97C,IAAI/O,EAAK,IAAI8qD,KAEtBxlD,EAAKylD,QAAQzjD,MAIdkkC,EAAMjmC,SAAO,SAAE6F,GAEdu/C,EAAeplD,SAAO,SAAE+B,OAEjBtH,EAAMsH,EAAM0/C,SACjB9lD,EAAQoG,EAAMqpB,SAASvlB,GAExB,GAAc,OAAVlK,QAA4B+D,IAAV/D,GAAiC,KAAVA,EAAc,CAE1D,GAAIoG,EAAMggD,cAAc5hD,EAAgBxB,OAAQ,KACzC8mD,EAAgB9E,EAAM/2C,IAAInP,GAChCkmD,EAAMn3C,IAAI/O,EAAKgrD,EAAgB,GAGhC,GAAI1jD,EAAMggD,cAAc5hD,EAAgBvB,UACnB0mD,EAAS17C,IAAInP,GACrBirD,IAAI/pD,GAIlBoE,EAAK4Y,UAAU5W,EAAOpG,SAIxBypD,EAAeplD,SAAO,SAAE+B,GAEvBhC,EAAK4lD,cAAc5jD,EAAOkkC,UAIvBgc,EAAe,IAAI94C,IAmBvB,OAjBAi8C,EAAeplD,SAAO,SAAE+B,OAEjBtH,EAAMsH,EAAMiN,QAAQA,QAEtB42C,EAAmB7lD,EAAK8lD,yBAAyB9jD,GAEjDA,EAAMggD,cAAc5hD,EAAgBxB,QACvCinD,EAAiBE,SAASnF,EAAM/2C,IAAInP,IAGjCsH,EAAMggD,cAAc5hD,EAAgBvB,WACvCgnD,EAAiBG,YAAaT,EAAS17C,IAAInP,GAAMoZ,MAGlDouC,EAAaz4C,IAAI/O,EAAKmrD,MAGhB3D,GAGTkD,KC9FA,kBAAA,SAAAa,KAaA,OARCA,EAAAtsD,UAAAosD,SAAA,SAASnqD,GACRnC,KAAKmnD,MAAQhlD,GAGdqqD,EAAAtsD,UAAAqsD,YAAA,SAAYpqD,GACXnC,KAAK8rD,SAAW3pD,GAGlBqqD,KCXA,IAAAC,GAAA,SAAAr/C,GAMC,SAAAq/C,EAAYC,EACTC,GADH,IAAApmD,EAEC6G,EAAAxM,KAAAZ,OAAOA,YACPuG,EAAKmmD,OAASA,EACdnmD,EAAKomD,MAAQA,IAGf,OAb6Ct/C,EAAAA,EAAAA,GAa7Co/C,EAbA,CAA6CD,uBCc5C,SAAAI,IAAA,IAAArmD,EACC6G,EAAAxM,KAAAZ,OAAOA,YAJSuG,EAAAmmD,OAAS,IAAI/8C,IACbpJ,EAAAomD,MAAQ,IAAIh9C,MAuD9B,OA1DkDtC,EAAAA,EAAAA,GASjDu/C,EAAA1sD,UAAA2rD,YAAA,SAAYzgC,GACX,OAAOA,IAAanmB,EAASlC,SAG9B6pD,EAAA1sD,UAAA8rD,QAAA,SAAQzjD,OAEDtH,EAAMsH,EAAM0/C,SAEd1/C,EAAMggD,cAAc5hD,EAAgBjB,SACvC1F,KAAK0sD,OAAO18C,IAAI/O,EAAK,GAGlBsH,EAAMggD,cAAc5hD,EAAgBhB,QACvC3F,KAAK2sD,MAAM38C,IAAI/O,EAAK,IAItB2rD,EAAA1sD,UAAAisD,cAAA,SAAc5jD,EAAckkC,KAG5BmgB,EAAA1sD,UAAAif,UAAA,SAAU5W,EAAcpG,OAEjB0qD,EAAe1qD,EACpBlB,EAAMsH,EAAM0/C,SACZ6E,EAAiB9sD,KAAK0sD,OAAOt8C,IAAInP,GACjC8rD,EAAgB/sD,KAAK2sD,MAAMv8C,IAAInP,GAE5B4rD,EACCtkD,EAAMggD,cAAc5hD,EAAgBjB,SACvC1F,KAAK0sD,OAAO18C,IAAI/O,EAAK6rD,EAAiB,GAGnCvkD,EAAMggD,cAAc5hD,EAAgBhB,QACvC3F,KAAK2sD,MAAM38C,IAAI/O,EAAK8rD,EAAgB,IAMvCH,EAAA1sD,UAAAmsD,yBAAA,SAAyB9jD,OAElBtH,EAAMsH,EAAM0/C,SAElB,OAAO,IAAIwE,GACVzsD,KAAK0sD,OAAOt8C,IAAInP,GAChBjB,KAAK2sD,MAAMv8C,IAAInP,yBAvDjBqI,EAAAA,mDA2DDsjD,GA1DkDjB,ICTlD,IAAAqB,GAAA,SAAA5/C,GAEC,SAAA4/C,WACC5/C,EAAAxM,KAAAZ,OAAOA,KAGT,OAN0CqN,EAAAA,EAAAA,GAM1C2/C,EANA,CAA0CR,mBCSzC,SAAAS,WACC7/C,EAAAxM,KAAAZ,OAAOA,KAoBT,OAvB+CqN,EAAAA,EAAAA,GAM9C4/C,EAAA/sD,UAAA2rD,YAAA,SAAYzgC,GACX,OAAOA,IAAanmB,EAASjC,MAG9BiqD,EAAA/sD,UAAA8rD,QAAA,SAAQzjD,KAGR0kD,EAAA/sD,UAAAisD,cAAA,SAAc5jD,EAAckkC,KAG5BwgB,EAAA/sD,UAAAif,UAAA,SAAU5W,EAAcpG,KAGxB8qD,EAAA/sD,UAAAmsD,yBAAA,SAAyB9jD,GACxB,OAAO,IAAIykD,wBArBZ1jD,EAAAA,mDAwBD2jD,GAvB+CtB,ICP/CuB,GAAA,SAAA9/C,GAQC,SAAA8/C,EAAYhwB,EACTiwB,EACAC,EACAC,EACAC,GAJH,IAAA/mD,EAKC6G,EAAAxM,KAAAZ,OAAOA,YACPuG,EAAK22B,IAAM32B,EAAKgnD,sBAAsBrwB,GACtC32B,EAAK4mD,IAAM5mD,EAAKgnD,sBAAsBJ,GACtC5mD,EAAK6mD,IAAM7mD,EAAKgnD,sBAAsBH,GACtC7mD,EAAK8mD,QAAU9mD,EAAKgnD,sBAAsBF,GAC1C9mD,EAAK+mD,OAAS/mD,EAAKgnD,sBAAsBD,KAe3C,OAjC4CjgD,EAAAA,EAAAA,GAqBnC6/C,EAAAhtD,UAAAqtD,sBAAR,SAA8BprD,GAC7B,OAAKA,GAAmB,IAAVA,EAIA,IAAVA,EACI,GAGC,EAAQqrD,QAAQ,GAPjB,MAUVN,EAjCA,CAA4CV,uBCgB3C,SAAAiB,IAAA,IAAAlnD,EACC6G,EAAAxM,KAAAZ,OAAOA,YAPSuG,EAAA22B,IAAM,IAAIvtB,IACVpJ,EAAA4mD,IAAM,IAAIx9C,IACVpJ,EAAA6mD,IAAM,IAAIz9C,IACVpJ,EAAA8mD,QAAU,IAAI19C,IACdpJ,EAAA+mD,OAAS,IAAI39C,MA4E/B,OAlFiDtC,EAAAA,EAAAA,GAYhDogD,EAAAvtD,UAAA2rD,YAAA,SAAYzgC,GACX,OAAOA,IAAanmB,EAASpC,QAG9B4qD,EAAAvtD,UAAA8rD,QAAA,SAAQzjD,OAEDtH,EAAMsH,EAAM0/C,SAElBjoD,KAAKk9B,IAAIltB,IAAI/O,EAAK,GAClBjB,KAAKmtD,IAAIn9C,IAAI/O,EAAKs9B,OAAOiM,kBACzBxqC,KAAKotD,IAAIp9C,IAAI/O,EAAK,IAGnBwsD,EAAAvtD,UAAAisD,cAAA,SAAc5jD,EAAckkC,OAErBxrC,EAAMsH,EAAM0/C,SAEd1/C,EAAMggD,cAAc5hD,EAAgBrB,UACvCtF,KAAKqtD,QAAQr9C,IAAI/O,EAAKjB,KAAKk9B,IAAI9sB,IAAInP,GAAOwrC,EAAM9rC,QAG7C4H,EAAMggD,cAAc5hD,EAAgBlB,SACvCzF,KAAKstD,OAAOt9C,IAAI/O,EAAKsH,EAAMqpB,SAAS6a,EAAM5vB,KAAKkqC,MAAMta,EAAM9rC,OAAS,OAItE8sD,EAAAvtD,UAAAif,UAAA,SAAU5W,EAAcpG,OAEjBurD,GAAevrD,EACpBlB,EAAMsH,EAAM0/C,SACZ0F,EAAc3tD,KAAKk9B,IAAI9sB,IAAInP,GAC3B2sD,EAAc5tD,KAAKmtD,IAAI/8C,IAAInP,GAC3B4sD,EAAc7tD,KAAKotD,IAAIh9C,IAAInP,IAExBsH,EAAMggD,cAAc5hD,EAAgBtB,MAAQkD,EAAMggD,cAAc5hD,EAAgBrB,WACnFtF,KAAKk9B,IAAIltB,IAAI/O,EAAK0sD,EAAcD,GAG7BnlD,EAAMggD,cAAc5hD,EAAgBpB,MACnCqoD,EAAcF,GACjB1tD,KAAKmtD,IAAIn9C,IAAI/O,EAAKysD,GAIhBnlD,EAAMggD,cAAc5hD,EAAgBnB,MACnCqoD,EAAcH,GACjB1tD,KAAKotD,IAAIp9C,IAAI/O,EAAKysD,IAMrBD,EAAAvtD,UAAAmsD,yBAAA,SAAyB9jD,OAElBtH,EAAMsH,EAAM0/C,SACjB/qB,EAAM30B,EAAMggD,cAAc5hD,EAAgBtB,KAAOrF,KAAKk9B,IAAI9sB,IAAInP,QAAOiF,EACrEinD,EAAM5kD,EAAMggD,cAAc5hD,EAAgBpB,KAAOvF,KAAKmtD,IAAI/8C,IAAInP,QAAOiF,EACrEknD,EAAM7kD,EAAMggD,cAAc5hD,EAAgBnB,KAAOxF,KAAKotD,IAAIh9C,IAAInP,QAAOiF,EACrEmnD,EAAU9kD,EAAMggD,cAAc5hD,EAAgBrB,SAAWtF,KAAKqtD,QAAQj9C,IAAInP,QAAOiF,EACjFonD,EAAS/kD,EAAMggD,cAAc5hD,EAAgBlB,QAAUzF,KAAKstD,OAAOl9C,IAAInP,QAAOiF,EAE/E,OAAO,IAAIgnD,GACVhwB,EACAiwB,EACAC,EACAC,EACAC,wBA/EFhkD,EAAAA,mDAmFDmkD,GAlFiD9B,ICRjD,IAAAmC,GAAA,SAAA1gD,GAEC,SAAA0gD,WACC1gD,EAAAxM,KAAAZ,OAAOA,KAGT,OAN4CqN,EAAAA,EAAAA,GAM5CygD,EANA,CAA4CtB,mBCS3C,SAAAuB,WACC3gD,EAAAxM,KAAAZ,OAAOA,KAoBT,OAvBiDqN,EAAAA,EAAAA,GAMhD0gD,EAAA7tD,UAAA2rD,YAAA,SAAYzgC,GACX,OAAOA,IAAanmB,EAASnC,QAG9BirD,EAAA7tD,UAAA8rD,QAAA,SAAQzjD,KAGRwlD,EAAA7tD,UAAAisD,cAAA,SAAc5jD,EAAckkC,KAG5BshB,EAAA7tD,UAAAif,UAAA,SAAU5W,EAAcpG,KAGxB4rD,EAAA7tD,UAAAmsD,yBAAA,SAAyB9jD,GACxB,OAAO,IAAIulD,wBArBZxkD,EAAAA,mDAwBDykD,GAvBiDpC,ICPjDqC,GAAA,SAAA5gD,GAEC,SAAA4gD,WACC5gD,EAAAxM,KAAAZ,OAAOA,KAGT,OAN6CqN,EAAAA,EAAAA,GAM7C2gD,EANA,CAA6CxB,mBCS5C,SAAAyB,WACC7gD,EAAAxM,KAAAZ,OAAOA,KAoBT,OAvBkDqN,EAAAA,EAAAA,GAMjD4gD,EAAA/tD,UAAA2rD,YAAA,SAAYzgC,GACX,OAAOA,IAAanmB,EAASrC,SAG9BqrD,EAAA/tD,UAAA8rD,QAAA,SAAQzjD,KAGR0lD,EAAA/tD,UAAAisD,cAAA,SAAc5jD,EAAckkC,KAG5BwhB,EAAA/tD,UAAAif,UAAA,SAAU5W,EAAcpG,KAGxB8rD,EAAA/tD,UAAAmsD,yBAAA,SAAyB9jD,GACxB,OAAO,IAAIylD,wBArBZ1kD,EAAAA,mDAwBD2kD,GAvBkDtC,ICLlDuC,GAAA,SAAA9gD,GAEC,SAAA8gD,EAAYhwC,EACQkuC,GADpB,IAAA7lD,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,+CAA6Cle,YAD7CuG,EAAA6lD,iBAAAA,IAOrB,OAVgE/+C,EAAAA,EAAAA,GAO/D6gD,EAAAhuD,UAAAslD,gBAAA,WACC,OAAOxlD,KAAKosD,kBAEd8B,EAVA,CAAgE1wB,EAAAA,gBCGhE,IAAA2wB,GAAA,WAWC,SAAAA,EAAYp+C,EACQq+C,GAAApuD,KAAAouD,YAAAA,EALZpuD,KAAAmG,SAAmB,EAEVnG,KAAAy2C,OAAS,IAAI9mC,IAI7B3P,KAAK+P,YAAcA,EA8CrB,OA3CCo+C,EAAAjuD,UAAAmc,UAAA,SAAUif,EAAsBpiB,GAE/B,IAAKlZ,KAAKmG,QACT,MAAO,OAGFkoD,EAAe,IAAI1+C,IAczB,OAZA3P,KAAKouD,YAAY5nD,SAAO,SAAE8nD,OAEnBlC,EAAmBkC,EAAKjyC,UAAUif,EAAQpiB,GAE5CkzC,GACHzsD,MAAMmqD,KAAKsC,EAAiBr+B,QACzBvnB,SAAO,SAAEvF,GACTotD,EAAar+C,IAAI/O,EAAKmrD,EAAiBh8C,IAAInP,UAK5CotD,EAAah0C,KAAO,EAChB,CACN,IAAI6zC,GAA2CluD,KAAK+P,YAAas+C,IAG3D,IAKTF,EAAAjuD,UAAA8vB,WAAA,SAAW7pB,GACVnG,KAAKmG,QAAUA,GAGhBgoD,EAAAjuD,UAAAgsD,IAAA,aAGAiC,EAAAjuD,UAAAquD,OAAA,aAGAJ,EAAAjuD,UAAAsuD,OAAA,aAGDL,EA3DA,GCPA,IAAAM,GAAA,WAWC,SAAAA,EAAqDL,GAAApuD,KAAAouD,YAAAA,EAOtD,OAJCK,EAAAvuD,UAAAC,OAAA,SAAO4P,GACN,OAAO,IAAIo+C,GAAmBp+C,EAAa/P,KAAKouD,kCAPjD9kD,EAAAA,sDAGkE3J,MAAKoB,WAAA,CAAA,CAAA6D,KAA1D6N,EAAAA,OAAMX,KAAA,CAAC45C,SAOrB+C,EAlBA,GCUA,SAAgBC,GAA6BC,GAC5C,MAAO,CACN1/C,QAASy8C,GACT/0B,SAAUg4B,EACVxyB,OAAO,GAIT,IAAayyB,GAAuB,CACnCF,GAA6B9B,IAC7B8B,GAA6BzB,IAC7ByB,GAA6BjB,IAC7BiB,GAA6BX,IAC7BW,GAA6BT,IAE7BQ,mBCfA,SAAAI,EAAoBzS,GAApB,IAAA71C,EACC6G,EAAAxM,KAAAZ,OAAOA,YADYuG,EAAA61C,0BAAAA,IAYrB,OAd0D/uC,EAAAA,EAAAA,GAMzDwhD,EAAA3uD,UAAAg7B,OAAA,SAAOnmB,GAEFA,aAAiB+vC,IACpB9kD,KAAKo8C,0BAA0BpsB,WAAWjb,EAAMqiB,aAAcriB,EAAMmQ,uCAVtE5b,EAAAA,sDAJQwyC,MAmBT+S,GAd0DzzB,EAAAA,uCCIzD,SAAA0zB,EAAoB1N,GAApB,IAAA76C,EACC6G,EAAAxM,KAAAZ,OAAOA,YADYuG,EAAA66C,6BAAAA,IAYrB,OAd6D/zC,EAAAA,EAAAA,GAM5DyhD,EAAA5uD,UAAAg7B,OAAA,SAAOnmB,GAEFA,aAAiBiwC,IACpBhlD,KAAKohD,6BAA6BpxB,WAAWjb,EAAMqiB,aAAcriB,EAAMmQ,uCAVzE5b,EAAAA,sDALQ23C,MAoBT6N,GAd6D1zB,EAAAA,uCCC5D,SAAA2zB,EAAoB1S,GAApB,IAAA91C,EACC6G,EAAAxM,KAAAZ,OAAOA,YADYuG,EAAA81C,+BAAAA,IAYrB,OAd+DhvC,EAAAA,EAAAA,GAM9D0hD,EAAA7uD,UAAAg7B,OAAA,SAAOnmB,GAEFA,aAAiBowC,IACpBnlD,KAAKq8C,+BAA+BrsB,WAAWjb,EAAMqiB,aAAcriB,EAAMmQ,uCAV3E5b,EAAAA,sDAJQ2yC,MAmBT8S,GAd+D3zB,EAAAA,oBCL/D,IAAA4zB,GAAA,WAEC,SAAAA,EAA6Bp5C,EACTwV,GADSprB,KAAA4V,GAAAA,EACT5V,KAAAorB,SAAAA,EAWrB,OARC4jC,EAAA9uD,UAAAsV,MAAA,WACC,OAAOxV,KAAK4V,GAAGJ,SAGhBw5C,EAAA9uD,UAAA8uB,YAAA,WACC,OAAOhvB,KAAKorB,UAGd4jC,EAdA,GCJA,IAAAC,GAAA,WAMA,SAAAA,KAaA,OAVCA,EAAA/uD,UAAA6F,QAAA,SAAQu1B,GAAR,IAAA/0B,EAAAvG,KACC,OAAOs7B,EAAOpzB,KAAG,SAAEK,GAClB,OAAOhC,EAAK2oD,WAAW3mD,OAIjB0mD,EAAA/uD,UAAAgvD,WAAR,SAAmB3mD,GAElB,OAAO,IAAIymD,GAAsBzmD,EAAMiN,QAASjN,EAAMymB,oCAXvD1lB,EAAAA,aAaD2lD,EAnBA,kBCYC,SAAAE,EAAoBC,EACTC,GADX,IAAA9oD,EAEC6G,EAAAxM,KAAAZ,OAAOA,YAFYuG,EAAA6oD,0BAAAA,EACT7oD,EAAA8oD,0BAAAA,IAeZ,OAlBuDhiD,EAAAA,EAAAA,GAOtD8hD,EAAAjvD,UAAAg7B,OAAA,SAAOnmB,GAEN,GAAIA,aAAiBsmB,GAAmB,KAEjCC,EAASt7B,KAAKqvD,0BAA0BtpD,QAAQgP,EAAMwmB,aAE5Dv7B,KAAKovD,0BAA0BltD,KAAK6S,EAAMmQ,iBAAkBoW,yBAd9DhyB,EAAAA,sDALQ0mC,UACAif,MAuBTE,GAlBuD/zB,EAAAA,oBCVvD,IAAAk0B,GAAA,WAaC,SAAAA,EAA6B56C,GAAA1U,KAAA0U,eAAAA,EAW9B,OARC46C,EAAApvD,UAAAqvD,sBAAA,SAAsBx/C,GAErB,OAAO/P,KAAK0U,eACNG,KACAS,EAAAA,QAAM,SAAEP,GAAuB,OAAAA,aAAiBwwC,MAChDjwC,EAAAA,QAAM,SAAEP,GAAuB,OAAAA,EAAMmQ,iBAAiBzP,aAAe1F,EAAY0F,oCAXxFnM,EAAAA,sDANqBqc,EAAAA,kBAoBtB2pC,EAxBA,GCAA,IAAAE,GAAA,WAUC,SAAAA,EAAY55C,EACT4O,EACAxB,EACAC,QAAA,IAAAA,IAAAA,EAAA,GACFjjB,KAAK4V,GAAKA,EACV5V,KAAKwkB,QAAUA,EACfxkB,KAAKgjB,SAAWA,EAChBhjB,KAAKijB,QAAUA,EA8BjB,OA3BCusC,EAAAtvD,UAAAkjB,QAAA,WACC,OAAOpjB,KAAKwkB,SAGbgrC,EAAAtvD,UAAAojB,WAAA,WACC,OAAOtjB,KAAKijB,SAGbusC,EAAAtvD,UAAAqjB,YAAA,WACC,OAAOvjB,KAAKgjB,UAGbwsC,EAAAtvD,UAAAuvD,YAAA,WACCzvD,KAAKijB,SAAW,GAGjBusC,EAAAtvD,UAAAwvD,YAAA,SAAY1sC,GACXhjB,KAAKgjB,SAAWA,GAGjBwsC,EAAAtvD,UAAAm+B,MAAA,eAEO7Z,EAAOpkB,EAAA,GAAQJ,KAAKwkB,SAE1B,OAAO,IAAIgrC,EAAiBxvD,KAAK4V,GAAI4O,EAASxkB,KAAKijB,UAGrDusC,EA/CA,GCIA,IAAAG,GAAA,SAAAviD,GAEC,SAAAuiD,EAAYzxC,EACQo5B,EACAC,GAFpB,IAAAhxC,EAGC6G,EAAAxM,KAAAZ,KAAMke,EAAa,4CAA0Cle,YAF1CuG,EAAA+wC,WAAAA,EACA/wC,EAAAgxC,UAAAA,IAWrB,OAf6DlqC,EAAAA,EAAAA,GAQ5DsiD,EAAAzvD,UAAAs3C,cAAA,WACC,OAAOx3C,KAAKs3C,YAGbqY,EAAAzvD,UAAAu3C,aAAA,WACC,OAAOz3C,KAAKu3C,WAEdoY,EAfA,CAA6DnyB,EAAAA,gBCA7D,IAAAoyB,GAAA,SAAAxiD,GAEC,SAAAwiD,EAAY1xC,EACQrG,GADpB,IAAAtR,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,yCAAuCle,YADvCuG,EAAAsR,OAAAA,IAOrB,OAV0DxK,EAAAA,EAAAA,GAOzDuiD,EAAA1vD,UAAAwjD,UAAA,WACC,OAAO1jD,KAAK6X,QAEd+3C,EAVA,CAA0DpyB,EAAAA,gBCK1D,IAAAqyB,GAAA,WAAA,SAAAA,IAES7vD,KAAAohB,SAAmB,EAEnBphB,KAAA8vD,SAAmB,EAInB9vD,KAAAkZ,SAAoC,GAGpClZ,KAAA+vD,iBAA4C,GAE5C/vD,KAAAgwD,eAA0C,GAqHnD,OAnHCH,EAAA3vD,UAAAqZ,UAAA,WACC,OAAOvZ,KAAKohB,SAGbyuC,EAAA3vD,UAAA+vD,UAAA,WACC,OAAOjwD,KAAK8vD,SAGbD,EAAA3vD,UAAA2sC,WAAA,SAAW1mC,GACVnG,KAAKohB,QAAUjb,GAGhB0pD,EAAA3vD,UAAAgwD,YAAA,SAAYn3C,GACX/Y,KAAKkZ,SAAWH,EAChB/Y,KAAKmwD,wBAGNN,EAAA3vD,UAAAyY,YAAA,WACC,OAAO3Y,KAAKkZ,UAGb22C,EAAA3vD,UAAAkwD,oBAAA,WACCpwD,KAAK+vD,iBAAgBrtD,EAAO1C,KAAKkZ,WAGlC22C,EAAA3vD,UAAAmwD,oBAAA,WACC,OAAOrwD,KAAK+vD,kBAGbF,EAAA3vD,UAAAowD,kBAAA,SAAkBv3C,GACjB/Y,KAAKgwD,eAAiBj3C,GAGvB82C,EAAA3vD,UAAAqwD,kBAAA,WACC,OAAOvwD,KAAKgwD,gBAGbH,EAAA3vD,UAAA8X,UAAA,SAAUy0B,EAAwB18B,GAGjC,YAHS,IAAA08B,IAAAA,EAAA,IACTzsC,KAAK6X,OAAS7X,KAAKwwD,aAAa/jB,GAEzBzsC,KAAKywD,yBAAyB1gD,IAGtC8/C,EAAA3vD,UAAAwwD,mBAAA,SAAmBjkB,EAAwB18B,GAG1C,YAHkB,IAAA08B,IAAAA,EAAA,IAClBzsC,KAAK6X,OAAS40B,EAEPzsC,KAAKywD,yBAAyB1gD,IAGtC8/C,EAAA3vD,UAAAwjD,UAAA,WACC,OAAO1jD,KAAK6X,QAGbg4C,EAAA3vD,UAAAywD,cAAA,WACC,OAAO3wD,KAAK6X,OAAOlX,QAOpBkvD,EAAA3vD,UAAA0wD,eAAA,SAAergB,EAAgBpuC,EAAYoG,EAAcwH,OAElD1D,EAAyBrM,KAAK6wD,eAAetgB,GAClDugB,EAAmBzkD,EAAKgyB,QAOzB,OALIhyB,IACHA,EAAKmY,QAAQjc,EAAM2qB,eAAiB/wB,EACpCkK,EAAKojD,eAGC,CACN,IAAIE,GAAwC5/C,EAAa+gD,EAAkBzkD,EAAKgyB,SAChFr+B,KAAKywD,yBAAyB1gD,KAIhC8/C,EAAA3vD,UAAA6wD,iBAAA,SAAiBxgB,EAAgBxgC,OAE1BR,EAAQvP,KAAKgxD,oBAAoBzgB,GAEvC,OAAIhhC,GAAS,GAEZvP,KAAK6X,OAAOwoB,OAAO9wB,EAAO,GAEnB,CAACvP,KAAKywD,yBAAyB1gD,KAGhC,IAGA8/C,EAAA3vD,UAAAswD,aAAR,SAAqB/jB,GACpB,OAAOA,EAAMvkC,KAAG,SAAEmE,EAAWkD,GAC5B,OAAO,IAAIigD,GAAiBtsC,EAAAA,sBAAsBC,WAAY9W,EAAMkD,OAI9DsgD,EAAA3vD,UAAAuwD,yBAAR,SAAiC1gD,GAChC,OAAO,IAAI6/C,GAAqC7/C,EAAa/P,KAAK6X,SAG3Dg4C,EAAA3vD,UAAA2wD,eAAR,SAAuBtgB,GACtB,OAAOvwC,KAAK6X,OAAO8G,MAAI,SAAEtS,GAA2B,OAAAA,EAAKuJ,KAAO26B,MAGzDsf,EAAA3vD,UAAA8wD,oBAAR,SAA4BzgB,GAC3B,OAAOvwC,KAAK6X,OAAOopB,WAAS,SAAE50B,GAA2B,OAAAA,EAAKuJ,KAAO26B,MAG9Dsf,EAAA3vD,UAAAiwD,qBAAR,WACCnwD,KAAKkZ,SAAS1S,SAAO,SAAEuS,EAAuBxJ,GAC7CwJ,EAAI22C,YAAYngD,OAInBsgD,EAlIA,GCTA,IAAAoB,GAAA,WAIA,SAAAA,KAWA,OARCA,EAAA/wD,UAAAunC,cAAA,WACC,OAAO,IAAIooB,IAGZoB,EAAA/wD,UAAAC,OAAA,WACC,OAAO,IAAI0vD,wBARZvmD,EAAAA,aAWD2nD,EAfA,GCGAC,GAAA,WAcC,SAAAA,EAAYt7C,EACTrN,EACAwyB,QAAA,IAAAA,IAAAA,GAAA,GANK/6B,KAAAmxD,KAAe,EAOtBnxD,KAAKoxD,SAAWx7C,EAChB5V,KAAKuI,MAAQA,EACbvI,KAAK+6B,UAAYA,EAqFnB,OAlFCm2B,EAAAhxD,UAAAsV,MAAA,WACC,OAAOxV,KAAKoxD,UAGbF,EAAAhxD,UAAAmxD,QAAA,WACC,OAAOrxD,KAAKmxD,MAGbD,EAAAhxD,UAAAkvB,SAAA,WACC,OAAOpvB,KAAKuI,OAGb2oD,EAAAhxD,UAAAykD,aAAA,WACC,OAAO3kD,KAAK+6B,WAGbm2B,EAAAhxD,UAAAoxD,gBAAA,WACCtxD,KAAK+6B,WAAa/6B,KAAK+6B,WAGxBm2B,EAAAhxD,UAAAqxD,aAAA,SAAax2B,GACZ/6B,KAAK+6B,UAAYA,GAGlBm2B,EAAAhxD,UAAAyyB,KAAA,SAAKzZ,GAAL,IAAA3S,EAAAvG,KAEC,OAAwB,IAApBkZ,EAASvY,OACLuY,EAGDA,EAASyZ,MAAI,SAAE6+B,EAA6BC,OAE9CC,EAAWnrD,EAAKw0B,UAAYx0B,EAAKgC,MAAM6/C,aAAaoJ,GAAajrD,EAAKgC,MAAM6/C,aAAaqJ,GAC5FE,EAAWprD,EAAKw0B,UAAYx0B,EAAKgC,MAAM6/C,aAAaqJ,GAAalrD,EAAKgC,MAAM6/C,aAAaoJ,GAE1F,OAAIjrD,EAAKgC,MAAMymB,gBAAkB/pB,EAASpC,OAClC0D,EAAKqrD,WAAWF,EAAUC,GACvBprD,EAAKgC,MAAMymB,gBAAkB/pB,EAASlC,QACzCwD,EAAKsrD,YAAYH,EAAUC,GACxBprD,EAAKgC,MAAMymB,gBAAkB/pB,EAASnC,OACzCyD,EAAKurD,WAAWJ,EAAUC,GACvBprD,EAAKgC,MAAMymB,gBAAkB/pB,EAASjC,KACzCuD,EAAKwrD,SAASL,EAAUC,GAExBprD,EAAKyrD,YAAYN,EAAUC,OAK7BT,EAAAhxD,UAAA4xD,WAAR,SAAmBG,EAAgBC,GAKlC,OAHmB,GAAKD,GAGNE,cAFJ,GAAKD,IAKZhB,EAAAhxD,UAAA0xD,WAAR,SAAmBQ,EAAgBC,GAKlC,OAHoBD,GACLC,GAKRnB,EAAAhxD,UAAA2xD,YAAR,SAAoBS,EAAqBC,OAGvCC,IAAgBD,EAEjB,QAHsBD,IAGEE,EAAe,EAAIA,GAAe,EAAI,GAGvDtB,EAAAhxD,UAAA6xD,SAAR,SAAiBU,EAAeC,GAE/B,OAAO,EAAO,GAGPxB,EAAAhxD,UAAA8xD,YAAR,SAAoBW,EAAQpzD,GAC3B,OAAO,GAGT2xD,EAxGA,GCHA,IAAA0B,GAAA,WAIC,SAAAA,EAAYh9C,GACX5V,KAAKoxD,SAAWx7C,EAMlB,OAHCg9C,EAAA1yD,UAAAsV,MAAA,WACC,OAAOxV,KAAKoxD,UAEdwB,EAXA,GCWA,IAAAC,GAAA,WAQC,SAAAA,EAAY1sD,EACTg2B,QADS,IAAAh2B,IAAAA,GAAA,QACT,IAAAg2B,IAAAA,GAAA,GAHcn8B,KAAAwkD,QAAU,IAAI70C,IAI9B3P,KAAKmG,QAAUA,EACfnG,KAAKm8B,MAAQA,EAgGf,OA7FC02B,EAAA3yD,UAAA4yD,UAAA,SAAUxrD,GAELA,QAA6BpB,IAAnBoB,EAAOnB,SAA4C,OAAnBmB,EAAOnB,UACpDnG,KAAKmG,QAAUmB,EAAOnB,SAGnBmB,QAAkCpB,IAAxBoB,EAAOyrD,cAAsD,OAAxBzrD,EAAOyrD,eACzD/yD,KAAKm8B,MAAQ70B,EAAOyrD,aACpB/yD,KAAKwkD,QAAQwO,UAKfH,EAAA3yD,UAAAwrB,OAAA,SAAOnjB,OAEA+nB,EAAU/nB,EAAMiN,QACrBkvC,EAAS1kD,KAAKwkD,QAAQp0C,IAAIkgB,EAAQ9a,SAE/BkvC,EACCA,EAAOC,eACVD,EAAO4M,kBAEPtxD,KAAKkQ,OAAOogB,GAGbtwB,KAAKksD,IAAI3jD,IAKXsqD,EAAA3yD,UAAAuvC,aAAA,SAAalnC,EAAcunB,OAEpBQ,EAAU/nB,EAAMiN,QACZxV,KAAKwkD,QAAQp0C,IAAIkgB,EAAQ9a,SAEnC,GAAIsa,IAAcC,GAAU/rB,KAC3BhE,KAAKkQ,OAAOogB,QACN,GAAIR,IAAcC,GAAU5rB,KAAO2rB,IAAcC,GAAU3rB,KAAM,CAEvEpE,KAAKkQ,OAAOogB,OAENyK,EAAYjL,IAAcC,GAAU5rB,IAE1CnE,KAAKksD,IAAI3jD,EAAOwyB,KAIlB83B,EAAA3yD,UAAAgsD,IAAA,SAAI3jD,EAAcwyB,QAAA,IAAAA,IAAAA,GAAA,GACjB/6B,KAAKizD,UAAU1qD,EAAMiN,QAAS,IAAI07C,GAAgB,IAAI0B,GAAS1vC,EAAAA,sBAAsBC,YAAa5a,EAAOwyB,KAG1G83B,EAAA3yD,UAAA+yD,UAAA,SAAU3iC,EAAkBo0B,GAEtB1kD,KAAKm8B,OACTn8B,KAAKwkD,QAAQwO,QAGdhzD,KAAKwkD,QAAQx0C,IAAIsgB,EAAQ9a,QAASkvC,IAGnCmO,EAAA3yD,UAAAgQ,OAAA,SAAOogB,GACNtwB,KAAKwkD,QAAQt0C,OAAOogB,EAAQ9a,UAG7Bq9C,EAAA3yD,UAAAsuD,OAAA,aAIAqE,EAAA3yD,UAAAyyB,KAAA,SAAKzZ,WACEsrC,EAAUxkD,KAAKmrD,SAEjB+H,EAAcxwD,EAAOwW,OAEzB,IAAmB,IAAAi6C,EAAAp0B,EAAAylB,GAAO4O,EAAAD,EAAAjxD,QAAAkxD,EAAAhxD,KAAAgxD,EAAAD,EAAAjxD,OAAE,CAC3BgxD,EADcE,EAAAjxD,MACUwwB,KAAKugC,qGAG9B,OAAOA,GAGRL,EAAA3yD,UAAAirD,OAAA,WAEC,OAAKnrD,KAAKmG,QAIHxG,MAAMmqD,KAAK9pD,KAAKwkD,SACnBt8C,KAAG,SAAEkjD,GAAQ,OAAAA,EAAI,MACjBz4B,MAAI,SAAE0gC,EAA4BC,GAClC,OAAOD,EAAUhC,UAAYiC,EAAUjC,aAEvCkC,UARI,IAUVV,EA3GA,GCXA,IAAAW,GAAA,WASC,SAAAA,EAAoBz0C,GAAA/e,KAAA+e,aAAAA,EAmBrB,OAhBCy0C,EAAAtzD,UAAA+e,gBAAA,WACC,OAAOjf,KAAK+e,cAGby0C,EAAAtzD,UAAAuzD,UAAA,SAAU7oB,GAEL5qC,KAAK+e,aAAape,OAAS,GAE1BX,KAAK+e,aAAa,KAAO6rB,EAC5B5qC,KAAK+e,aAAe,GAKtB/e,KAAK+e,aAAe,CAAC6rB,IAEvB4oB,EA5BA,GCAA,IAAAE,GAAA,WAEC,SAAAA,EAAoBlzC,EACTC,GADSzgB,KAAAwgB,IAAAA,EACTxgB,KAAAygB,OAAAA,EAmBZ,OAhBCizC,EAAAxzD,UAAAyzD,aAAA,SAAaxtD,GACZnG,KAAKwgB,IAAMra,GAGZutD,EAAAxzD,UAAA0zD,gBAAA,SAAgBztD,GACfnG,KAAKygB,OAASta,GAGfutD,EAAAxzD,UAAA4gB,cAAA,WACC,OAAO9gB,KAAKwgB,KAGbkzC,EAAAxzD,UAAA6gB,iBAAA,WACC,OAAO/gB,KAAKygB,QAGdizC,EAtBA,GCAA,IAAAG,GAAA,WAwBC,SAAAA,EAAoBrrD,EACTkX,GADS1f,KAAAwI,MAAAA,EACTxI,KAAA0f,OAAAA,EAnBH1f,KAAAu9C,aAAe,GAEfv9C,KAAA8zD,YAAc,GAId9zD,KAAA+zD,QAAkB,EAElB/zD,KAAAuf,gBAA0B,EAE1Bvf,KAAAsf,cAAwB,EAExBtf,KAAA8f,aAAmC,IAAI4zC,IAAmB,GAAM,GAEhE1zD,KAAA8I,MAAqBC,EAAYnF,OAEjC5D,KAAAkJ,YAAiCmqC,GAAkBnvC,IAI1DlE,KAAKg0D,2BAsFP,OAnFCH,EAAA3zD,UAAAsf,eAAA,WACC,OAAOxf,KAAKkJ,aAGb2qD,EAAA3zD,UAAA6pC,UAAA,SAAUrqB,GACT1f,KAAK0f,OAASA,EAEd1f,KAAKg0D,4BAGNH,EAAA3zD,UAAA6oC,SAAA,SAASjgC,GACR9I,KAAK8I,MAAQA,GAGd+qD,EAAA3zD,UAAA8oC,eAAA,SAAeT,GACdvoC,KAAKkJ,YAAcq/B,GAGpBsrB,EAAA3zD,UAAA6f,SAAA,WACC,OAAO/f,KAAK8I,OAGb+qD,EAAA3zD,UAAAggB,SAAA,WACC,OAAOlgB,KAAKwI,OAGbqrD,EAAA3zD,UAAA8f,UAAA,WACC,OAAOhgB,KAAK0f,QAGbm0C,EAAA3zD,UAAA+f,mBAAA,WACC,OAAOjgB,KAAK0f,QAIbm0C,EAAA3zD,UAAAmgB,gBAAA,WACC,OAAOrgB,KAAK8f,cAGb+zC,EAAA3zD,UAAAyzD,aAAA,SAAaxtD,GACZnG,KAAKqgB,kBAAkBszC,aAAaxtD,IAGrC0tD,EAAA3zD,UAAA0zD,gBAAA,SAAgBztD,GACfnG,KAAKqgB,kBAAkBuzC,gBAAgBztD,IAGxC0tD,EAAA3zD,UAAA+zD,gBAAA,SAAgB9tD,GACfnG,KAAKsf,aAAenZ,GAGrB0tD,EAAA3zD,UAAAg0D,kBAAA,SAAkB/tD,GACjBnG,KAAKuf,eAAiBpZ,GAGvB0tD,EAAA3zD,UAAAigB,sBAAA,WACC,OAAOngB,KAAKsf,cAGbu0C,EAAA3zD,UAAAkgB,wBAAA,WACC,OAAOpgB,KAAKuf,gBAGLs0C,EAAA3zD,UAAAi0D,gBAAR,WACC,OAAOn0D,KAAKu9C,cAGLsW,EAAA3zD,UAAAk0D,eAAR,WACC,OAAOp0D,KAAK8zD,aAGLD,EAAA3zD,UAAA8zD,yBAAR,WAEMh0D,KAAK0f,QAIT1f,KAAK+zD,QAAS,EAGf/zD,KAAK2f,gBAAkB3f,KAAK0f,OAAS1f,KAAKm0D,kBAAoBn0D,KAAKo0D,kBANlEp0D,KAAK+zD,QAAS,GASjBF,EAhHA,GCKA,IAAAQ,GAAA,WAAA,SAAAA,IAESr0D,KAAAs0D,aAA6B,GAwEtC,OApECD,EAAAn0D,UAAAq0D,gBAAA,SAAgBj5B,EAAsBzJ,GAErC,GAAKA,EAAL,KAKI2iC,EACHl5B,EAAOhmB,QAAM,SAAE/M,GACd,OAAOA,EAAMymB,gBAAkB/pB,EAASnC,UAGV,IAA5B0xD,EAAiB7zD,SAIrBX,KAAKs0D,aAAeE,EAEpBx0D,KAAK6xB,aAAeA,QAfnB7xB,KAAKs0D,aAAe,IAkBtBD,EAAAn0D,UAAAu0D,oBAAA,WACCz0D,KAAKs0D,aAAe,IAGrBD,EAAAn0D,UAAA4uC,OAAA,SAAO51B,WAEN,GAAwB,IAApBA,EAASvY,QAA6C,IAA7BX,KAAKs0D,aAAa3zD,OAC9C,OAAOuY,EAKR,QAFIw7C,EAAgB,IAAI3I,IAEfvrD,EAAI,EAAGA,EAAI0Y,EAASvY,OAAQH,GAAK,MAEzC,IAAkB,IAAAs+B,GAAA61B,OAAA,EAAA51B,EAAA/+B,KAAKs0D,eAAYt1B,EAAAF,EAAA58B,QAAA88B,EAAA58B,KAAA48B,EAAAF,EAAA58B,OAAE,CAAhC,IAAIqG,EAAKy2B,EAAA78B,MAETnC,KAAKuqD,aAAarxC,EAAS1Y,GAAI+H,IAClCmsD,EAAcxI,IAAIhzC,EAAS1Y,sGAK9B,OAAOb,MAAMmqD,KAAK4K,IAGXL,EAAAn0D,UAAAqqD,aAAR,SAAqBl+C,EAAwB9D,OACtCpG,EAAQoG,EAAM+/C,eAAej8C,GAEnC,MAAqB,iBAAVlK,GACHA,EAAMuoD,cAAct4B,QAAQpyB,KAAK6xB,aAAa64B,gBAAkB,GAMjE2J,EAAAn0D,UAAAsqD,aAAR,SAAqBn+C,EAAwB9D,GAG5C,OAFoBA,EAAMqpB,SAASvlB,GAEdrM,KAAK6xB,cAGnBwiC,EAAAn0D,UAAAuqD,cAAR,SAAsBp+C,EAAwB9D,GAG7C,OAFqBA,EAAMqpB,SAASvlB,KAEZrM,KAAK6xB,cAG/BwiC,EA1EA,GCAA,IAAAO,GAAA,SAAAxnD,GAEC,SAAAwnD,EAAY12C,EACQ8I,GADpB,IAAAzgB,EAEC6G,EAAAxM,KAAAZ,KAAMke,EAAa,+CAA6Cle,YAD7CuG,EAAAygB,cAAAA,IAQrB,OAXgE3Z,EAAAA,EAAAA,GAO/DunD,EAAA10D,UAAAwlD,iBAAA,WACC,OAAO1lD,KAAKgnB,eAGd4tC,EAXA,CAAgEp3B,EAAAA,gBCChE,IAAAq3B,GAAA,SAAAznD,GAEC,SAAAynD,EAAY9kD,EACQxF,EACA+wB,GAFpB,IAAA/0B,EAGC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,+BAA6B/P,YAF7BuG,EAAAgE,QAAAA,EACAhE,EAAA+0B,OAAAA,IAWrB,OAfgDjuB,EAAAA,EAAAA,GAQ/CwnD,EAAA30D,UAAA80B,WAAA,WACC,OAAOh1B,KAAKuK,SAGbsqD,EAAA30D,UAAAq7B,UAAA,WACC,OAAOv7B,KAAKs7B,QAEdu5B,EAfA,CAAgDr3B,EAAAA,mCC6C/C,SAAAs3B,EAAY/kD,EACToU,EACAF,EACA8wC,EACAjzC,EACAkzC,EACAC,EACAC,EACAC,EACAC,EACAjzC,GAVH,IAAA5b,EAWC6G,EAAAxM,KAAAZ,KAAM+P,EAAa,uBAAqB/P,YACxCuG,EAAK4d,gBAAkBA,EACvB5d,EAAK0d,mBAAqBA,EAC1B1d,EAAKwuD,cAAgBA,EACrBxuD,EAAKub,kBAAoBA,EACzBvb,EAAKyuD,mBAAqBA,EAC1BzuD,EAAK0uD,iBAAmBA,EACxB1uD,EAAK8uD,cAAgBH,EACrB3uD,EAAK4uD,cAAgBA,EACrB5uD,EAAK6uD,gBAAkBA,EACvB7uD,EAAK4b,OAASA,IA8QhB,OAzTwC9U,EAAAA,EAAAA,GA8CvCynD,EAAA50D,UAAAoiB,qBAAA,WACC,OAAOtiB,KAAK8hB,mBAGbgzC,EAAA50D,UAAAg0C,sBAAA,SAAsB/tC,GAMrB,OAJAnG,KAAKg1D,mBAAmBhlC,WAAW7pB,GAEnCnG,KAAKs1D,kBAEEt1D,KAAKokC,aAGb0wB,EAAA50D,UAAA8X,UAAA,SAAUy0B,GAQT,OANAzsC,KAAKkiC,SACJliC,KAAK+0D,cAAc/8C,UAAUy0B,EAAOzsC,KAAKwV,UAG1CxV,KAAKs1D,kBAEEt1D,KAAKokC,aAGb0wB,EAAA50D,UAAA4sC,SAAA,SAASyoB,GAAT,IAAAhvD,EAAAvG,KAEOuwC,EAASglB,EAAW/kB,YACzBlgB,EAAUilC,EAAW9kB,mBACrBloC,EAAQvI,KAAKo1D,gBAAgBhmC,SAAQ,GACrCjtB,EAAQozD,EAAW3jC,WAQpB,OANuB5xB,KAAK+0D,cAAcnE,eAAergB,EAAQpuC,EAAOoG,EAAOvI,KAAKwV,SAErEhP,SAAO,SAAElE,GAAM,OAAAiE,EAAK27B,SAAS5/B,MAE5CtC,KAAKs1D,kBAEEt1D,KAAKokC,aAGb0wB,EAAA50D,UAAA6pC,UAAA,SAAUrqB,GACT1f,KAAKqiB,YAAY0nB,UAAUrqB,OAErB8B,EAAiBxhB,KAAKqiB,YAAYpC,qBAExCjgB,KAAK8hB,kBAAkBulC,kBAAkB7lC,GAEzCxhB,KAAKw1D,uCAGNV,EAAA50D,UAAAu1D,aAAA,SAAavzC,GACZliB,KAAKikB,mBAAqB/B,GAG3B4yC,EAAA50D,UAAAovC,kBAAA,SAAkBtsB,GACjBhjB,KAAK8hB,kBAAkBwtB,kBAAkBtsB,GACzChjB,KAAKw1D,uCAGNV,EAAA50D,UAAAkiB,aAAA,WACC,OAAOpiB,KAAKikB,oBAGb6wC,EAAA50D,UAAA0oC,UAAA,SAAUzmB,GACTniB,KAAKmiB,OAASA,GAGf2yC,EAAA50D,UAAAmiB,UAAA,WACC,OAAOriB,KAAKmiB,QAGb2yC,EAAA50D,UAAAwV,UAAA,WACC,OAAO1V,KAAKmkB,iBAGb2wC,EAAA50D,UAAAw1D,aAAA,SAAapuD,GACZtH,KAAKmkB,gBAAgB6iB,OAAO1/B,GAC5BtH,KAAKs1D,mBAGNR,EAAA50D,UAAA2W,UAAA,SAAU7K,GACThM,KAAKmkB,gBAAkBnY,EACvBhM,KAAKs1D,mBAGNR,EAAA50D,UAAA8W,SAAA,WAEChX,KAAKmkB,gBAAgBnN,WAErBhX,KAAKs1D,mBAGNR,EAAA50D,UAAA+W,SAAA,WACCjX,KAAKmkB,gBAAgBlN,WACrBjX,KAAKs1D,mBAGNR,EAAA50D,UAAA6W,eAAA,SAAepN,GAAf,IAAApD,EAAAvG,KAWC,OATqBA,KAAKmkB,gBAAgBpN,eAAepN,GAG5CnD,SAAO,SAAEuO,GACrBxO,EAAK27B,SAASntB,MAGf/U,KAAKs1D,kBAEEt1D,KAAKokC,aAGb0wB,EAAA50D,UAAAyY,YAAA,WACC,OAAO3Y,KAAK+0D,cAAcxE,qBAG3BuE,EAAA50D,UAAAoZ,UAAA,WACC,OAAOtZ,KAAK+0D,eAGbD,EAAA50D,UAAAmkD,aAAA,SAAa95C,GACZvK,KAAKo1D,gBAAgBxlB,WAAWrlC,OAE1B+wB,EAASt7B,KAAKo1D,gBAAgBxL,eAMpC,OAJA5pD,KAAKkiC,SACJ,IAAI2yB,GAA2B70D,KAAKwV,QAASjL,EAAS+wB,IAGhDt7B,KAAKokC,aAGb0wB,EAAA50D,UAAAqvC,iBAAA,SAAiBjoC,GAChBtH,KAAKi1D,iBAAiBnC,UAAUxrD,IAGjCwtD,EAAA50D,UAAAsvC,WAAA,SAAWlf,OAEJ/nB,EAAQvI,KAAKo1D,gBAAgBhmC,SAASkB,GAM5C,OAJAtwB,KAAKi1D,iBAAiBvpC,OAAOnjB,GAE7BvI,KAAKs1D,kBAEEt1D,KAAKi1D,iBAAiB9J,UAG9B2J,EAAA50D,UAAAuvC,aAAA,SAAanf,EAAkBR,OAExBvnB,EAAQvI,KAAKo1D,gBAAgBhmC,SAASkB,GAM5C,OAJAtwB,KAAKi1D,iBAAiBxlB,aAAalnC,EAAOunB,GAE1C9vB,KAAKs1D,kBAEEt1D,KAAKi1D,iBAAiB9J,UAG9B2J,EAAA50D,UAAAwvC,gBAAA,SAAgBpoC,GACftH,KAAKq1D,cAAchK,cAAc3b,gBAAgBpoC,IAGlDwtD,EAAA50D,UAAAyuC,mBAAA,SAAmBrnC,GAClBtH,KAAKq1D,cAAchK,cAAc1c,mBAAmBrnC,IAGrDwtD,EAAA50D,UAAAyvC,sBAAA,SAAsBroC,GACrBtH,KAAKq1D,cAAchK,cAAc1b,sBAAsBroC,IAGxDwtD,EAAA50D,UAAAolD,aAAA,SAAah1B,EAAkByb,EAA0BC,OAElDzjC,EAAQvI,KAAKo1D,gBAAgBhmC,SAASkB,GAI5C,YAAcpqB,IAAVqC,EACI,IAGRvI,KAAKq1D,cAAchpB,UAAU9jC,EAAOwjC,EAAkBC,GAEtDhsC,KAAKs1D,kBAEE,KAGRR,EAAA50D,UAAAq0D,gBAAA,SAAgBzmB,OAETxS,EAASt7B,KAAKo1D,gBAAgBxL,eAMpC,OAJA5pD,KAAKm1D,cAAcZ,gBAAgBj5B,EAAQwS,GAE3C9tC,KAAKs1D,kBAEE,IAGRR,EAAA50D,UAAAy1D,mBAAA,WAMC,OAJA31D,KAAKm1D,cAAcV,sBAEnBz0D,KAAKs1D,kBAEE,IAGAR,EAAA50D,UAAAo1D,gBAAR,WAAA,IAAA/uD,EAAAvG,KAEC,GAAKA,KAAK+0D,cAAcrR,aAAgB1jD,KAAKmkB,gBAA7C,CAKAnkB,KAAK+0D,cAAc7E,YAAYlwD,KAAK+0D,cAAcrR,aAGlD1jD,KAAK+0D,cAAc7E,YAAYlwD,KAAKq1D,cAAc//C,OAAOtV,KAAK+0D,cAAcp8C,oBAGtEi9C,EAAmB51D,KAAKm1D,cAAcrmB,OAAO9uC,KAAK+0D,cAAcp8C,eACtE3Y,KAAK+0D,cAAc7E,YAAY0F,OAGzBC,EAAO71D,KAAKi1D,iBAAiBtiC,KAAK3yB,KAAK+0D,cAAcp8C,eAC3D3Y,KAAK+0D,cAAc7E,YAAY2F,GAG/B71D,KAAK+0D,cAAc3E,sBAEnBpwD,KAAKmkB,gBAAgB+iB,cAAclnC,KAAK+0D,cAAc1E,sBAAsB1vD,QAE5EX,KAAKkiC,SAAS,IAAI0yB,GAA2C50D,KAAKwV,QAASqgD,IAGjD71D,KAAKg1D,mBAAmB34C,UACjDrc,KAAKo1D,gBAAgBxL,eACrB5pD,KAAK+0D,cAAcp8C,eAGFnS,SAAO,SAAEsvD,GAC1BvvD,EAAK27B,SAAS4zB,MAIf91D,KAAK+0D,cAAc7E,YAAYlwD,KAAKmkB,gBAAgBzI,OAAO1b,KAAK+0D,cAAcp8C,gBAE9E3Y,KAAK8hB,kBAAkBolB,cAAclnC,KAAK+0D,cAAcp8C,cAAchY,QAEtEX,KAAKw1D,wCAGEV,EAAA50D,UAAAs1D,oCAAR,WAEC,GAAIx1D,KAAK8hB,kBAAkBpU,YAAa,KAEjCm5C,EAAQ7mD,KAAK8hB,kBAAkB8kC,WAErC5mD,KAAK+0D,cAAczE,kBAClBtwD,KAAK+0D,cAAcp8C,cAAcgD,MAAMkrC,EAAMxrC,WAAYwrC,EAAMvrC,gBAGhEtb,KAAK+0D,cAAczE,kBAClBtwD,KAAK+0D,cAAcp8C,yDA9RGhD,UACL+wB,UACG8sB,UACL3D,UACIvJ,UACC6H,UACF0E,UACA7H,UACHqJ,UACE3K,UACTmK,MAhCCiB,EAAkBh0D,EAAA,CAD9BoiC,EAAAA,qCAuByBvtB,GACL+wB,GACG8sB,GACL3D,GACIvJ,GACC6H,GACF0E,GACA7H,GACHqJ,GACE3K,GACTmK,MAhCCiB,IAA2B1xB,EAAAA,WC7BxC,IAAA2yB,GAAA,WAKA,SAAAA,KAOA,OAJCA,EAAA71D,UAAAC,OAAA,WACC,OAAO,IAAI0zD,wBAJZvqD,EAAAA,aAODysD,EAZA,GCAAC,GAAA,WAKA,SAAAA,KAOA,OAJCA,EAAA91D,UAAAC,OAAA,WACC,OAAO,IAAIqzD,GAAmB,yBAJ/BlqD,EAAAA,aAOD0sD,EAZA,GCAAC,GAAA,WAIA,SAAAA,KAOA,OAJCA,EAAA/1D,UAAAC,OAAA,WACC,OAAO,IAAIk0D,wBAJZ/qD,EAAAA,aAOD2sD,EAXA,kBCoBC,SAAAC,EAA6BC,EACTC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARpB,IAAApwD,EASC6G,EAAAxM,KAAAZ,OAAOA,YATqBuG,EAAA4vD,uBAAAA,EACT5vD,EAAA6vD,qBAAAA,EACA7vD,EAAA8vD,0BAAAA,EACA9vD,EAAA+vD,yBAAAA,EACA/vD,EAAAgwD,0BAAAA,EACAhwD,EAAAiwD,qBAAAA,EACAjwD,EAAAkwD,qBAAAA,EACAlwD,EAAAmwD,uBAAAA,EACAnwD,EAAAowD,uBAAAA,IAgCrB,OA1C+CtpD,EAAAA,EAAAA,GAc9C6oD,EAAAh2D,UAAAC,OAAA,SAAO4P,OAEA/D,EAAShM,KAAKm2D,uBAAuB1uB,gBAC1Cn9B,EAAStK,KAAKo2D,qBAAqB3uB,gBACnC3lB,EAAoB9hB,KAAKs2D,yBAAyBn2D,SAClD8jB,EAAqBjkB,KAAKq2D,0BAA0Bl2D,SAE/Cy2D,EAAoC,IAAI/D,GAC7CgE,EAAkB72D,KAAKw2D,qBAAqBr2D,QAAO,GACnD22D,EAAiB92D,KAAK02D,uBAAuBv2D,SAC7C60D,EAAqBh1D,KAAKu2D,0BAA0Bp2D,OAAO4P,GAC3DoS,EAASniB,KAAK22D,uBAAuBx2D,SACrCg1D,EAAgBn1D,KAAKy2D,qBAAqBt2D,SAE3C,OAAO,IAAI20D,GAAmB/kD,EAC7B/D,EACAiY,EACA3Z,EACAwX,EACAkzC,EACA4B,EACAC,EACA1B,EACA2B,EACA30C,wBAvCF7Y,EAAAA,sDAfQk+B,UACAypB,UASA+E,UARAzO,UACAkH,UACAhD,UAOAwK,UANA9L,UAIA4L,MAiDTG,GA1C+Ca,EAAAA,kBClB/C,IAAAC,GAAA,WAcC,SAAAA,EAAoBzS,EACT/gB,GADSxjC,KAAAukD,6BAAAA,EACTvkD,KAAAwjC,qBAAAA,EAkBZ,OAfCwzB,EAAA92D,UAAA2jC,WAAA,WACC,OAAOztB,IAGR4gD,EAAA92D,UAAA+jC,gBAAA,SAAgBgzB,EAAwCvzB,OAEjDj6B,EAAei6B,EAAQrtB,kBAE7B4gD,EAAmBvB,aAAajsD,IAGjCutD,EAAA92D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAI2f,GAAe5f,EAAQxe,wCAnB9D5b,EAAAA,sDAPQq5C,UAFgB7e,EAAAA,wBA+BzBkzB,EAjCA,GCAA,IAAAE,GAAA,WAWC,SAAAA,EAA6B1zB,GAAAxjC,KAAAwjC,qBAAAA,EAiB9B,OAdC0zB,EAAAh3D,UAAA2jC,WAAA,WACC,OAAOptB,IAGRygD,EAAAh3D,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,GAG9CvkB,EAAUnI,YAGXkgD,EAAAh3D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIiT,GAAclT,EAAQxe,wCAjB7D5b,EAAAA,sDANwBw6B,EAAAA,wBA0BzBozB,EA5BA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAAoB3zB,GAAAxjC,KAAAwjC,qBAAAA,EAgBrB,OAbC2zB,EAAAj3D,UAAA2jC,WAAA,WACC,OAAOntB,IAGRygD,EAAAj3D,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,GAE9CnuB,EAAU0B,YAGXkgD,EAAAj3D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIkT,GAAcnT,EAAQxe,wCAhB7D5b,EAAAA,sDAPwBw6B,EAAAA,wBA0BzBqzB,EA5BA,qBCcC,SAAAC,EAAoB7S,EACP/gB,GADOxjC,KAAAukD,6BAAAA,EACPvkD,KAAAwjC,qBAAAA,EAuDd,OApDC4zB,EAAAl3D,UAAA2jC,WAAA,WACC,OAAOttB,IAGR6gD,EAAAl3D,UAAA+jC,gBAAA,SAAgBgzB,EAAwCvzB,OAEjD/5B,EAAW+5B,EAAQltB,cAEzBygD,EAAmBlgD,eAAepN,IAGnCytD,EAAAl3D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,OAE5CxK,EAAkB/Z,EAAUilB,YAElC,EAAyB59B,SAAO,SAAEuO,GACjC,EAAemJ,YAAciB,EAAU3J,WAGxCxV,KAAK6kC,uBAAuB3L,EAAiBwK,IAGtC0zB,EAAAl3D,UAAA2kC,uBAAR,SAA+BV,EAAuCT,eAErE,IAAkB,IAAA2zB,EAAAt4B,EAAAoF,GAAMmzB,EAAAD,EAAAn1D,QAAAo1D,EAAAl1D,KAAAk1D,EAAAD,EAAAn1D,OAAE,CAArB,IAAIq1D,EAAKD,EAAAn1D,MACbnC,KAAKw3D,sBAAsBD,EAAO7zB,uGAI5B0zB,EAAAl3D,UAAAs3D,sBAAR,SAA8BziD,EAAuB2uB,GAEpD,OAAQ3uB,EAAMqkB,WACb,IAAK,gCAEEq+B,EAAmB,IAAI3gB,GAAiBpT,EAAQxe,kBAEtDllB,KAAKwjC,qBAAqBG,QAAQ8zB,GAElC,MAED,IAAK,oCAEEC,EAAuB,IAAI3gB,GAAqBrT,EAAQxe,kBAE9DllB,KAAKwjC,qBAAqBG,QAAQ+zB,yBAnDrCpuD,EAAAA,sDAPQq5C,UAFgC7e,EAAAA,wBAoEzCszB,SCvDMp7B,GAAmB,CACxBrlB,IAGKslB,GAAgB,CACrB/mB,IAGYyiD,GAAqBj1D,EAC9BqjC,EAAAA,aAAaE,uBAAuB+wB,GAAyB,sBAC7DjxB,EAAAA,aAAaE,uBAAuBixB,GAAwB,sBAC5DnxB,EAAAA,aAAaE,uBAAuBkxB,GAAwB,sBAC5DpxB,EAAAA,aAAaE,uBAAuBmxB,GAA8B,uBAGzDQ,GAAel1D,EACxBs5B,GACAC,GAAa,CAEhBuL,GACAxmB,GAEA7J,GACApB,GACAihC,KCvCD6gB,GAAA,WAYC,SAAAA,EAAoBr0B,GAAAxjC,KAAAwjC,qBAAAA,EAmBrB,OAhBCq0B,EAAA33D,UAAA2jC,WAAA,WACC,OAAOsE,IAGR0vB,EAAA33D,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCv9B,EAAUu9B,EAAQh2B,YACdyR,EAAUkD,YAEb4xC,gBAAgB9tD,IAGxB0xD,EAAA33D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIuf,GAA2Bxf,EAAQxe,wCAnB1E5b,EAAAA,sDAPiCw6B,EAAAA,wBA6BlC+zB,EA/BA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAAoBt0B,GAAAxjC,KAAAwjC,qBAAAA,EAkBrB,OAfCs0B,EAAA53D,UAAA2jC,WAAA,WACC,OAAOuE,IAGR0vB,EAAA53D,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCvhB,EAAShD,EAAUkD,YACxBlc,EAAUu9B,EAAQh2B,YAEnByU,EAAO+xC,kBAAkB/tD,IAG1B2xD,EAAA53D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIsf,GAA6Bvf,EAAQxe,wCAnB5E5b,EAAAA,sDAPwBw6B,EAAAA,wBA4BzBg0B,EA9BA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAAoBxT,EACT/gB,GADSxjC,KAAAukD,6BAAAA,EACTvkD,KAAAwjC,qBAAAA,EAmBZ,OAhBCu0B,EAAA73D,UAAA2jC,WAAA,WACC,OAAOwE,IAGR0vB,EAAA73D,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExCvhB,EAAS5M,EAAU8M,YACxBvZ,EAAQ46B,EAAQ3jB,WAEjBoC,EAAO4mB,SAASjgC,IAGjBivD,EAAA73D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIqf,GAAoBtf,EAAQxe,wCApBnE5b,EAAAA,sDALQq5C,UAFyB7e,EAAAA,wBA8BlCi0B,EAhCA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAAoBx0B,GAAAxjC,KAAAwjC,qBAAAA,EAmBrB,OAhBCw0B,EAAA93D,UAAA2jC,WAAA,WACC,OAAO6E,IAGRsvB,EAAA93D,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExCvhB,EAAS5M,EAAU8M,YACxBlc,EAAUu9B,EAAQh2B,YAEnByU,EAAOyxC,gBAAgBztD,IAGxB6xD,EAAA93D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIyf,GAA+B1f,EAAQxe,wCAnB9E5b,EAAAA,sDAPwBw6B,EAAAA,wBA6BzBk0B,EA/BA,GCAA,IAAAC,GAAA,WAaC,SAAAA,EAAoB1T,EACT/gB,GADSxjC,KAAAukD,6BAAAA,EACTvkD,KAAAwjC,qBAAAA,EAmBZ,OAhBCy0B,EAAA/3D,UAAA2jC,WAAA,WACC,OAAO4E,IAGRwvB,EAAA/3D,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCvhB,EAAShD,EAAUkD,YACxBlc,EAAUu9B,EAAQh2B,YAEnByU,EAAOwxC,aAAaxtD,IAGrB8xD,EAAA/3D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIwf,GAA4Bzf,EAAQxe,wCApB3E5b,EAAAA,sDANQq5C,UAFgB7e,EAAAA,wBA+BzBm0B,EAjCA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAAoB10B,GAAAxjC,KAAAwjC,qBAAAA,EAoBrB,OAjBC00B,EAAAh4D,UAAA2jC,WAAA,WACC,OAAOyE,IAGR4vB,EAAAh4D,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAGxCvhB,EAAS5M,EAAU8M,YACxBkmB,EAAW7E,EAAQ8E,cAEpBrmB,EAAO6mB,eAAeT,IAGvB2vB,EAAAh4D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAI0f,GAAoB3f,EAAQxe,wCApBnE5b,EAAAA,sDAPiCw6B,EAAAA,wBA8BlCo0B,EAhCA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAAoB30B,GAAAxjC,KAAAwjC,qBAAAA,EAkBrB,OAfC20B,EAAAj4D,UAAA2jC,WAAA,WACC,OAAOqE,IAGRiwB,EAAAj4D,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExChkB,EAASgkB,EAAQ1jB,YAEvBb,EAAU4qB,UAAUrqB,IAGrBy4C,EAAAj4D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIof,GAAerf,EAAQxe,wCAlB9D5b,EAAAA,sDAPwBw6B,EAAAA,wBA4BzBq0B,EA9BA,OCiBMn8B,GAAmB,CACxB2M,GACAotB,IAGK95B,GAAgB,CACrBkN,IAGYivB,GAAqB11D,EAC9BqjC,EAAAA,aAAaE,uBAAuBkyB,GAAyB,sBAC7DpyB,EAAAA,aAAaE,uBAAuB4xB,GAAqC,sBACzE9xB,EAAAA,aAAaE,uBAAuB6xB,GAAuC,sBAC3E/xB,EAAAA,aAAaE,uBAAuB8xB,GAA8B,sBAClEhyB,EAAAA,aAAaE,uBAAuB+xB,GAAwC,sBAC5EjyB,EAAAA,aAAaE,uBAAuBgyB,GAAqC,sBACzElyB,EAAAA,aAAaE,uBAAuBiyB,GAA8B,uBAGzDG,GAAe31D,EACxBs5B,GACAC,GAAa,CAEhBrb,GAEAgpB,GACAR,KC3CDkvB,GAAA,WAYC,SAAAA,EAA6B90B,GAAAxjC,KAAAwjC,qBAAAA,EAgB9B,OAbC80B,EAAAp4D,UAAA2jC,WAAA,WACC,OAAO6G,IAGR4tB,EAAAp4D,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,KAK/C40B,EAAAp4D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAI4f,GAAkB7f,EAAQxe,wCAhBjE5b,EAAAA,sDAPwBw6B,EAAAA,wBA0BzBw0B,EA5BA,GCAA,IAAAC,GAAA,WAaC,SAAAA,EAAoBhU,EACT/gB,GADSxjC,KAAAukD,6BAAAA,EACTvkD,KAAAwjC,qBAAAA,EAmBZ,OAhBC+0B,EAAAr4D,UAAA2jC,WAAA,WACC,OAAO8G,IAGR4tB,EAAAr4D,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCxhB,EAAY/C,EAAUiD,eAC3BwoB,EAAclH,EAAQmH,iBAEvB3oB,EAAUuxC,UAAU7oB,IAGrB2tB,EAAAr4D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAIgU,GAAwBjU,EAAQxe,wCApBvE5b,EAAAA,sDANQq5C,UAFgB7e,EAAAA,wBA+BzBy0B,EAjCA,OCaMv8B,GAAmB,CACxB8O,GACAkrB,IAGK/5B,GAAgB,CACrBoP,IAGYmtB,GAAwB91D,EACjCqjC,EAAAA,aAAaE,uBAAuBqyB,GAA4B,sBAChEvyB,EAAAA,aAAaE,uBAAuBsyB,GAAiC,uBAG5DE,GAAkB/1D,EAC3Bs5B,GACAC,GAAa,CAEhB2b,GAEA14B,GAEA+rB,GACAM,KCpCDmtB,GAAA,WAYC,SAAAA,EAAoBtS,GAAApmD,KAAAomD,oCAAAA,EAqBrB,OAlBCsS,EAAAx4D,UAAA2jC,WAAA,WACC,OAAO2I,IAGRksB,EAAAx4D,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExC+I,EAAQ/I,EAAQgJ,WAEtBn3B,EAAUyC,UAAUy0B,IAGrBisB,EAAAx4D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,OAE5CxK,EAAkB/Z,EAAUilB,YAElCpkC,KAAKomD,oCAAoCziB,QAAQzK,wBArBlD5vB,EAAAA,sDANQq8C,MA8BT+S,EAjCA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAAoBvS,GAAApmD,KAAAomD,oCAAAA,EAqBrB,OAlBCuS,EAAAz4D,UAAA2jC,WAAA,WACC,OAAO8I,IAGRgsB,EAAAz4D,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExC5L,EAAS4L,EAAQ1M,YAEvBzhB,EAAUu3B,SAAShV,IAGpB6gC,EAAAz4D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,OAE5CxK,EAAkB/Z,EAAUilB,YAElCpkC,KAAKomD,oCAAoCziB,QAAQzK,wBArBlD5vB,EAAAA,sDAJQq8C,MA4BTgT,EAjCA,sBCUC,SAAAC,EAAoBngD,GAApB,IAAAlS,EACC6G,EAAAxM,KAAAZ,OAAOA,YADYuG,EAAAkS,gCAAAA,IAarB,OAfwDpL,EAAAA,EAAAA,GAMvDurD,EAAA14D,UAAAg7B,OAAA,SAAOnmB,GAEN,GAAIA,aAAiB0uC,GAAgB,KAC9BoV,EAAS9jD,EAAM2uC,YAErB1jD,KAAKyY,gCAAgCT,UAAU6gD,EAAQ9jD,EAAMmQ,wCAZ/D5b,EAAAA,sDAJQsO,MAoBTghD,GAfwDx9B,EAAAA,oBCRxD,IAAA09B,GAAA,WAaC,SAAAA,EAAoB3jD,GAAAnV,KAAAmV,oBAAAA,EAarB,OAVC2jD,EAAA54D,UAAA64D,OAAA,SAAOhpD,GAEN,OAAO/P,KAAKmV,oBACNE,YAAYtF,GACZ8E,KACAS,EAAAA,QAAM,SAAEC,GAAyB,OAAAA,EAAUC,QAAQC,aAAe1F,EAAY0F,cAC9EvN,EAAAA,KAAG,SAAEqN,GAAyB,OAAAA,EAAU8M,qCAZ/C/Y,EAAAA,sDANQmL,MAsBTqkD,EA1BA,GCAA,IAAAE,GAAA,WAYC,SAAAA,EAAoBx1B,GAAAxjC,KAAAwjC,qBAAAA,EAmBrB,OAhBCw1B,EAAA94D,UAAA2jC,WAAA,WACC,OAAO0I,IAGRysB,EAAA94D,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCv9B,EAAUu9B,EAAQh2B,YACdyR,EAAU7F,YAEbuzB,WAAW1mC,IAGnB6yD,EAAA94D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAImf,GAAsBpf,EAAQxe,wCAnBrE5b,EAAAA,sDAPwBw6B,EAAAA,wBA6BzBk1B,EA/BA,sBCUC,SAAAC,EAAoBzgD,GAApB,IAAAjS,EACC6G,EAAAxM,KAAAZ,OAAOA,YADYuG,EAAAiS,iCAAAA,IAcrB,OAhBwDnL,EAAAA,EAAAA,GAMvD4rD,EAAA/4D,UAAAg7B,OAAA,SAAOnmB,GAEN,GAAIA,aAAiB0wC,GAAmC,KAEjDz+B,EAAgBjS,EAAM2wC,mBAE5B1lD,KAAKwY,iCAAiCH,SAAS2O,EAAejS,EAAMmQ,wCAbtE5b,EAAAA,sDAHQ8O,MAoBT6gD,GAhBwD79B,EAAAA,wBCWlDY,GAAmB,CACxB4Q,GACAqkB,GACAtL,IAGK1pB,GAAgB,CACrB68B,GACA,CACC7pD,QAASitB,EAAAA,sBACTvF,SAAUiiC,GACVz8B,OAAO,GACL,CACFltB,QAASitB,EAAAA,sBACTvF,SAAUsiC,GACV98B,OAAO,GAERvkB,GACAQ,IAGY8gD,GAAqBx2D,EAC9BqjC,EAAAA,aAAaE,uBAAuB+yB,GAAgC,sBACpEjzB,EAAAA,aAAaE,uBAAuByyB,GAAyB,sBAC7D3yB,EAAAA,aAAaE,uBAAuB0yB,GAAuC,uBAGlEQ,GAAez2D,EACxBs5B,GACAC,GAAa,CAEhB5a,GAEAqvB,GACAn4B,GACAm/B,KCtDD0hB,GAAA,WAaC,SAAAA,EAA6BhT,EACT5iB,GADSxjC,KAAAomD,oCAAAA,EACTpmD,KAAAwjC,qBAAAA,EAsBrB,OAnBC41B,EAAAl5D,UAAA2jC,WAAA,WACC,OAAOgK,IAGRurB,EAAAl5D,UAAA+jC,gBAAA,SAAgB9kB,EAA+BukB,OAExCoK,EAASpK,EAAQqK,YAEvB5uB,EAAUo1C,gBAAgBzmB,IAG3BsrB,EAAAl5D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,OAE5CoK,EAASpK,EAAQqK,YAEvB/tC,KAAKwjC,qBAAqBG,QAAQ,IAAIuV,GAAoCxV,EAAQxe,iBAAkB4oB,IACpG9tC,KAAKomD,oCAAoCziB,QAAQxkB,EAAUilB,kCAvB5D96B,EAAAA,sDAJQq8C,UAJgB7hB,EAAAA,wBAkCzBs1B,EApCA,GCAA,IAAAC,GAAA,WAgBC,SAAAA,EAA6B9U,EAClB/gB,GADkBxjC,KAAAukD,6BAAAA,EAClBvkD,KAAAwjC,qBAAAA,EAkCZ,OA/BC61B,EAAAn5D,UAAA2jC,WAAA,WACC,OAAO2J,IAGR6rB,EAAAn5D,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExC3zB,EAAc2zB,EAAQxe,iBAC3BmB,EAAgBqd,EAAQxN,mBACxB5F,EAAUoT,EAAQjT,aAClBX,EAAY4T,EAAQ+J,eAEf+W,EAAUjvC,EAAUk6B,aAAanf,EAASR,GAEhD9vB,KAAKykD,iBAAiB10C,EAAasW,EAAeiK,EAASk0B,IAG5D6U,EAAAn5D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,KAG3C21B,EAAAn5D,UAAAukD,iBAAR,SAAyBvmC,EAA0BmI,EAA8BiK,EAAkBk0B,OAE5F7pB,EAAa6pB,EAAQt8C,KAAG,SAAEw8C,GAC/B,MAAO,CACN3pB,UAAW2pB,EAAOC,eAClBr0B,QAASo0B,EAAOt1B,WAAW5Z,YAI7BxV,KAAKwjC,qBAAqBG,QAAQ,IAAI3I,GAAkB9c,EAAamI,EAAesU,yBAnCrFrxB,EAAAA,sDATQq5C,UAF6B7e,EAAAA,wBAiDtCu1B,EAnDA,GCAA,IAAAC,GAAA,WAYC,SAAAA,EAA6B91B,GAAAxjC,KAAAwjC,qBAAAA,EAoB9B,OAjBC81B,EAAAp5D,UAAA2jC,WAAA,WACC,OAAO6J,IAGR4rB,EAAAp5D,UAAA+jC,gBAAA,SAAgB1uB,EAA+BmuB,OAExCjiB,EAAYiiB,EAAQ9hB,eAERrM,EAAU+M,uBAElButB,aAAapuB,IAGxB63C,EAAAp5D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAI7e,GAAkB4e,EAAQxe,wCApBjE5b,EAAAA,sDAPwBw6B,EAAAA,wBA8BzBw1B,EAhCA,sBCYC,SAAAC,EAAoB9f,GAApB,IAAAlzC,EACC6G,EAAAxM,KAAAZ,OAAOA,YADYuG,EAAAkzC,gCAAAA,IAYrB,OAd0DpsC,EAAAA,EAAAA,GAMzDksD,EAAAr5D,UAAAg7B,OAAA,SAAOnmB,GAEFA,aAAiBmkC,IACpBl5C,KAAKy5C,gCAAgCJ,UAAUtkC,EAAMg5B,YAAah5B,EAAMmQ,uCAV1E5b,EAAAA,sDALQ6vC,MAoBTogB,GAd0Dn+B,EAAAA,wBCkDpDY,GAAgBt5B,EAClBqhD,GAAiC,CACpCwD,GACA4C,GACAsB,GACAwK,GACAxO,GACAtb,GACAkd,GACA7a,IAEGogB,IAGE3yB,GAAav5B,EAAA,CAClB,CACCuM,QAASitB,EAAAA,sBACTvF,SAAUk4B,GACV1yB,OAAO,GACL,CACFltB,QAASitB,EAAAA,sBACTvF,SAAUm4B,GACV3yB,OAAO,GACL,CACFltB,QAASitB,EAAAA,sBACTvF,SAAUo4B,GACV5yB,OAAO,GACL,CACFltB,QAASitB,EAAAA,sBACTvF,SAAUw4B,GACVhzB,OAAO,GACL,CACFltB,QAASitB,EAAAA,sBACTvF,SAAU4iC,GACVp9B,OAAO,IAEL6nB,GAA8B,CACjCniC,GACAkD,GACAo3B,GACAL,GACAG,GACAgF,GACAE,GACAnR,GACAif,GACA/e,GACAiJ,GACAnL,GACAI,KAGYorB,GAAwB92D,EACjCqjC,EAAAA,aAAaE,uBAAuBie,GAAwC,sBAC5Ene,EAAAA,aAAaE,uBAAuBke,GAAiC,sBACrEpe,EAAAA,aAAaE,uBAAuBme,GAA0B,sBAC9Dre,EAAAA,aAAaE,uBAAuBqe,GAA0B,sBAC9Dve,EAAAA,aAAaE,uBAAuB4e,GAA0B,sBAC9D9e,EAAAA,aAAaE,uBAAuB8e,GAAwC,sBAC5Ehf,EAAAA,aAAaE,uBAAuBgf,GAA2C,sBAC/Elf,EAAAA,aAAaE,uBAAuBmf,GAA6C,sBACjFrf,EAAAA,aAAaE,uBAAuBof,GAAqC,sBACzEtf,EAAAA,aAAaE,uBAAuBkgB,GAA8C,sBAClFpgB,EAAAA,aAAaE,uBAAuBmzB,GAAwC,sBAC5ErzB,EAAAA,aAAaE,uBAAuBozB,GAA4B,sBAChEtzB,EAAAA,aAAaE,uBAAuBqzB,GAA4B,uBAGvDG,GAAkB/2D,EAC3BuhD,GAEAjoB,GACAC,GAAa,CAEhBud,GAEAvF,GACAqb,GAEA4G,GACAvyC,GAEAiC,GACAmpB,IAEG6oB,GACAS,GACAI,GACAU,mBClJJ,SAAAO,mDAUA,OAVmCrsD,EAAAA,EAAAA,GAElCqsD,EAAAx5D,UAAA+mC,KAAA,SAAK0yB,GACJ1kD,QAAQgyB,KAAK0yB,IAGdD,EAAAx5D,UAAAuC,MAAA,SAAMk3D,GACL1kD,QAAQxS,MAAMk3D,IAGhBD,GAVmC/xB,ICFnCiyB,GAAA,WAKA,SAAAA,KAOA,2BAPCz8C,EAAAA,SAAQrL,KAAA,CAAC,CACTG,UAAW,CAAC,CACXhD,QAAS04B,GACThR,SAAU+iC,SAIZE,EAZA,GCAAC,GAAA,WAKA,SAAAA,KA0BA,OArBCA,EAAA35D,UAAAC,OAAA,SAAO4iB,GAEN,OAAIpjB,MAAM44B,QAAQxV,GACV/iB,KAAK85D,eAAe/2C,GAEpB/iB,KAAK+5D,aAAah3C,IAI3B82C,EAAA35D,UAAA45D,eAAA,SAAe/2C,GAAf,IAAAxc,EAAAvG,KACC,OAAO+iB,EAAK7a,KAAG,SAAE6a,GAAc,OAAAxc,EAAKwzD,aAAah3C,OAG1C82C,EAAA35D,UAAA65D,aAAR,SAAqB1tD,GAEpB,OAAIA,aAAgBmjD,GACZ,IAAI1sC,GAAWzW,EAAKmY,QAASnY,EAAKkX,cAAelX,EAAKuJ,GAAIvJ,EAAKiX,cAE/D,IAAIR,GAAWzW,EAAM,wBAvB9B/C,EAAAA,aA0BDuwD,EA/BA,kBCiBC,SAAAG,WACC5sD,EAAAxM,KAAAZ,OAAOA,KAIT,OAPgDqN,EAAAA,EAAAA,uBAX/CwE,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0BACVC,SAAU,oFAMVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,+CASlCwnD,GAPgDxlD,mBCoC/C,SAAAylD,EAAoB1wC,EACT2wC,EACArpD,EACAd,EACA4kC,EACA9tB,EACA4yB,EACA/K,GAPX,IAAAnoC,EAQC6G,EAAAxM,KAAAZ,OAAOA,KARYuG,EAAAgjB,YAAAA,EACThjB,EAAA2zD,UAAAA,EACA3zD,EAAAsK,kBAAAA,EACAtK,EAAAwJ,YAAAA,EACAxJ,EAAAouC,wBAAAA,EACApuC,EAAAsgB,0BAAAA,EACAtgB,EAAAkzC,gCAAAA,EACAlzC,EAAAmoC,kCAAAA,EATXnoC,EAAAsoC,YAAc,aAYTsrB,EAAiB,UACrBA,EAAeF,EAAyBG,kBAAoB,GAE5D7zD,EAAK8zD,WAAa9zD,EAAKgjB,YAAYG,MAAMywC,KA4D3C,OApF8C9sD,EAAAA,EAAAA,GA2B7C4sD,EAAA/5D,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KACCA,KAAK6pB,iBAEL7pB,KAAK0uC,kCACH90B,UACA/E,KACA7U,KAAKuU,aAELO,WAAS,SAAE+5B,GACXtoC,EAAKsoC,YAAcA,EACnBtoC,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKy5C,gCACHH,SAASt5C,KAAK+P,aACd8E,KACA7U,KAAKuU,aAELO,WAAS,SAAEg5B,QAEI5nC,IAAX4nC,IACHA,EAAS,UAGNqsB,EAAiB,GACrBA,EAAeF,EAAyBG,kBAAoBtsB,EAExDA,IAAWvnC,EAAK8zD,WAAWjqD,IAAI,CAAC6pD,EAAyBG,mBAAmBj4D,OAC/EoE,EAAK8zD,WAAWzwC,SAASuwC,OAM7BF,EAAA/5D,UAAA4pB,gBAAA,WAAA,IAAAvjB,EAAAvG,KACCA,KAAK6mB,0BACHrB,cACA3Q,KACA7U,KAAKuU,aAELO,WAAS,SAAE2M,GACXlb,EAAK2zD,UAAUhzC,SAAS3gB,EAAK+zD,QAAQ3oD,cAAe,SAAU,YAIzDsoD,EAAA/5D,UAAA2pB,eAAR,WAAA,IAAAtjB,EAAAvG,KACCA,KAAKq6D,WACH9vC,SAAuB,aACvBC,aACA3V,KACA0lD,EAAAA,aAAa,KACbv6D,KAAKuU,aAELO,WAAS,SAAEg5B,GACXvnC,EAAKouC,wBAAwB7F,OAAOhB,OA/EfmsB,EAAAG,iBAAmB,mCAnB3CvoD,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,2BACVC,SAAU,+mBAYVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDA3BzBmY,EAAAA,mBAJRtD,EAAAA,iBAJAzU,EAAAA,yBAiBQ+C,UAJAo5B,UACAnpB,UAEAuzB,UADA/K,uCA0BPv7B,EAAAA,UAASf,KAAA,CAAC,UAAW,CAAEgB,QAAQ,OAgFjCmnD,GApF8CzlD,ICxC9C,IAAAgmD,GAAA,WAQA,SAAAA,KAeA,2BAfCr9C,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAS,CACRC,EAAAA,aACAwoB,EAAAA,qBAEDtoB,aAAc,CACby8C,GACAC,IAEDz8C,QAAS,CACRw8C,GACAC,QAIFO,EAvBA,GCAAC,GAAA,WAGA,SAAAA,KAUA,2BAVC5oD,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,6BACVC,SAAA,gCACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,KACjCL,KAAM,CACLuoD,qCAAsC,YAIxCD,EAbA,kBCuCC,SAAAE,EAAoB/pD,EACTC,EACA8jC,EACAa,EACAolB,GAJX,IAAAr0D,EAKC6G,EAAAxM,KAAAZ,OAAOA,YALYuG,EAAAqK,WAAAA,EACTrK,EAAAsK,kBAAAA,EACAtK,EAAAouC,wBAAAA,EACApuC,EAAAivC,iCAAAA,EACAjvC,EAAAq0D,6BAAAA,IA4BZ,OA1C2DvtD,EAAAA,EAAAA,GAkB1DstD,EAAAz6D,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KACCA,KAAKw1C,iCACH57B,UACA/E,KACA7U,KAAKuU,aAELO,WAAS,SAAExN,GACXf,EAAKe,OAASA,EACdf,EAAKsK,kBAAkBJ,oBAI1BkqD,EAAAz6D,UAAA26D,iBAAA,WACC76D,KAAK46D,6BAA6Bx0C,KAAKpmB,KAAK86D,sBAAuB96D,KAAKuzB,SAGzEonC,EAAAz6D,UAAA66D,kBAAA,WACC/6D,KAAK46D,6BAA6Brf,SAGnCof,EAAAz6D,UAAAwN,UAAA,WACC,OAAO1N,KAAKsH,QAAUtH,KAAKsH,OAAOoG,iCA1DnCmE,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,sCACVC,SAAU,yyBAZ4BW,EAAAA,kBAA9BC,EAAAA,yBAGAm8B,UAIA+J,UAHAqC,qDA2BPtoC,EAAAA,UAASf,KAAA,CAAC,wBAAyB,CAAEgB,QAAQ,oBAG7ChG,EAAAA,SAqCF6tD,GA1C2DnmD,uBCoB1D,SAAAwmD,EAAoBnqD,EACT8jC,EACAuG,GAFX,IAAA30C,EAGC6G,EAAAxM,KAAAZ,OAAOA,YAHYuG,EAAAsK,kBAAAA,EACTtK,EAAAouC,wBAAAA,EACApuC,EAAA20C,4BAAAA,EARX30C,EAAA00D,UAAuBC,EAAAA,UAAUC,MAEjC50D,EAAA8iB,OAAS0G,KAwCV,OA/CwD1iB,EAAAA,EAAAA,GAiBvD2tD,EAAA96D,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KACCA,KAAKuwB,WAAavwB,KAAKuzB,OAAO7C,gBAE9B1wB,KAAKk7C,4BACH/gB,YAAYn6B,KAAKuzB,OAAO9C,cACxB5b,KACA7U,KAAKuU,aAELO,WAAS,SAAEyb,GACXhqB,EAAKgqB,WAAaA,EAClBhqB,EAAKsK,kBAAkBJ,oBAI1BuqD,EAAA96D,UAAA0wB,UAAA,WACC,OAAO5wB,KAAKuwB,aAAeR,GAAU5rB,KAGtC62D,EAAA96D,UAAA2wB,WAAA,WACC,OAAO7wB,KAAKuwB,aAAeR,GAAU3rB,MAGtC42D,EAAA96D,UAAAk7D,WAAA,WACC,OAAOp7D,KAAKuwB,aAAeR,GAAU/rB,MAGtCg3D,EAAA96D,UAAAuvC,aAAA,SAAa9c,GACZ5d,MAAMsmD,kBACNr7D,KAAK20C,wBAAwBlF,aAAazvC,KAAKuzB,OAAO9C,aAAckC,wBAzErE9gB,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,mCACVC,SAAU,u7BAZFY,EAAAA,yBAMAm8B,UACAnV,sCAiCP9sB,EAAAA,SA6CFkuD,GA/CwDxmD,ICtCxD,IAAA8mD,GAAA,WAsBC,SAAAA,EAAoBtmB,EACT4lB,GADS56D,KAAAg1C,0BAAAA,EACTh1C,KAAA46D,6BAAAA,EASZ,OANCU,EAAAp7D,UAAAq7D,WAAA,SAAWhoC,GACVvzB,KAAKg1C,0BAA0Bva,cAAclH,EAAOpE,eAEpDnvB,KAAK46D,6BAA6Brf,6BAtBnC1pC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0CACVC,SAAU,kKANFsoB,UACA6gB,sCAePruC,EAAAA,SAaFwuD,EAhCA,GCAA,IAAAE,GAAA,WA2BC,SAAAA,EAAoBxmB,EACT4lB,GADS56D,KAAAg1C,0BAAAA,EACTh1C,KAAA46D,6BAAAA,EAaZ,OAVCY,EAAAt7D,UAAAi4B,SAAA,SAAS5E,GACRvzB,KAAKg1C,0BAA0B7c,SAAS5E,EAAOpE,eAC/CnvB,KAAK46D,6BAA6Brf,SAGnCigB,EAAAt7D,UAAAk4B,UAAA,SAAU7E,GACTvzB,KAAKg1C,0BAA0B5c,UAAU7E,EAAOpE,eAChDnvB,KAAK46D,6BAA6Brf,6BAhCnC1pC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0CACVC,SAAU,4WALFsoB,UACA6gB,sCAoBPruC,EAAAA,SAiBF0uD,EAzCA,sBC2CC,SAAAC,EAAoB5qD,EACTwV,EACA2uB,EACAkG,GAHX,IAAA30C,EAIC6G,EAAAxM,KAAAZ,OAAOA,YAJYuG,EAAAsK,kBAAAA,EACTtK,EAAA8f,cAAAA,EACA9f,EAAAyuC,0BAAAA,EACAzuC,EAAA20C,4BAAAA,IA6BZ,OAtCqD7tC,EAAAA,EAAAA,GAapDouD,EAAAv7D,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAECA,KAAKk7C,4BACHhhB,aAAal6B,KAAKqmB,eAClBxR,KACA7U,KAAKuU,aAELO,WAAS,SAAEvK,GACXhE,EAAKgE,QAAUA,EACfhE,EAAKm1D,oBAAsBn1D,EAAKgE,QACrBrC,KAAG,SAAE/G,GAAM,OAACA,EAAEuM,eACdiuD,QAAM,SAAEC,EAAalwD,GAAiB,OAAAkwD,EAAclwD,KAE/DnF,EAAKsK,kBAAkBJ,oBAI1BgrD,EAAAv7D,UAAA27D,aAAA,SAAatoC,GACZxe,MAAMsmD,kBACF9nC,EAAO7lB,YACV1N,KAAKg1C,0BAA0Bva,cAAclH,EAAOpE,cAAenvB,KAAKqmB,eAExErmB,KAAKg1C,0BAA0Bxa,aAAajH,EAAOpE,cAAenvB,KAAKqmB,oCA9DzExU,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,+BACVC,SAAU,gcAmBVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,KACjCL,KAAM,CACL2pD,uCAAwC,qDAlCRlpD,EAAAA,yBAOzBkT,UADAwU,UAFAV,MAuET6hC,GAtCqDjnD,ICrCrD,IAAAunD,GAAA,WAEA,SAAAA,KAUA,2BAVClqD,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,oCACVC,SAAA,sEACAuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,KACjCL,KAAM,CACL6pD,4CAA6C,YAI/CD,EAZA,GCUMx+C,GAAe,CACpBk+C,GACA11C,GACAg2C,IAGDE,GAAA,WAAA,SAAAA,KAiBA,2BAjBC9+C,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAS,CACRC,EAAAA,aACAtK,IAEDwK,aAAcA,GACdC,QAASD,GACTgK,gBAAiB,CAChBk0C,GACA11C,GACAg2C,IAED9pD,UAAW,CACVgU,QAIFg2C,EAjBA,GCLM1+C,GAAe,CACpB09B,GACA0f,GACAK,GACAM,GACAE,IAGDU,GAAA,WAAA,SAAAA,KAUA,2BAVC/+C,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAS,CACRC,EAAAA,aACAtK,GACAkpD,IAED1+C,aAAcA,GACdC,QAASD,OAGV2+C,EAVA,kBC6GC,SAAAC,EAAoBtrD,EACTd,EACAqsD,EACAC,EACS/hB,GAJpB,IAAA/zC,EAKC6G,EAAAxM,KAAAZ,OAAOA,YALYuG,EAAAsK,kBAAAA,EACTtK,EAAAwJ,YAAAA,EACAxJ,EAAA61D,uCAAAA,EACA71D,EAAA81D,uBAAAA,EACS91D,EAAA+zC,wBAAAA,EAVpB/zC,EAAA+1D,aAAuB,EAatB/1D,EAAK61D,uCACH7M,sBAAsBhpD,EAAKwJ,aAC3B8E,KACAtO,EAAKgO,aAELO,WAAS,SAAEC,GAEXxO,EAAKkiD,aAAe1zC,EAAMywC,kBAC1Bj/C,EAAKsK,kBAAkBJ,qBA+B3B,OAzDwDpD,EAAAA,EAAAA,GA8BvD8uD,EAAAj8D,UAAA8Q,SAAA,WAAA,IAAAzK,EAAAvG,KAECA,KAAKq8D,uBACHpjD,iBACApE,KACA7U,KAAKuU,aAELO,WAAS,SAAEuF,GACX9T,EAAK+1D,YAAuB,IAATjiD,EACnB9T,EAAKsK,kBAAkBJ,mBAGzBzQ,KAAKs6C,wBACHrgB,kBACAplB,KACA7U,KAAKuU,aAELO,WAAS,SAAEvK,GACXhE,EAAK62C,cAAgB7yC,EACrBhE,EAAKsK,kBAAkBJ,oBAK1B0rD,EAAAj8D,UAAAq8D,uBAAA,SAAuB9zD,GACtB,OAAOA,MAAAA,uBAjKRoJ,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,kCACVC,SAAU,u/IAqGVuI,gBAAiBC,EAAAA,wBAAwBC,OACzCnI,cAAeC,EAAAA,kBAAkBC,kDAnHAI,EAAAA,yBAGzB+C,UACA25C,UAIA/2C,UAHAqhB,uCAkHP9sB,EAAAA,SAuDFqvD,GAzDwD3nD,ICrHxD,IAAAgoD,GAAA,WAWA,SAAAA,KAkBA,2BAlBCr/C,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAS,CACRC,EAAAA,aACAC,EAAAA,cAEDC,aAAc,CACb4+C,IAED3+C,QAAS,CACR2+C,IAEDlqD,UAAW,CACV6hC,GACAK,GACAJ,QAIFyoB,EA7BA,GCAAC,GAAA,WAaC,SAAAA,EAA6BlY,EAClB/gB,GADkBxjC,KAAAukD,6BAAAA,EAClBvkD,KAAAwjC,qBAAAA,EAeZ,OAZCi5B,EAAAv8D,UAAAujC,oBAAA,SAAoBtkB,EAA+BukB,GAClD1jC,KAAKwjC,qBAAqBG,QAAQ,IAAI1lB,GAAsBylB,EAAQxe,oBAGrEu3C,EAAAv8D,UAAA0jC,uBAAA,WACC,OAAO5jC,KAAKukD,8BAGbkY,EAAAv8D,UAAA2jC,WAAA,WACC,OAAOkJ,wBAhBRzjC,EAAAA,sDANQq5C,UAFuD7e,EAAAA,wBA2BhE24B,EA7BA,sBCuCC,SAAAC,EAA6B7nB,GAA7B,IAAAtuC,EACC6G,EAAAxM,KAAAZ,OAAOA,YADqBuG,EAAAsuC,qBAAAA,IA0D9B,OA1EgDxnC,EAAAA,EAAAA,GAoB/CqvD,EAAAx8D,UAAAsL,YAAA,SAAYC,GAEY,OAAnBA,EAAQiT,aAAsCxY,IAAnBuF,EAAQiT,QACtC1e,KAAK28D,kBAGe,OAAjBlxD,EAAQwzC,WAAkC/4C,IAAjBuF,EAAQwzC,MACpCj/C,KAAK28D,mBAKPD,EAAAx8D,UAAA8Q,SAAA,WACChR,KAAK28D,mBAGED,EAAAx8D,UAAA08D,cAAR,eACOrsB,EAASvwC,KAAK0e,OAAOlJ,QAC1BkqC,EAAe1/C,KAAK2/C,YACpBrvB,EAAUtwB,KAAKi/C,KAAKxtB,cAErBzxB,KAAK60C,qBAAqB/H,SAAS,IAAIwD,GAA8BC,EAAQjgB,EAASovB,KAI/Egd,EAAAx8D,UAAAy8D,gBAAR,WAAA,IAAAp2D,EAAAvG,KACCA,KAAKm/C,cAAgB,IAAI12B,GACzBzoB,KAAKo/C,QAAU,IAAI32B,GAEnBzoB,KAAK29C,YAAc,CAClBt0B,OAAQrpB,KAAKo/C,QACb50B,aAAcxqB,KAAKm/C,cACnBh9C,MAAOnC,KAAKi/C,KAAKrtB,SAAS5xB,KAAK0e,QAC/B4L,OAAO,GAGRtqB,KAAKo/C,QACHhqC,KACAP,KACA7U,KAAKuU,aAELO,WAAS,SAAEuU,GAEX,OAAQA,GACP,KAAKF,GAAcR,OAClBpiB,EAAKq2D,yCA9EV/qD,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,wCACVC,SAAU,yNAJF0+B,sCAiBP5jC,EAAAA,oBAGAA,EAAAA,SAqEF4vD,GA1EgDloD,ICyBhD,SAAgBqoD,KACf,OAAO,IAAI3uD,EAAoBN,gBAAiBX,QAGjD,IAEMmQ,GAAO1a,EAAA,CACZ2a,EAAAA,aACAwoB,EAAAA,oBACAE,EAAAA,aACAA,EAAAA,aAAaC,gBANc,qBAQ1BkwB,GACAtT,GACA6Z,GAA6B/5D,EAEzB81D,GACAb,GACAS,GACAc,GACAM,MAMFzmD,GAAa,CAEhBmK,GACAoK,GACAk1C,GACAhC,GACA0B,GACAD,GAEAr2B,GAEAg0B,KAGKr8C,GAAe,CACpB68B,GACA6C,GACAxB,GACAe,GACAiB,GACAG,GACAc,GACAE,GACA8d,GACA3c,GACA0a,GACAzZ,GACAQ,IAGKj6B,GAAkB,CACvB0zB,IAGKhpC,GAASvP,EAAA,CACd,CACCuM,QAASqyC,GACTpyC,SAAU,aAEX,CACCD,QAASf,EACTgsC,WAAY2iB,IAEbhD,GAEAthD,GAEA+tB,IAEGmzB,IAIE/zB,GAAkBhjC,EAAA,CACvB4a,EAAAA,aACA88B,GACA6C,GACAW,GACAc,GACAqB,IAEGhtC,GAAa,CAChBmK,KAGD4/C,GAAA,WAyBC,SAAAA,EAAyCnsD,GAAA3Q,KAAA2Q,WAAAA,EACpCU,EAAAA,kBAAkBrR,KAAK2Q,cAC1BW,OAAkB,UAAEyrD,SAAU,GAIjC,OArBQD,EAAAE,WAAP,SAAkBC,GACjB,YADiB,IAAAA,IAAAA,EAAA,CAA2C/pB,aAAc,GAAIgqB,mBAAoB,CAAEH,SAAS,KACtG,CACNI,SAAUL,EACV7qD,UAASvP,EAAA,CACR,CACCuM,QAASqyC,GACTpyC,SAAU+tD,EAAgB/pB,cAE3B,CAAEjkC,QAASmuD,EAAAA,uBAAwBluD,SAAU+tD,EAAgBC,mBAAmBH,SAChF,CAAE9tD,QAASouD,EAAAA,qBAAsBnuD,SAAU+tD,EAAgBC,mBAAmBH,UAC3E9qD,MAZC6qD,EAAAp3B,mBAAkBhjC,EAAOgjC,wBARhCvoB,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAOA,GACPG,aAAY+/C,GACZ9/C,QAASkoB,GACTne,gBAAeA,yEAqBF9U,EAAAA,OAAMX,KAAA,CAACY,EAAAA,kBAMrBoqD,EA/BA,OCjIM1/C,GAAU,CACf0/C,GAAgBE,WAAW,CAC1B9pB,aAAc,OACdgqB,mBAAoB,CACnBH,SAAS,MAKNx/C,GAAe,CACpB7M,IAGKuB,GAAS,CACd5C,GACAI,IAGKi2B,GAAqB,CAC1Bh1B,IAGK6W,GAAe,GAEfg2C,GAAoB,CACzB7sD,IAGD8sD,GAAA,WAAA,SAAAA,KAcA,OALQA,EAAAj2C,gBAAe7kB,EAAO6kB,IAEtBi2C,EAAA93B,mBAAkBhjC,EAAOgjC,IAEzB83B,EAAAD,kBAAiB76D,EAAO66D,wBAb/BpgD,EAAAA,SAAQrL,KAAA,CAAC,CACTsL,QAAOqgD,GACPlgD,aAAYmgD,GACZzrD,UAAS0rD,GACTngD,QAASkoB,GACTne,gBAAeq2C,OAShBJ,EAdA,8P1a1B4B","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\taggregation?: GuiColumnAggregation;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../../lib/composition/domain/column-aggregation.config';\nimport { AggregationType } from '../../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/column-sorting.config';\n\nimport { GuiColumnCellEditing, GuiColumnSorting } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../ui-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './aggregation/grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\nimport { GridColumnSortingConverter } from './column/sorting/grid.column-sorting.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable, Subject } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\nimport { Structure } from './structure';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport abstract class StructureRepository {\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent): void;\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.9.0\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../structure-id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../command/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../../infrastructure/in-memory/structure/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../command/vertical-formation/set-row-height/row-height-set.event';\nimport { Structure } from '../structure';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tRowHeightSetEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\t\t\tconst verticalFormation = structure.getVerticalFormation(),\n\t\t\t\t\t\tstructureId = structure.getId();\n\n\t\t\t\t\tthis.next(structureId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled())\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(aggregateId: AggregateId = globalStructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(aggregateId);\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate fabricDialogService: FabricDialogService) {\n\t}\n\n\topen(compositionId: CompositionId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, injector);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\t\t\t\t\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\t\t\t\t\n\t\t\t</ng-container>\n\n\t\t</div>\n\t\t\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\t\t\t\t<div [gui-tooltip]=\"'Manage Columns'\"\n\t\t\t\t\t (click)=\"openColumnManager()\">\n\t\t\t\t\t<button>C</button>\n\t\t\t\t</div>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t<button>i</button>\n\t\t\t\t\tInfo\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'line-height', '30px');\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t{{ element | date: 'dd/MM/yyyy' }} \n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\t\t\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template> \n\t\t\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT)\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { ColumnAlign } from '../../column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\nexport abstract class AbstractColumnEntity {\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprivate align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprivate view: ViewEntity;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from '../../column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortOrder = SortOrder.NONE;\n\n\tsortable?: boolean;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\theader?: string | HeaderTemplate,\n\t\t\t\talign?: ColumnAlign,\n\t\t\t\tview?: ViewEntity,\n\t\t\t\twidth?: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortOrder = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { ColumnId } from '../../command/column/column.id';\nimport { ColumnAlign } from '../../column-align';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\nimport { CellView } from '../../cell-view';\nimport { ColumnAlign } from '../../column-align';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\treturn this.templateFun(this.findValue(entity, searchPhrase));\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { ColumnId } from '../../command/column/column.id';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\nimport { ColumnAlign } from '../../column-align';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnId: ColumnId,\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tthis.field = field;\n\t\tthis.columnId = columnId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity)\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tcolumn.getColumnId(),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.sortOrder,\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tactiveColumn.getColumnId(),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\nimport { ActiveColumnEntity } from './command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../domain/read/composition';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../domain/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\nimport { DomainEventBus, ReadModelRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionRepository extends ReadModelRepository {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<Composition>>;\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../domain/read/composition.repository';\nimport { Composition } from '../../../domain/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/command/create-composition/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/command/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/command/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/command/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/command/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/command/column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, Composition>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, Composition>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Readonly<Composition>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, Composition>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, Composition>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionQueryStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: Composition) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../domain/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { CreateCompositionCommand } from './create-composition/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","export class ColumnId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(columnId: ColumnId): boolean {\n\t\treturn this.id === columnId.getId();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField();\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align\n\t\t);\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tcolumnEntity.setEnabled(columnConfig.enabled);\n\t\t}\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tcolumnEntity.setView(new ViewEntity(columnConfig.view));\n\t\t}\n\n\t\tif (columnConfig.width !== undefined) {\n\t\t\tcolumnEntity.setWidth(\n\t\t\t\tthis.convertWidth(columnConfig.width)\n\t\t\t);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../../structure/domain/source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition-id';\nimport { CompositionColumnsSetEvent } from '../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\t// onWidthChanged(compositionId: CompositionId): Observable<number> {\n\t// \treturn this.domainEventBus\n\t// \t\t\t   .ofEvent(\n\t// \t\t\t\t   CompositionColumnsSetEvent\n\t// \t\t\t   )\n\t// \t\t\t   .pipe(\n\t// \t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t// \t\t\t   );\n\t// }\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../domain/read/composition.repository';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { Composition } from '../domain/read/composition';\nimport { CellTemplateWithContext } from '../domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain/read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/command/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { ColumnParams } from '../domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../domain/command/column/column.id';\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, true);\n\t}\n\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, false);\n\t}\n\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, columnId);\n\t}\n\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, columnId);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/domain/structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from '../data-type/field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../../structure/domain/structure/command/field/init/fields-inited.event';\nimport { Field } from '../../../../../structure/domain/structure/command/field/data-type/field';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../domain/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../domain/composition.converter';\nimport { EditTemplateRepository } from '../domain/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../domain/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../domain/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../domain/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../domain/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/command/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/command/column/set-columns/composition-fields-inited.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeUrl, SafeScript, SafeResourceUrl } from \"@angular/platform-browser\";\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../composition-id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getColumnId().equals(columnId));\n\t}\n\n}\n","import { SortOrder } from '../sort/sort-order';\nimport { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../column.config';\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../../cell-view';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../../../column-align';\nimport { AbstractColumnEntity } from '../abstract-column.entity';\n\n\nexport class ActiveColumnEntity extends AbstractColumnEntity {\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\tconfig: ColumnConfig) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getColumnId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig()\n\t\t);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\t/**\n\t * Autowired\n\t */\n\tprivate readonly columnFactory: ColumnEntityFactory = new ColumnEntityFactory();\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getColumnId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getColumnId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, AggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements AggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricInputComponent,\n\tFabricInputModule,\n\tFabricDatePickerModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from '../domain/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../domain/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../domain/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../domain/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../domain/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../domain/read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/command/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/command/create-composition/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/command/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/command/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/command/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/command/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/command/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from '../domain/read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from '../domain/read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../domain/read/view/percentage/percentage-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { globalStructureId } from '../../../../global-structure-id';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { globalStructureId } from '../../../../global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t   \treturn idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { StructureId } from '../../../structure-id';\nimport { globalStructureId } from '../../../global-structure-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { CreateStructureCommand } from '../../domain/structure/command/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { SortOrder } from '../../../composition/domain/command/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/domain/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionDispatcher } from '../../../../composition/domain/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { ColumnParams } from '../../../../composition/domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../../../../composition/domain/command/column/column.id';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.enableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.disableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveLeft(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveRight(columnId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionRepository } from '../../../../composition/domain/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { LocalStructureSearchDispatcher } from './search/local-structure-search.dispatcher';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService },\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService },\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService },\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService },\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService },\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService },\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService },\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService },\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService },\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService },\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchDispatcher }\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../ui-api/structure/search/structure-search-event.service';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from '../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../../composition/domain/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../../composition/ui-api/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../ui-api/structure/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-aggregation.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService\n\t\t);\n\n\t\tthis.structureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate inlineDialogService: FabricInlineDialogService) {\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column',\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, injector, InlineDialogPlacement.Top, -2);\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { StructureSearchReadModelRepository } from '../../../ui-api/structure/search/structure-search.read-model.repository';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t// \tthis.structureSearchReadModelRepository\n\t// \t\t.onSearchEnabled()\n\t// \t\t.pipe(\n\t// \t\t\tthis.takeUntil()\n\t// \t\t)\n\t// \t\t.subscribe((searching: boolean) => {\n\t// \t\t\tthis.globalSearching = searching;\n\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\t\t\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\" >\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.containerRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\t\t\n<!--\t\t<ng-container-->\n<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n<!--\t\t</ng-container>-->\n\t\t\n\t\t<button gui-button [primary]=\"true\" >Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate structureId: StructureId, // REfactor\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t \tconst searchPhrase = args[0],\n\t\t\t\thighlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t \tthis.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\t\t\tfocus: forceCheck\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\trowHeight = combine[1];\n\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * rowHeight);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1],\n\t\t\t\t\trowHeight = combine[2];\n\n\t\t\t\tconst sourceSizeHeight = source.length * rowHeight;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\nimport { globalStructureId } from '../../../domain/global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId, AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureAggregate> {\n\n\tabstract getById(aggregateId: AggregateId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { filter, map, takeUntil, catchError } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../../domain/structure/command/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../domain/structure/command/vertical-formation/set-row-height/row-height-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tSchemaSetEvent,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\tconst key = structure.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fields = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fields));\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetAggregationEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetAggregationEnabledCommand> {\n\t\treturn StructureSetAggregationEnabledCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setAggregationEnabled(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 30;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column-aggregation.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\n\nexport abstract class Field {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\n\nexport class UnknownField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\n\nexport class NumberField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\n\nexport class StringField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\n\nexport class BooleanField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\n\nexport class DateField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from './field';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): Field {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { Field } from './data-type/field';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tthis.addField(field);\n\t\t});\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { Field } from '../field/data-type/field';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: Field;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: Field,\n\t\t\t\tfilterValue: any) {\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\n\t\t\tif (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.filterString(item);\n\t\t\t} else if (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.filterNumber(item);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.filterBoolean(item);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate filterString(item: OriginItemEntity): boolean {\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity): boolean {\n\t\tconst numberValue = this.field.getValue(item);\n\n\t\treturn numberValue > this.filterValue;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity): boolean {\n\t\tconst booleanValue = this.field.getValue(item);\n\n\t\treturn booleanValue === this.filterValue;\n\t}\n\n}\n","import { Field } from '../field/data-type/field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: Field,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { Field } from '../field/data-type/field';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: Field, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { Field } from '../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Field } from '../../../domain/structure/command/field/data-type/field';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { Field } from '../../structure/command/field/data-type/field';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\n\t\t\tlet valueOne = this.direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\t\tvalueTwo = this.direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.sortNumber(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.sortBoolean(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.sortString(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\t\treturn this.sortDate(valueOne, valueTwo);\n\t\t\t} else {\n\t\t\t\treturn this.sortUnknown(valueOne, valueTwo);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate sortString(strOne: string, strTwo: string): number {\n\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tprivate sortNumber(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tprivate sortBoolean(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tprivate sortDate(dateOne: Date, dateTwo: Date): number {\n\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tprivate sortUnknown(a: any, b: any): number {\n\t\treturn 0;\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { Field } from '../field/data-type/field';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortOrder } from '../../../../../composition/domain/command/column/sort/sort-order';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28;\n\n\tprivate pagerHeight = 35;\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.ODD;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { Field } from '../field/data-type/field';\nimport { DataType } from '../field/data-type/data-type';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn field.getDataType() === DataType.STRING;\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tfor (let field of this.searchFields) {\n\n\t\t\t\tif (this.filterString(entities[i], field)) {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n\tprivate filterString(item: OriginItemEntity, field: Field): boolean {\n\t\tconst value = field.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity, field: Field): boolean {\n\t\tconst numberValue = field.getValue(item);\n\n\t\treturn numberValue > this.searchPhrase;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity, field: Field): boolean {\n\t\tconst booleanValue = field.getValue(item);\n\n\t\treturn booleanValue === this.searchPhrase;\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from '../data-type/field';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { Field } from './field/data-type/field';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, fields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\nimport { AggregateFactory } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<StructureAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tschema = aggregate.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaVerticalGridSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<StructureAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst schema = aggregate.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHorizontalGrid(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaHorizontalGridSetEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<StructureAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst schema = structure.getSchema(),\n\t\t\ttheme = command.getTheme();\n\n\t\tschema.setTheme(theme);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaThemeSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler implements CommandHandler<StructureAggregate, ChangeSchemaBottomHeaderCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangeSchemaBottomHeaderCommand> {\n\t\treturn ChangeSchemaBottomHeaderCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ChangeSchemaBottomHeaderCommand): void {\n\n\t\tconst schema = structure.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHeaderBottom(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangeSchemaBottomHeaderCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaBottomHeaderChangedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler implements CommandHandler<StructureAggregate, ChangeSchemaTopHeaderCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangeSchemaTopHeaderCommand> {\n\t\treturn ChangeSchemaTopHeaderCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ChangeSchemaTopHeaderCommand): void {\n\n\t\tconst schema = aggregate.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHeaderTop(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangeSchemaTopHeaderCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaTopHeaderChangedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<StructureAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowColoringCommand): void {\n\n\t\t// missing implementation\n\t\tconst schema = structure.getSchema(),\n\t\t\tcoloring = command.getColoring();\n\n\t\tschema.setRowColoring(coloring);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new RowColoringSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler implements CommandHandler<StructureAggregate, SetSchemaCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaCommand> {\n\t\treturn SetSchemaCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSchemaCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetSchemaCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangeSchemaBottomHeaderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangeSchemaTopHeaderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, 'StructureAggregate')\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\nimport { structureKey } from '../structure.module';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\nimport { structureKey } from '../structure.module';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../command/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from '../../domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\nimport { structureKey } from '../structure.module';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetAggregationEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../../../ui-api/structure/structure-read-model.service';\nimport { StructureSearchPlaceholderArchive } from '../../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\" \n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\t\t\t<svg class=\"gui-header-menu-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.32\" height=\"10.32\" viewBox=\"0 0 10.32 10.32\">\n\t\t\t\t<line x1=\"8.82\" transform=\"translate(0.75 5.16)\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n\t\t\t\t\t  stroke-width=\"1.5\"/>\n\t\t\t\t<line x1=\"8.82\" transform=\"translate(0.75 0.75)\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n\t\t\t\t\t  stroke-width=\"1.5\"/>\n\t\t\t\t<line x1=\"8.82\" transform=\"translate(0.75 9.57)\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n\t\t\t\t\t  stroke-width=\"1.5\"/>\n\t\t\t</svg>\n\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../../../ui-api/structure/structure-command.service';\nimport { CompositionReadModelService } from '../../../../../../composition/ui-api/composition-read-model.service';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../composition/domain/composition-id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-header-cell gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Count</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './structure.aggregation-config.service';\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationPanelComponent } from './structure.aggregation-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureAggregationPanelComponent\n\t],\n\texports: [\n\t\tStructureAggregationPanelComponent\n\t],\n\tproviders: [\n\t\tStructureAggregationArchive,\n\t\tStructureAggregationConfigService,\n\t\tStructureAggregationPanelConfigConverter\n\t]\n})\nexport class StructureAggregationPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, AggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements AggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n}\n","import { Component, Input, SimpleChange, SimpleChanges } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandService } from '../../../../ui-api/source/source-command.service';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../ui/structure-fabric.imports';\nimport { StructurePagingModule } from '../ui/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../ui/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from '../ui/structure.component';\nimport { StructureHeaderComponent } from '../ui/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../ui/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../ui/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../ui/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../ui/content/structure-content.component';\nimport { StructureRowComponent } from '../ui/content/row/structure-row.component';\nimport { StructureCellComponent } from '../ui/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../ui/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../ui/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../ui/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../ui/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure/structure-tokens';\nimport { StructureDefinition } from '../ui/structure-definition';\nimport { SourceReadModelService } from './source/source-read-model.service';\nimport { StructureIdGenerator } from '../ui/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure/structure.providers';\nimport { StructureModuleConfig } from '../ui/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../ui/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../ui/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../ui/header/menu/structure.column-menu.module';\nimport { StructureAggregationPanelModule } from '../ui/panel/aggregation/structure.aggregation-panel.module';\nimport { StructureColumnManagerModule } from '../ui/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/command/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/command/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { schemaCommandHandlers } from './schema/schema.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../ui/content/cell/edit/structure.cell-edit.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...schemaCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureAggregationPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui-api/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}