{"version":3,"file":"generic-ui-ngx-grid.js","sources":["ng://@generic-ui/ngx-grid/gui/grid/feature-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/structure-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/structure-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/common/cdk/pure-component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/read/schema.global-id.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/read/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/structure-paging.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/structure-search.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/icon/structure.filter-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/column-selector/structure.column-selector.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/feature-api/grid.module.ts"],"sourcesContent":["export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any) => string;\n}\n\nexport interface GuiTitlePanel {\n\tenabled?: boolean\n\ttemplate?: string | ((title: any) => string);\n}\n\nexport interface GuiFooterPanel {\n\tenabled?: boolean\n\ttemplate?: string | ((title: any) => string);\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../feature-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../lib/structure/domain/structure/summaries/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../grid.index';\n\n\nexport class GridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../feature-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/column/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../feature-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../feature-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnSummariesConverter } from './summaries/grid.column-summaries.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../feature-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/schema/domain/theme/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../feature-api/grid.api';\nimport { RowColoring } from '../../../../../lib/schema/feature-api/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../feature-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/feature-api/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/feature/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../feature-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering, GuiFooterPanel,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme, GuiTitlePanel\n} from '../../feature-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/feature-api/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\nimport { SchemaTheme } from '../../../../lib/schema/domain/theme/schema-theme';\nimport { RowColoring } from '../../../../lib/schema/feature-api/row-coloring';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/feature/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"gui-grid\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../feature-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class StructurePagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagingConfig } from '../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { PagingConfig } from './paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class StructurePagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../feature-api/paging/read/paging';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate pagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../feature-api/paging/read/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../feature-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../feature-api/paging/read/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../feature-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.11.3\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../feature-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../feature-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaTheme>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaTheme>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaTheme> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaTheme>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellValue } from '../../feature-api/read/definition/cell-value';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../feature-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../feature-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../feature-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../feature-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, Attribute, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from './paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructurePagingCommandDispatcher } from '../../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../domain/paging/paging.manager-factory';\nimport { PagingDispatcher } from '../../../domain/paging/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends StructurePagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { StructurePagingWarehouse } from '../../../feature-api/paging/structure-paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../feature-api/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends StructurePagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from './read/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from './read/selected-rows/selected-rows-list';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../feature-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../feature-api/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../feature-api/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../feature-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../feature-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../feature-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../feature-api/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../structure.global-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { structureGlobalId } from '../../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../../domain/paging/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/read/formation';\nimport { Paging } from '../paging/read/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/read/formation.converter';\nimport { PagingConverter } from '../paging/read/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../feature-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../feature-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/feature-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../feature-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../feature-api/field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../feature-api/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../feature-api/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/feature-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/feature-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../schema/feature-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../schema/feature-api/theme/schema.theme.repository';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../structure/domain/structure.id';\nimport { structureGlobalId } from '../../structure/feature-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../structure/feature-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../schema/feature-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../schema/feature-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../schema/feature-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\n\nexport const localProviders = [\n\t{ provide: StructurePagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: StructurePagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../feature-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","export class ColumnMenuConfig {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SummariesConfig } from '../../feature-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../feature-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../../feature-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../feature-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../feature-api/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/feature-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../schema/feature-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../title-panel/title-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../title-panel/structure.title-panel.config-archive';\nimport { FooterPanelConfig } from '../footer-panel/footer-panel.config';\nimport { StructureFooterPanelConfigArchive } from '../footer-panel/structure.footer-panel.config-archive';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected pagingCommandService: StructurePagingCommandDispatcher,\n\t\tprotected pagingEventService: StructurePagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { NextPageEvent } from '../../domain/paging/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class StructurePagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureWarehouse\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from './phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { Component, Inject, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../feature-api/read/structure.read-model-root';\nimport { StructurePagingCommandDispatcher } from '../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../feature-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../feature-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../feature-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/feature-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../feature-api/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../schema/feature-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { StructureTitlePanelConfigArchive } from './title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './footer-panel/structure.footer-panel.config-archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tpagingEventService: StructurePagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from './read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './read/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../feature-api/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../feature-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tconst parentElement = this.elementRef.nativeElement.querySelector('.gui-cell-edit-mode');\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: parentElement\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil, auditTime } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from './enabled/structure.searching.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchWarehouse {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { Paging } from '../../feature-api/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { StructureSearchWarehouse } from '../../feature-api/search/structure-search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../feature-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../title-panel/structure.title-panel.config-archive';\nimport { TitlePanelConfig } from '../title-panel/title-panel.config';\nimport { StructureFooterPanelConfigArchive } from '../footer-panel/structure.footer-panel.config-archive';\nimport { FooterPanelConfig } from '../footer-panel/footer-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../domain/paging/set/paging-set.event';\nimport { PrevPageEvent } from '../../../domain/paging/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../domain/paging/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../domain/paging/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './feature-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../feature-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './feature-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../../summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../domain/structure/search/config/structure.config-searching-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/structure/field/init/fields-inited.event';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event instanceof StructureSummariesChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\tthrow new Error('COMPOSITION ID IS MISSING');\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tnull,\n\t\t\tthis.columns,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../paging/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../paging/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../paging/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from './read/paging.repository';\nimport { PagingManagerFactory } from '../../domain/paging/paging.manager-factory';\nimport { PagingConverter } from './read/paging.converter';\nimport { StructurePagingCommandDispatcher } from './structure-paging.command-dispatcher';\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructurePagingEventRepository } from './structure-paging.event-repository';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingManagerFactory,\n\tPagingConverter,\n\n\tStructurePagingCommandDispatcher,\n\tStructurePagingWarehouse,\n\tStructurePagingEventRepository\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from './read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from './read/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../feature-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tconst structureId = event.getAggregateId();\n\n\t\tif (event instanceof StructureCreatedEvent) {\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event instanceof StructureSummariesEnabledSetEvent) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../domain/structure/field/data-type/field.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from './search/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from './filter/read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from './search/enabled/structure.searching.repository';\nimport { StructureSearchWarehouse } from './search/structure-search.warehouse';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { pagingProviders } from './paging/paging.providers';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from './search/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from './search/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from './search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from './search/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureCreatedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSummariesEnabledSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchWarehouse,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...pagingProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n<!--\t\t<gui-structure-filter-menu-trigger></gui-structure-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../../../feature-api/structure.warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../feature-api/search/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-filter-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureFilterIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-filter-menu',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-column-selector\n\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">\n\t\t</gui-structure-column-selector>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-filter-menu]': 'true'\n\t}\n})\nexport class StructureFilterMenuComponent {\n\n\tselectedColumnId: string;\n\n\tonColumnSelect(value: string): void {\n\t\tthis.selectedColumnId = value;\n\t}\n}\n","import { Component, Inject, Injector } from '@angular/core';\nimport { FabricDrawerService } from '@generic-ui/fabric';\nimport { structureComponentToken } from '../structure-component-token';\nimport { StructureComponent } from '../structure.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\n\n@Component({\n\tselector: 'gui-structure-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-structure-filter-icon-wrapper\">\n\t\t\t<gui-structure-filter-icon></gui-structure-filter-icon>\n\t\t</div>\n\t`\n})\nexport class StructureFilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(structureComponentToken) private readonly structureComponent: StructureComponent) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst structureElement = this.structureComponent.getElementRef();\n\n\t\tthis.drawerService.open(structureElement, StructureFilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-structure-column-selector',\n\ttemplate: `\n\n\t\t<gui-select\n\t\t\t\t[options]=\"options\"\n\t\t\t\t(optionChanged)=\"onSelectChange($event)\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnSelectorComponent extends SmartComponent {\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<string>();\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\toptions: Array<string> = [];\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.options = columns.map((column: CellTemplateWithContext) => column.getColumnDefinitionId().toString());\n\t\t\t});\n\t}\n\n\tonSelectChange(columnId: string): void {\n\t\tthis.columnSelected.emit(columnId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureFilterIconComponent } from './icon/structure.filter-icon.component';\nimport { StructureFilterMenuTriggerComponent } from './structure.filter-menu-trigger.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\nimport { StructureColumnSelectorComponent } from './column-selector/structure.column-selector.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureFilterIconComponent,\n\t\tStructureFilterMenuComponent,\n\t\tStructureFilterMenuTriggerComponent,\n\t\tStructureColumnSelectorComponent\n\t],\n\texports: [\n\t\tStructureFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tStructureFilterMenuComponent\n\t]\n})\nexport class StructureFilterMenuModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\nimport { StructureFilterMenuModule } from '../../filter/structure.filter-menu.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tStructureFilterMenuModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../feature-api/structure.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../../../composition/feature-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../feature-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaCssClassesEventHandler extends DomainEventHandler<SchemaId> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent | RowColoringSetEvent | SchemaHorizontalGridSetEvent | SchemaVerticalGridSetEvent): void {\n\n\t\tif (event instanceof RowColoringSetEvent) {\n\t\t\tthis.rowColoring = event.getRowColoring();\n\t\t}\n\n\t\tif (event instanceof SchemaHorizontalGridSetEvent) {\n\t\t\tthis.horizontalGrid = event.getHorizontalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaVerticalGridSetEvent) {\n\t\t\tthis.verticalGrid = event.getVerticalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.schemaTheme = event.getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setTheme(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler extends DomainEventHandler<SchemaId> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.themeRepository.setTheme(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaCssClassesEventHandler,\n\t\t\tmulti: true\n\t\t}, {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaThemeSetEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { TitlePanelConfig } from './title-panel.config';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { FooterPanelConfig } from './footer-panel.config';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { StructurePagingModule } from '../feature/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/feature-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../feature/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../schema/feature-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/footer-panel/structure.footer-panel.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider, Compiler } from '@angular/core';\n\nimport { GridComponent } from '../feature/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/feature-api/structure.module';\n\nimport { GridIdGenerator } from '../feature/grid/register/grid-id.generator';\nimport { GridRegister } from '../feature/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"],"names":["selector","tslib_1.__decorate","Optional","commandProviders","readProviders","declarations","exportDeclarations","imports","providers","entryComponents"],"mappings":"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"}