{"version":3,"file":"generic-ui-ngx-grid.js","sources":["../../build-cli/projects/ngx-grid/src/l10n/core/domain/lang/en.ts","../../build-cli/projects/ngx-grid/src/l10n/core/api/default-translation.ts","../../build-cli/projects/ngx-grid/src/gui/grid/core/api/gui.grid.public-api.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/data-type.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/gui.grid.column-type.converter.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.type.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/summaries/gui.grid.column-summaries.converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/cell-view.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/gui.grid.column-view.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/sorting/gui.grid.column-sorting.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/cell-editing/gui.grid.column-cell-editing.converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-align.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/align/gui.grid.column-align.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/gui.grid.column.converter.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/theme/schema-theme.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/theme/gui.grid.theme.converter.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/row-coloring/row-coloring.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/theme/coloring/gui.grid.row-coloring.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/menu/gui.grid.column-menu.converter.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/mode/paging-display-mode.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/paging/gui.grid.paging.converter.ts","../../build-cli/projects/ngx-grid/src/common/cdk/generic-builder.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/row-selection.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/row-selection/gui.grid.row-selection.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/gui.grid-column.component.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/cell-editing/gui.grid.cell-edit.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/gui.grid-gateway.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-parent-component.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/register/gui.grid-id.generator.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/register/gui.grid.register.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/selected-row.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/api/gui.grid.api-provider.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/formation.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/formation.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/source.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/row-selected/row-selected.repository.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/source.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/formation.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/api/search.command-invoker.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/theme/gui.grid.theme.command-invoker.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/core/api/structure.command-invoker.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/core/modifier.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/class/class-modifier.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/style/style-name.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/style/style-modifier.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/attribute/attribute-modifier.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/paging.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/api/summaries.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/set-config/set-sorting.command.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/toggle/toggle-sort.command.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/order/set-sort-order.command.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/api/sorting.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/paging-definition.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-definition.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/gui.grid-structure-definition.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/gui.grid.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-fabric.imports.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/gui-component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/smart-component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/paging.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/mode/paging-display-mode.archive.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/paging-position.ts","../../build-cli/projects/ngx-grid/src/common/cdk/reactive/stream-closer.ts","../../build-cli/projects/ngx-grid/src/structure/common/css-class/css-class.ts","../../build-cli/projects/ngx-grid/src/structure/common/css-class/css-class.modifier.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/read/structure.read-model-root-id.ts","../../build-cli/projects/ngx-grid/src/structure/core/api/structure.id.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/paging.component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/pure-component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/select/paging-select.component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/paging.event-repository.ts","../../build-cli/projects/ngx-grid/src/common/cdk/logger/logger.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.domain-event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/page/page-changed.event.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/page/page-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.manager.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/set/set-paging.command.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/next-page/next-page.command.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/prev-page/prev-page.command.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure-aggregate.repository.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/set/paging-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/set/set-paging.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/next-page/next-page.event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/next-page/next-page.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/prev-page/prev-page.event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/core/api/structre.key.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/read/paging.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/read/paging.converter.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/read/structure.read-model-repository.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/read/paging.repository.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain-read/paging.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.domain.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain-read/paging.domain.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/paging.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/basic/navigator/paging-navigator.component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/basic/stats/paging-stats.component.ts","../../build-cli/projects/ngx-grid/src/l10n/core/api/translation.api-module.ts","../../build-cli/projects/ngx-grid/src/l10n/core/api/translation.facade.ts","../../build-cli/projects/ngx-grid/src/l10n/feature/translation.pipe.ts","../../build-cli/projects/ngx-grid/src/l10n/core/domain/dictionary.ts","../../build-cli/projects/ngx-grid/src/l10n/core/domain/translation.domain-facade.ts","../../build-cli/projects/ngx-grid/src/l10n/feature/translation.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/paging.feature-module.ts","../../build-cli/projects/ngx-grid/src/common/cdk/number-formatter/number-formatter.pipe.ts","../../build-cli/projects/ngx-grid/src/common/cdk/number-formatter/number-formatter.module.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/static-component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.read-model-root-id.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.id.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/schema/structure.theme.converter.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.id.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.read-model-root-id.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/panel/info/structure.info-panel.config.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/panel/info/structure.info-panel.archive.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/info/structure.info-panel.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.warehouse.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/structure.column-manager.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/icon-component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/structure.column-manager.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/panel/info/structure.info-panel.config-converter.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/row-coloring/schema-row-coloring.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/structure.schema-manger.component.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/schema-manager.module.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/counter/filter/active-filter-menu.component.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/counter/filter/active-filter.service.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/icon/filter-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/read/field-read-model.archive.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/field.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/read/filter-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/read/quick-filter-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/type/filter-type-map.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/type/filter-type.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/active/active-filter.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/unique/unique-values.read-model.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/unique/unique-values.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/filter.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/config/set-config-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/add/add-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove/remove-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/filter.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/filter-menu.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/config/filter-container-token.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/filter-menu-trigger.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/column-selector/column-selector.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/value/filter-value.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/field-selector/field-selector.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/toggle/toggle-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/toggle/filter-toggled.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/add/add-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/config/config-filter-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/config/set-config-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.settings.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/base-filter-type.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/filter-type.id.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/filter-type.id-generator.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/type/filter-type.read-model.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/filter-type.manager.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/filter.id.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/filter.id-generator.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/active/active-filter.read-model.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.manager.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/read/config-filter-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/init/filter-types-inited.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/active-filters-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/active/active-filters-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/unique/unique-value.read-model.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/init/fields-inited.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/filter.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/active-filters/active-filter-list.component.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/api/search.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/active-filters/search/active-search.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/active-filters/active-filter-list.module.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/filter-menu.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/counter/source-counter.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/info/structure.info-panel.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-id.generator.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/schema/schema-css-class.manager.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/domain/edit/cell-editor.manager.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.cell-edit.archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.cell-edit.store.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.edit-mode.archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-component-token.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/event/editem-item.values.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/event/source-event.service.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/selected-row-changed.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/formation.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.cell-edit.state.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/api/search.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/panel/info/structure.info-panel-config.service.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/init/init-fields.command.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/field.command-invoker.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/field/column-field.id.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/column.params.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/column/structure-column.input-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/field/column-field.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/field/colum-field.factory.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/type/row-selection-type.archive.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/styling/schema.row-class.archive.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/styling/schema.row-style.archive.ts","../../build-cli/projects/ngx-grid/src/structure/core/api/structure.initial-values-ready.archive.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/column/auto/column-auto.configurator.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/structure.gateway.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/structure.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/structure-header-top-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/dynamically-created-component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/row-detail/structure.row-detail.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/toggle/sort-toggled.event.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/set-config/sorting-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/order/sort-order-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/sorting.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/api/sorting.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/feature/sorting.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/config/set-config-searching.command.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/config/config-searching-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/config/set-config-searching.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/set-phrase/set-search-phrase.command.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/set-phrase/search-phrase-set.domain-event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/set-origin/origin-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/structure.summaries-changed.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/source.domain-event.publisher.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/set-phrase/structure.set-search-phrase.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.manager.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/highlight/search-highlight.archive.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/placeholder/search-placeholder.archive.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/search-phrase.archive.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/search-phrase-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/enabled/searching-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/enabled/config-searching-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain-read/search.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain-read/search.domain-event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/api/search.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/search/feature/icon/search-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/search/feature/search.component.ts","../../build-cli/projects/ngx-grid/src/structure/search/feature/search.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/read/field.read-model.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/read/field.ui-converter.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field-collection.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/base-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/unknown-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/number-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/string-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/boolean-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/date-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/matcher/field.matchers.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/data-field.factory.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/field.id.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/field-id.generator.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/field.factory.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field-collection.factory.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/init/init-fields.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/read/fields-inited.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/field.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/field/feature/field.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/read/source.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/source.converter.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/loading/set-source-loading.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/loading/source-set-loading.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/loading/source-set-loading.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/set-origin/set-origin.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/source.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/origin-item-entity.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/origin-id.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/core/source.manager.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/core/row-select-toggle-type.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/core/formation-manager.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/core/formation.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/core/source.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/row-selected.read-model.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/structure.source-origin.archive.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/structure.origin-changed.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/prepared/structure.prepared-items.archive.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/prepared/structure.prepared-items.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/source.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain-read/source.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/source.domain.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/source.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/source.feature-module.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.domain-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/theme/schema-theme-set.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/row-coloring/row-coloring-set.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/schema-created.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/schema-created.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.aggregate.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/schema.aggregate-factory.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.aggregate-repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","../../build-cli/projects/ngx-grid/src/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","../../build-cli/projects/ngx-grid/src/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/create-schema.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/create-schema.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/theme/set-schema-theme.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/theme/set-schema-theme.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/row-coloring/set-row-coloring.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/css-classes/schema-css-class.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.key.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/theme/schema.theme.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.domain-module.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.dispatcher.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/schema.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.domain-event-repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.api-module.ts","../../build-cli/projects/ngx-grid/src/schema/feature/schema.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/api/summaries.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.manager.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/enabled/summaries-enabled-archive.service.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/enabled/structure.summaries-enabled-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.providers.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/summaries.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.manager.factory.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/api/summaries.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/config/structure.summaries-panel.config.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/config/structure.summaries-config.archive.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain-read/summaries.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/config/structure.summaries-panel.config-converter.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain-read/summaries.domain-event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/api/summaries.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/feature/structure.summaries-translations.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/feature/panel/structure.summaries-panel.component.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/feature/summaries.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/sort-order.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/cell-template-with-context.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/config/structure.column-config.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/structure.column-config.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/column/structure-header-columns.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/filters/structure-header-filters.component.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/api/vertical-formation.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/structure-header.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/changed-value.emitter.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/filters/structure.header-filter.component.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/structure-created.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/api/vertical-formation.read-model.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/api/vertical-formation.converter.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/read/structure.read-model-root.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/core/item/item.entity.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/read/structure.read-model-root-converter.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/api/vertical-formation.repository.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/structure-content.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/row/structure-row.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/state/edit.event-type.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/column/column.id.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/cell/structure.cell.component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/resize-detector/resize.detector.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/structure-container.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/structure-tokens.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/blueprint/structure.blueprint.component.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/add/filter-added.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-range.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-formation.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-formation.factory.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/init/fields-inited.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/structure-created.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/common/cdk/decorators.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.aggregate.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/structure.sorter.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/api/sorter.id.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/sorter.collection.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-value.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-value-id.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-value.id-generator.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-value-collection.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-filter-manager.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.aggregate-factory.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/structure-created.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/create-structure.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/structure.providers.ts","../../build-cli/projects/ngx-grid/src/common/cdk/logger/console.logger.ts","../../build-cli/projects/ngx-grid/src/common/cdk/logger/logger.module.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/core/item/item.entity-factory.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/top/structure.top-panel.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/top/structure.top-panel.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/trigger/structure.column-config-trigger.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/unique/unique-value-list.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/unique/unique-value-list.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/structure.column-menu.module.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/create-structure-command-handler.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/empty/empty-source.component.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/empty/empty-source.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/column/select-all/select-all.component.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain-read/vertical-formation.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/api/vertical-formation.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/feature/vertical-formation.feature-module.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.key.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/composition-container-width.calculator.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.domain-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-width/composition-width-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-width/column-width-type.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-width/column-width.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/composition-width.calculator.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-width/column-width-collection.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/active/active-column.container.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/view.entity.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/abstract-column.entity.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column.entity.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/active/active-column.entity.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/active/active-column.entity-converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/composition.columns-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/create/composition-created.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/create/composition-created.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/group/group.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/group/group.id.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/empty-group.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.aggregate.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/column.presentation.converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-entity.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/composition.group.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.aggregate-factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.aggregate-repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/create/create-composition.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/create/create-composition.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.events.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/set-groups/composition.groups-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.event-converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/set-columns.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/set-columns.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-width/set-composition-width.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/left/composition.move-left-column.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/right/composition.move-right-column.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/set-groups/set-groups.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.dispatcher.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/change-sort.params.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/view-templates.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/template/template.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/view-template.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/view-template.repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/edit-templates.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/edit-template.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/edit-template.repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/cell-context.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/cell-value.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/cell-template-with-accessor.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/column-definition.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/column/column-definition-id.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/column-definition.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/composition.read-mode-root.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/composition.read-model-root-converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/composition.read-model-root-repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/set-groups/set-groups.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/highlight/column-highlight.manager.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/highlight/column-highlight.archive.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.domain-module.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/group/group.collection.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/group/composition-group.archive.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/compositon.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.domain-event-repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/composition.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/auto/domain.column-auto.configurator.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.api-module.ts","../../build-cli/projects/ngx-grid/src/common/cdk/sanitize/safe.pipe.ts","../../build-cli/projects/ngx-grid/src/common/cdk/sanitize/sanitize.module.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/edit-communication.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/input-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/string-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/number-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/date-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/feature/column/column-query.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/function/function-view.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/bar/bar-view.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/percentage/percentage-view.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/text/text-view.component.ts","../../build-cli/projects/ngx-grid/src/composition/feature/composition.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/group/structure-header-groups.component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/gate.ts","../../build-cli/projects/ngx-grid/src/structure/search/feature/gate/searching.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/searching/structure-searching.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/gate/paging.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/paging/structure-paging.gate.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/gate/selection.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/source/structure-selection.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/panel/structure-panel.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/feature/gate/structure-summaries.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","../../build-cli/projects/ngx-grid/src/schema/feature/gate/grid/theme-grid.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/source/source-loading.gate.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/feature/gate/vertical-formation.gate.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/feature/gate/structure-sorting.gate.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/gate/structure-filter.gate.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/gate/structure-quick-filters.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/structure.gates.ts","../../build-cli/projects/ngx-grid/src/structure/common/css-class/css-class.module.ts","../../build-cli/projects/ngx-grid/src/structure/common/structure-shared.module.ts","../../build-cli/projects/ngx-grid/src/common/cdk/resize-detector/resize-detector.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/structure.module.ts","../../build-cli/projects/ngx-grid/src/gui/grid/core/api/gui.grid.module.ts","../../build-cli/projects/ngx-grid/src/generic-ui-ngx-grid.ts"],"sourcesContent":["import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabHighlightColumn: 'Highlight',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateFunction = (cellValue?: any, item?: any, index?: number) => string;\n\nexport interface GuiMultiColumn {\n\n\theader?: string | ViewTemplateFunction;\n\n\tcolumns?: Array<GuiColumn>;\n\n}\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\theader?: string | ViewTemplateFunction;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: boolean | GuiColumnSorting;\n\n\tcellEditing?: boolean | GuiColumnCellEditing;\n\n\tformatter?: (item: any, index: number) => any;\n\n\tmatcher?: (item: any) => any;\n\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiRowStyle {\n\n\tstyle?: string;\n\n\tstyleFunction?: (source: any, index: number) => string;\n\n}\n\nexport interface GuiRowClass {\n\n\tclass?: string;\n\n\tclassFunction?: (source: any, index: number) => string;\n\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<string>;\n\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any, index: number) => string;\n\n}\n\nexport interface GuiTitlePanel {\n\n\tenabled?: boolean;\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiFooterPanel {\n\n\tenabled?: boolean\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiInfoPanel {\n\n\tenabled?: boolean;\n\n\tinfoDialog?: boolean;\n\n\tcolumnsManager?: boolean;\n\n\tschemaManager?: boolean;\n\n\tsourceSize?: boolean\n\n}\n\nexport enum GuiRowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum GuiRowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport interface GuiRowSelection {\n\n\tenabled?: boolean;\n\n\ttype?: string | GuiRowSelectionType;\n\n\tmode?: string | GuiRowSelectionMode;\n\n}\n\nexport interface GuiSelectedRow {\n\n\tsource?: any;\n\n\tindex: number;\n\n\titemId: any;\n\n}\n\nexport interface GuiLocalization {\n\n\ttranslation?: GuiTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport interface GuiCellEdit {\n\n\tenabled?: boolean;\n\n\trowEdit?: (value: any, item: any, index: number) => boolean;\n\n\tcellEdit?: (value: any, item: any, index: number) => boolean\n\n}\n\nexport type GuiTranslation = TranslationChange;\n\nexport const GuiDefaultTranslation = defaultTranslation;\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../core/api/gui.grid.public-api';\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nexport class GuiGridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../structure/summaries/core/domain/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../gui.grid.index';\n\n\nexport class GuiGridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tconst columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE,\n\tNG_TEMPLATE\n}\n","import { GuiCellView, ViewTemplateFunction } from '../../../core/api/gui.grid.public-api';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\nexport class GuiGridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateFunction): CellView | ViewTemplateFunction {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../composition/core/api/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../gui.grid.index';\n\nexport class GuiGridColumnSortingConverter {\n\n\tconvert(sortingConfig: boolean | GuiColumnSorting): ColumnSortingConfig {\n\n\t\tif (typeof sortingConfig === 'boolean') {\n\t\t\treturn {\n\t\t\t\tenabled: sortingConfig\n\t\t\t};\n\t\t} else {\n\t\t\treturn sortingConfig as any;\n\t\t}\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../gui.grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../composition/core/api/column/column-cell-editing.config';\n\nexport class GuiGridColumnCellEditingConverter {\n\n\tconvert(config: boolean | GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\tif (typeof config === 'boolean') {\n\t\t\treturn {\n\t\t\t\tenabled: config\n\t\t\t};\n\t\t}\n\n\t\treturn config as ColumnCellEditingConfig;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../core/api/gui.grid.public-api';\nimport { ColumnAlign } from '../../../../../../composition/core/domain/column/column-align';\n\nexport class GuiGridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn, GuiMultiColumn } from '../../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnTypeConverter } from './gui.grid.column-type.converter';\nimport { GuiGridColumnSummariesConverter } from './summaries/gui.grid.column-summaries.converter';\nimport { GuiGridColumnViewConverter } from './gui.grid.column-view.converter';\nimport { GuiGridColumnSortingConverter } from './sorting/gui.grid.column-sorting.converter';\nimport { GuiGridColumnCellEditingConverter } from './cell-editing/gui.grid.column-cell-editing.converter';\nimport { GuiGridColumnAlignConverter } from './align/gui.grid.column-align.converter';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\n\nexport class GuiGridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GuiGridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GuiGridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GuiGridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GuiGridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GuiGridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GuiGridColumnAlignConverter();\n\n\tconvert(configs: Array<GuiColumn | GuiMultiColumn>): Array<ColumnConfig | MultiColumnConfig> {\n\n\t\treturn configs.map((config) => {\n\n\t\t\tif ((config as GuiMultiColumn).columns !== undefined) {\n\n\t\t\t\tconst columns = ((config as GuiMultiColumn).columns).map((c) => this.convertColumn(c));\n\n\t\t\t\treturn {\n\t\t\t\t\theader: config.header,\n\t\t\t\t\tcolumns: columns\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\treturn this.convertColumn(config);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tconst columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.formatter !== undefined && guiColumn.formatter !== null) {\n\t\t\tcolumnConfig.formatter = guiColumn.formatter;\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\tif ((guiColumn as any).templateRef !== undefined && (guiColumn as any).templateRef !== null) {\n\t\t\tcolumnConfig.templateRef = (guiColumn as any).templateRef;\n\t\t\tcolumnConfig.view = CellView.NG_TEMPLATE;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\n\n\nexport class GuiGridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../../core/api/gui.grid.public-api';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\n\n\nexport class GuiGridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../core/api/gui.grid.public-api';\n\nimport { ColumnMenuConfig } from '../../../../../../structure/grid/core/api/column-menu-config';\n\n@Injectable()\nexport class GuiGridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../core/api/gui.grid.public-api';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/paging-config';\n\n\nexport class GuiGridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tconst pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { GuiRowSelection, GuiRowSelectionMode, GuiRowSelectionType } from '../../../core/api/gui.grid.public-api';\nimport { RowSelection, RowSelectionMode, RowSelectionType } from '../../../../../structure/source/core/api/row-selection';\n\nexport class GuiGridRowSelectionConverter {\n\n\tconvert(selection: boolean | GuiRowSelection): RowSelection {\n\n\t\tconst builder = new RowSelection.Builder();\n\n\t\tif (typeof selection === 'boolean') {\n\t\t\treturn builder.withEnabled(selection).build();\n\t\t} else {\n\n\t\t\tif (selection.enabled !== undefined) {\n\t\t\t\tbuilder.withEnabled(selection.enabled);\n\t\t\t}\n\n\t\t\tif (selection.mode !== undefined) {\n\t\t\t\tconst mode = this.convertMode(selection.mode);\n\n\t\t\t\tbuilder.withMode(mode);\n\t\t\t}\n\n\t\t\tif (selection.type !== undefined) {\n\t\t\t\tconst type = this.convertType(selection.type);\n\n\t\t\t\tbuilder.withType(type);\n\t\t\t}\n\n\t\t\treturn builder.build();\n\t\t}\n\n\t}\n\n\tprivate convertMode(mode: string | GuiRowSelectionMode): RowSelectionMode {\n\n\t\tif (typeof mode === 'string') {\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'single':\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t\tcase 'multiple':\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mode) {\n\n\t\t\t\tcase GuiRowSelectionMode.SINGLE:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\n\t\t\t\tcase GuiRowSelectionMode.MULTIPLE:\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate convertType(type: string | GuiRowSelectionType): RowSelectionType {\n\n\t\tif (typeof type === 'string') {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'row':\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase GuiRowSelectionType.ROW:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\n\t\t\t\tcase GuiRowSelectionType.CHECKBOX:\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\nimport {\n\tFieldAccessor,\n\tGuiCellView,\n\tGuiColumn,\n\tGuiColumnAlign,\n\tGuiColumnCellEditing,\n\tGuiColumnSorting,\n\tGuiColumnSummaries,\n\tGuiDataType,\n\tViewTemplateFunction\n} from '../../../core/api/gui.grid.public-api';\n\n@Component({\n\tselector: 'gui-grid-column',\n\ttemplate: ''\n})\nexport class GuiGridColumnComponent implements GuiColumn {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n\t@Input()\n\tfield?: string | FieldAccessor;\n\n\t@Input()\n\ttype?: string | GuiDataType;\n\n\t@Input()\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\t@Input()\n\theader?: string | ViewTemplateFunction;\n\n\t@Input()\n\twidth?: string | number;\n\n\t@Input()\n\tenabled?: boolean;\n\n\t@Input()\n\talign?: string | GuiColumnAlign;\n\n\t@Input()\n\tsummaries?: GuiColumnSummaries;\n\n\t@Input()\n\tsorting?: boolean | GuiColumnSorting;\n\n\t@Input()\n\tcellEditing?: boolean | GuiColumnCellEditing;\n\n\t@Input()\n\tformatter?: (item: any, index: number) => any;\n\n\t@Input()\n\tmatcher?: (item: any) => any;\n\n}\n","import { CellEditConfig } from '../../../../../../structure/grid/core/api/edit/cell-edit.config';\nimport { GuiCellEdit } from '../../../../core/api/gui.grid.public-api';\n\n\nexport class GuiGridCellEditConverter {\n\n\tconvert(config: boolean | GuiCellEdit): CellEditConfig {\n\n\t\tif (typeof config === 'boolean') {\n\t\t\treturn {\n\t\t\t\tenabled: config\n\t\t\t};\n\t\t}\n\n\t\treturn config;\n\t}\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, Input, OnChanges, Output, QueryList } from '@angular/core';\n\nimport {\n\tGuiCellEdit,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiLocalization,\n\tGuiMultiColumn,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowClass,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiRowSelection,\n\tGuiRowStyle,\n\tGuiSearching,\n\tGuiSelectedRow,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnConverter } from './column/gui.grid.column.converter';\nimport { GuiGridThemeConverter } from './theme/gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './theme/coloring/gui.grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../structure/grid/core/api/column-menu-config';\nimport { GuiGridColumnMenuConverter } from './column/menu/gui.grid.column-menu.converter';\nimport { GuiGridPagingConverter } from './paging/gui.grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { RowColoring } from '../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiGridRowSelectionConverter } from './row-selection/gui.grid.row-selection.converter';\nimport { RowSelection } from '../../../../structure/source/core/api/row-selection';\nimport { SelectedRow } from '../../../../structure/source/core/api/formation/selected-row';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { GuiGridColumnComponent } from './column/gui.grid-column.component';\nimport { GuiGridCellEditConverter } from './column/cell-editing/gui.grid.cell-edit.converter';\nimport { CellEditConfig } from '../../../../structure/grid/core/api/edit/cell-edit.config';\n\n@Directive()\nexport abstract class GuiGridGateway implements OnChanges, AfterContentInit {\n\n\t@ContentChildren(GuiGridColumnComponent)\n\tguiGridColumnComponent: QueryList<GuiGridColumnComponent>;\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn | GuiMultiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelection: boolean | GuiRowSelection;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean | GuiCellEdit;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<GuiSelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig | MultiColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\trowSelectionConfig: RowSelection;\n\n\tcellEditingConfig: CellEditConfig;\n\n\tprotected readonly gridColumnConverter: GuiGridColumnConverter = new GuiGridColumnConverter();\n\n\tprotected readonly gridThemeConverter: GuiGridThemeConverter = new GuiGridThemeConverter();\n\n\tprotected readonly gridRowColoringConverter: GuiGridRowColoringConverter = new GuiGridRowColoringConverter();\n\n\tprotected readonly gridColumnMenuConverter: GuiGridColumnMenuConverter = new GuiGridColumnMenuConverter();\n\n\tprotected readonly gridPagingConverter: GuiGridPagingConverter = new GuiGridPagingConverter();\n\n\tprotected readonly gridRowSelectionConverter: GuiGridRowSelectionConverter = new GuiGridRowSelectionConverter();\n\n\tprotected readonly guiGridCellEditConverter: GuiGridCellEditConverter = new GuiGridCellEditConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: NgChanges<GuiGridGateway>): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\tif (changes.rowSelection !== undefined && changes.rowSelection.currentValue !== undefined) {\n\t\t\tthis.rowSelectionConfig = this.gridRowSelectionConverter.convert(this.rowSelection);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.cellEditingConfig = this.guiGridCellEditConverter.convert(this.cellEditing);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tngAfterContentInit() {\n\t\tif (this.guiGridColumnComponent && this.guiGridColumnComponent.toArray().length > 0) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.guiGridColumnComponent.toArray());\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonRowsSelect(rows: Array<SelectedRow>): void {\n\n\t\tconst guiRows: Array<GuiSelectedRow> = rows.map((row) => {\n\t\t\treturn {\n\t\t\t\tindex: row.getIndex(),\n\t\t\t\tsource: row.getSource(),\n\t\t\t\titemId: row.getItemId()\n\t\t\t};\n\t\t});\n\n\t\tthis.selectedRows.emit(guiRows);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuiGridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGuiGridIdGenerator.index++;\n\n\t\treturn GuiGridIdGenerator.PREFIX + GuiGridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiGridComponent } from '../gui.grid.component';\n\n@Injectable()\nexport class GuiGridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GuiGridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly source: OriginItemEntity;\n\n\tconstructor(source: OriginItemEntity,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.source = source;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetSource(): OriginItemEntity {\n\t\treturn this.source;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { GuiRowColoring, GuiSelectedRow, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { FormationCommandInvoker } from '../../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { SourceCommandInvoker } from '../../../../../structure/source/core/api/source.command-invoker';\nimport { SelectedRow } from '../../../../../structure/source/core/api/formation/selected-row';\nimport { FormationWarehouse } from '../../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../../structure/search/core/api/search.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { GuiGridThemeCommandInvoker } from '../theme/gui.grid.theme.command-invoker';\nimport { StructureCommandInvoker } from '../../../../../structure/core/api/structure.command-invoker';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/paging-config';\nimport { PagingCommandInvoker } from '../../../../../structure/paging/core/api/paging.command-invoker';\nimport { SearchConfig } from '../../../../../structure/search/core/api/search-config';\nimport { SummariesCommandInvoker } from '../../../../../structure/summaries/core/api/summaries.command-invoker';\nimport { SortingCommandInvoker } from '../../../../../structure/sorting/core/api/sorting.command-invoker';\nimport { SortingConfig } from '../../../../../structure/sorting/core/api/sorting-config';\n\n\nexport interface GuiGridApi {\n\n\tsetSource(source: Array<any>): void\n\n\tshowLoading(): void;\n\n\thideLoading(): void;\n\n\tgetSelectedRows(): Array<GuiSelectedRow>;\n\n\tselectAll(): void;\n\n\tunselectAll(): void;\n\n\tdeleteSelectedRows(): void;\n\n\tdeleteRow(row: GuiSelectedRow): void;\n\n\tdeleteRows(rows: Array<GuiSelectedRow>): void;\n\n\t/**\n\t * Paging\n\t */\n\tenablePaging(): void;\n\n\tdisablePaging(): void;\n\n\tnextPage(): void;\n\n\tprevPage(): void;\n\n\tchangePageSize(pageSize: number): void;\n\n\tsetPagingConfig(config: PagingConfig): void;\n\n\t/**\n\t * Searching\n\t */\n\tsetSearchingConfig(config: SearchConfig): void;\n\n\tsearch(phrase: string): void;\n\n\tclearSearchPhrase(): void;\n\n\t/**\n\t * View port\n\t */\n\tscrollToTop(): void;\n\n\tscrollToBottom(): void;\n\n\tscrollToRowByIndex(index: number): void;\n\n\t/**\n\t * Visual - Schema\n\t */\n\tsetTheme(theme: string | GuiTheme): void;\n\n\tsetVerticalGrid(enabled: boolean): void;\n\n\tsetHorizontalGrid(enabled: boolean): void;\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring): void;\n\n\t/**\n\t * Virtual scroll\n\t */\n\tenableVirtualScroll(): void;\n\n\tdisableVirtualScroll(): void;\n\n\t/**\n\t * Summaries\n\t */\n\tenableSummaries(): void;\n\n\tdisableSummaries(): void;\n\n\t/**\n\t * Sorting\n\t */\n\tsetSortConfig(config: SortingConfig): void;\n\n}\n\n\nexport class GuiGridApiProvider {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate readonly schemaId: SchemaReadModelRootId;\n\n\tprivate readonly formationCommandInvoker: FormationCommandInvoker;\n\n\tprivate readonly formationWarehouse: FormationWarehouse;\n\n\tprivate readonly sourceCommandInvoker: SourceCommandInvoker;\n\n\tprivate readonly searchCommandInvoker: SearchCommandInvoker;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly structureCommandInvoker: StructureCommandInvoker;\n\n\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker;\n\n\tprivate readonly sortingCommandInvoker: SortingCommandInvoker;\n\n\tprivate readonly pagingCommandInvoker: PagingCommandInvoker;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tschemaId: SchemaReadModelRootId,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tformationWarehouse: FormationWarehouse,\n\t\t\t\tsourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tgridThemeCommandInvoker: GuiGridThemeCommandInvoker,\n\t\t\t\tstructureCommandInvoker: StructureCommandInvoker,\n\t\t\t\tsummariesCommandInvoker: SummariesCommandInvoker,\n\t\t\t\tsortingCommandInvoker: SortingCommandInvoker,\n\t\t\t\tpagingCommandInvoker: PagingCommandInvoker) {\n\t\tthis.structureId = structureId;\n\t\tthis.schemaId = schemaId;\n\t\tthis.formationCommandInvoker = formationCommandDispatcher;\n\t\tthis.formationWarehouse = formationWarehouse;\n\t\tthis.sourceCommandInvoker = sourceCommandInvoker;\n\t\tthis.searchCommandInvoker = searchCommandInvoker;\n\t\tthis.gridThemeCommandInvoker = gridThemeCommandInvoker;\n\t\tthis.structureCommandInvoker = structureCommandInvoker;\n\t\tthis.summariesCommandInvoker = summariesCommandInvoker;\n\t\tthis.sortingCommandInvoker = sortingCommandInvoker;\n\t\tthis.pagingCommandInvoker = pagingCommandInvoker;\n\t}\n\n\tprovide(): GuiGridApi {\n\n\t\tconst structureId = this.structureId,\n\t\t\tschemaId = this.schemaId,\n\t\t\tfcd = this.formationCommandInvoker,\n\t\t\tfw = this.formationWarehouse,\n\t\t\tscd = this.sourceCommandInvoker,\n\t\t\tsearchCommandInvoker = this.searchCommandInvoker,\n\t\t\tgridThemeCommandInvoker = this.gridThemeCommandInvoker,\n\t\t\tstructureCommandInvoker = this.structureCommandInvoker,\n\t\t\tsummariesCommandInvoker = this.summariesCommandInvoker,\n\t\t\tsortingCommandInvoker = this.sortingCommandInvoker,\n\t\t\tpagingCommandInvoker = this.pagingCommandInvoker;\n\n\t\treturn {\n\n\t\t\tsetSource(source: Array<any>): void {\n\t\t\t\tscd.setOrigin(source, structureId);\n\t\t\t},\n\n\t\t\tshowLoading(): void {\n\t\t\t\tscd.setLoading(true, structureId);\n\t\t\t},\n\n\t\t\thideLoading(): void {\n\t\t\t\tscd.setLoading(false, structureId);\n\t\t\t},\n\n\t\t\tdeleteRow(row: GuiSelectedRow): void {\n\t\t\t\tscd.deleteRow(new SelectedRow(row.source, row.index, row.itemId), structureId);\n\t\t\t},\n\n\t\t\tdeleteRows(rows: Array<GuiSelectedRow>): void {\n\t\t\t\tconst selectedRows = rows.map((row: GuiSelectedRow) => new SelectedRow(row.source, row.index, row.itemId));\n\n\t\t\t\tscd.deleteRows(selectedRows, structureId);\n\t\t\t},\n\n\t\t\tdeleteSelectedRows(): void {\n\t\t\t\t// this.sourceCommandDispatcher.\n\t\t\t},\n\n\t\t\tgetSelectedRows(): Array<GuiSelectedRow> {\n\n\t\t\t\tconst rows = fw.getSelectedRows(structureId);\n\n\t\t\t\treturn rows.map((r: SelectedRow) => {\n\t\t\t\t\treturn { source: r.getSource(), index: r.getIndex(), itemId: r.getItemId() } as GuiSelectedRow;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tselectAll(): void {\n\t\t\t\tfcd.selectAll(structureId);\n\t\t\t},\n\n\t\t\tunselectAll(): void {\n\t\t\t\tfcd.unselectAll(structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Paging\n\t\t\t */\n\n\t\t\tenablePaging(): void {\n\t\t\t\tpagingCommandInvoker.enable(structureId);\n\t\t\t},\n\n\t\t\tdisablePaging(): void {\n\t\t\t\tpagingCommandInvoker.disable(structureId);\n\t\t\t},\n\n\t\t\tnextPage(): void {\n\t\t\t\tpagingCommandInvoker.nextPage(structureId);\n\t\t\t},\n\n\t\t\tprevPage(): void {\n\t\t\t\tpagingCommandInvoker.prevPage(structureId);\n\t\t\t},\n\n\t\t\tchangePageSize(pageSize: number): void {\n\t\t\t\tpagingCommandInvoker.changePageSize(pageSize, structureId);\n\t\t\t},\n\n\t\t\tsetPagingConfig(config: PagingConfig): void {\n\t\t\t\tpagingCommandInvoker.setPaging(config, structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Searching\n\t\t\t */\n\t\t\tsetSearchingConfig(config: SearchConfig): void {\n\t\t\t\tsearchCommandInvoker.setSearchingConfig(config, structureId);\n\t\t\t},\n\n\t\t\tsearch(phrase: string): void {\n\t\t\t\tsearchCommandInvoker.search(phrase, structureId);\n\t\t\t},\n\n\t\t\tclearSearchPhrase(): void {\n\t\t\t\tsearchCommandInvoker.search('', structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * View port\n\t\t\t */\n\n\t\t\tscrollToTop(): void {\n\t\t\t\tstructureCommandInvoker.scrollToTop(structureId);\n\t\t\t},\n\n\t\t\tscrollToBottom(): void {\n\t\t\t\tstructureCommandInvoker.scrollToBottom(structureId);\n\t\t\t},\n\n\t\t\tscrollToRowByIndex(index: number): void {\n\t\t\t\tstructureCommandInvoker.scrollToIndex(index, structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Visual - Schema\n\t\t\t */\n\n\t\t\tsetTheme(theme: string | GuiTheme): void {\n\t\t\t\tgridThemeCommandInvoker.setTheme(theme, schemaId, structureId);\n\t\t\t},\n\n\t\t\tsetVerticalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setVerticalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetHorizontalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setHorizontalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetRowColoring(rowColoring: string | GuiRowColoring): void {\n\t\t\t\tgridThemeCommandInvoker.setRowColoring(rowColoring, schemaId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Virtual scroll\n\t\t\t */\n\t\t\tenableVirtualScroll(): void {\n\t\t\t\tstructureCommandInvoker.enableVirtualScroll(structureId);\n\t\t\t},\n\n\t\t\tdisableVirtualScroll(): void {\n\t\t\t\tstructureCommandInvoker.disableVirtualScroll(structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Summaries\n\t\t\t */\n\t\t\tenableSummaries(): void {\n\t\t\t\tsummariesCommandInvoker.setSummariesEnabled(true, structureId);\n\t\t\t},\n\n\t\t\tdisableSummaries(): void {\n\t\t\t\tsummariesCommandInvoker.setSummariesEnabled(false, structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sorting\n\t\t\t */\n\t\t\tsetSortConfig(config: SortingConfig): void {\n\t\t\t\tsortingCommandInvoker.setSortingConfig(config, structureId);\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandInvoker } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setLoading(enabled: boolean, structureId: StructureId): void;\n\n\tabstract editItem(params: StructureEditSourceItemParams, structureId: StructureId): void;\n\n\tabstract editItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void;\n\n\tabstract deleteRow(row: SelectedRow, structureId: StructureId): void;\n\n\tabstract deleteRows(rows: Array<SelectedRow>, structureId: StructureId): void;\n\n\tabstract deleteItemByIndex(index: number, structureId: StructureId): void;\n\n\tabstract deleteItemById(itemId: OriginId, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getEntities(structureId: StructureId): ReadonlyArray<ItemEntity>;\n\n\tabstract onEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onEntitiesSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onOriginSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onLoading(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>>;\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { hermesMap, HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tconst selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tconst item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getSourceItem(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId): HermesObservable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getValueOrNullOrThrowError().getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId): HermesObservable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId): HermesObservable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from './search-config';\n\n\n@Injectable()\nexport abstract class SearchCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSearchingConfig(config: SearchConfig, structureId: StructureId): void;\n\n\tabstract search(phrase: string, structureId: StructureId): void;\n}\n","import { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiRowColoring, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { GuiGridThemeConverter } from './gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './coloring/gui.grid.row-coloring.converter';\n\nexport class GuiGridThemeCommandInvoker {\n\n\tconstructor(private readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly gridThemeConverter: GuiGridThemeConverter,\n\t\t\t\tprivate readonly gridRowColoringConverter: GuiGridRowColoringConverter) {\n\t}\n\n\tsetTheme(theme: string | GuiTheme, schemaId: SchemaReadModelRootId, structureId: StructureId): void {\n\t\tconst schemaTheme = this.gridThemeConverter.convert(theme);\n\n\t\tthis.schemaCommandInvoker.setTheme(schemaTheme, schemaId, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: RowColoring = this.gridRowColoringConverter.convert(rowColoring);\n\n\t\tthis.schemaCommandInvoker.setRowColoring(schemaRowColoring, schemaId);\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, schemaId);\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, schemaId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from './row-coloring/row-coloring';\n\n\n@Injectable()\nexport abstract class SchemaCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(schemaId: SchemaReadModelRootId): void;\n\n\tabstract setTheme(\n\t\ttheme: SchemaTheme,\n\t\tschemaId: SchemaReadModelRootId,\n\t\tstructureId: StructureId\n\t): void;\n\n\tabstract setRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { CellEditConfig } from '../../grid/core/api/edit/cell-edit.config';\n\n\n@Injectable()\nexport abstract class StructureCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(structureId: StructureId): void;\n\n\tabstract enableVirtualScroll(structureId: StructureId): void;\n\n\tabstract disableVirtualScroll(structureId: StructureId): void;\n\n\tabstract scrollToTop(structureId: StructureId): void;\n\n\tabstract scrollToBottom(structureId: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId: StructureId): void;\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setFilterConfig(config: FilterConfig, structureId: StructureId): void;\n\n\tabstract setQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void;\n\n\tabstract setRowHeight(rowHeight: number, structureId: StructureId): void;\n\n\tabstract setContainerHeight(height: number, structureId: StructureId): void;\n\n\tabstract setRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void;\n\n\tabstract setCellEdit(cellEdit: CellEditConfig, structureId: StructureId): void;\n\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import { AttributeModifierApi } from './attribute-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class AttributeModifier extends Modifier<AttributeModifierApi> {\n\n\tprivate static readonly AttributeModifier = class implements AttributeModifierApi {\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetAttribute(name: string, value: string): void {\n\t\t\tthis.htmlElement.setAttribute(name, value);\n\t\t}\n\n\t\tremoveAttribute(name: string): void {\n\t\t\tthis.htmlElement.removeAttribute(name);\n\t\t}\n\n\t};\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): AttributeModifierApi {\n\t\treturn new AttributeModifier.AttributeModifier(htmlElement);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport abstract class PagingCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract enable(structureId: StructureId): void;\n\n\tabstract disable(structureId: StructureId): void;\n\n\tabstract setPaging(paging: PagingConfig, structureId: StructureId): void;\n\n\tabstract changePageSize(pageSize: number, structureId: StructureId): void;\n\n\tabstract nextPage(structureId: StructureId): void;\n\n\tabstract prevPage(structureId: StructureId): void;\n\n\tabstract goToPage(pageNumber: number, currentPage: number, structureId: StructureId): void;\n\n\tabstract changePagerTop(enabled: boolean, structureId: StructureId): void;\n\n\tabstract changePagerBottom(enabled: boolean, structureId: StructureId): void;\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesConfig } from './summaries-config';\n\n\n@Injectable()\nexport abstract class SummariesCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSummariesEnabled(enabled: boolean, structureId: StructureId): void;\n\n\tabstract setConfig(config: SummariesConfig, structureId: StructureId): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\n/** @internal */\nexport const guiGridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnDestroy, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GuiGridGateway } from './gui.grid-gateway';\n\nimport { structureParentComponent } from '../../../../structure/grid/feature/structure-parent-component';\n\nimport { GuiGridIdGenerator } from './register/gui.grid-id.generator';\nimport { GuiGridRegister } from './register/gui.grid.register';\nimport { GuiGridApi, GuiGridApiProvider } from './api/gui.grid.api-provider';\nimport { FormationCommandInvoker } from '../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { SourceCommandInvoker } from '../../../../structure/source/core/api/source.command-invoker';\nimport { FormationWarehouse } from '../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../structure/search/core/api/search.command-invoker';\nimport { GuiGridThemeCommandInvoker } from './theme/gui.grid.theme.command-invoker';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandInvoker } from '../../../../structure/core/api/structure.command-invoker';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport { AttributeModifier } from '../../../../common/cdk/dom/attribute/attribute-modifier';\nimport { PagingCommandInvoker } from '../../../../structure/paging/core/api/paging.command-invoker';\nimport { SummariesCommandInvoker } from '../../../../structure/summaries/core/api/summaries.command-invoker';\nimport { SortingCommandInvoker } from '../../../../structure/sorting/core/api/sorting.command-invoker';\nimport { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\nimport { guiGridStructureDefinition } from './gui.grid-structure-definition';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './gui.grid.component.html',\n\tstyleUrls: [\n\t\t'../gui.grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: StructureDefinition,\n\t\t\tuseValue: guiGridStructureDefinition\n\t\t},\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GuiGridComponent\n\t\t}\n\t],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiGridComponent extends GuiGridGateway implements OnInit, OnDestroy {\n\n\tprivate static readonly GUI_GRID_ID = 'gui-grid-id';\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tpublic api: GuiGridApi;\n\n\tprivate localGridId: string;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly attributeModifier: AttributeModifier;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly gridRegister: GuiGridRegister,\n\t\t\t\tprivate readonly gridIdGenerator: GuiGridIdGenerator,\n\t\t\t\t// delegate\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly sourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tprivate readonly searchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly structureCommandDispatcher: StructureCommandInvoker,\n\t\t\t\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker\n\t) {\n\t\tsuper();\n\n\t\tthis.gridThemeCommandInvoker = new GuiGridThemeCommandInvoker(\n\t\t\tthis.schemaCommandInvoker,\n\t\t\tthis.gridThemeConverter,\n\t\t\tthis.gridRowColoringConverter\n\t\t);\n\n\t\tthis.classModifier = new ClassModifier(this.elementRef.nativeElement);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tthis.attributeModifier = new AttributeModifier(this.elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.classModifier.getHost().add('gui-grid');\n\t\t// this.styleModifier.getHost().setHeight(this.maxHeight);\n\n\t\tthis.initApi();\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn this.api;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.attributeModifier.getHost().setAttribute(GuiGridComponent.GUI_GRID_ID, this.localGridId);\n\t}\n\n\tprivate initApi(): void {\n\t\tthis.api = new GuiGridApiProvider(\n\t\t\tthis.structureRef.structureId,\n\t\t\tthis.structureRef.schemaReadModelRootId,\n\t\t\tthis.formationCommandDispatcher,\n\t\t\tthis.formationWarehouse,\n\t\t\tthis.sourceCommandDispatcher,\n\t\t\tthis.searchCommandInvoker,\n\t\t\tthis.gridThemeCommandInvoker,\n\t\t\tthis.structureCommandDispatcher,\n\t\t\tthis.summariesCommandInvoker,\n\t\t\tthis.sortingCommandInvoker,\n\t\t\tthis.pagingCommandInvoker\n\t\t).provide();\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n@Directive()\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, Directive, ElementRef, EventEmitter } from '@angular/core';\nimport { GuiComponent } from './gui-component';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n@Directive()\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\thermesSubscribe<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\thermesSubscribeWithoutRender<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t});\n\t}\n\n\t// for gate\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>,\n\t\tmapper: (value: V) => any = (value: V) => value\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(mapper(value));\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport abstract class PagingWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onPaging(structureId: StructureId): HermesObservable<Paging>;\n\n\tabstract oncePaging(structureId: StructureId): HermesObservable<Paging>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import { HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn hermesTakeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif ((this.unsubscribe$ as any).isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../common/css-class/css-class.modifier';\nimport { CssClass } from '../../common/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingDisplayModeArchive.on(),\n\t\t\t(mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandInvoker.changePageSize(pageSize, this.structureId);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandInvoker.nextPage(this.structureId);\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandInvoker.prevPage(this.structureId);\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { Directive, ElementRef } from '@angular/core';\n\n@Directive()\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: './paging-select.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: './alternative-paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandInvoker.goToPage(1, this.paging.getPage(), this.structureId);\n\t}\n\n\tlastPage(): void {\n\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandInvoker.goToPage(numberOfPages, this.paging.getPage(), this.structureId);\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: './alternative-paging-pages.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage, this.structureId);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onPageChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n\tabstract onPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private readonly logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract findById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'NextPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (const event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable, Reactive } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\n\t\tdomainEventBus\n\t\t\t.ofEvents(\n\t\t\t\tthis.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(structureId: StructureId): StructureReadModelRoot;\n\n\tabstract on(structureId: StructureId): HermesObservable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingRepository } from '../api/read/paging.repository';\nimport { Paging } from '../api/read/paging';\nimport { PagingWarehouse } from '../api/paging.warehouse';\n\n\n@Injectable()\nexport class PagingDomainWarehouse extends PagingWarehouse {\n\n\tconstructor(private readonly pagingRepository: PagingRepository) {\n\t\tsuper();\n\t}\n\n\tonPaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\toncePaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { PagingDispatcher } from './paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { Injectable } from '@angular/core';\nimport { PagingCommandInvoker } from '../api/paging.command-invoker';\n\n@Injectable()\nexport class PagingDomainCommandInvoker extends PagingCommandInvoker {\n\n\tconstructor(private readonly pagingDispatcher: PagingDispatcher) {\n\t\tsuper();\n\t}\n\n\tenable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number, structureId: StructureId) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage(structureId);\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage(structureId);\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingWarehouse } from '../api/paging.warehouse';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from '../api/read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { PagingEventRepository } from '../api/paging.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class PagingDomainEventRepository extends PagingEventRepository {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvents([\n\t\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t\t   ]\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPage())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvents([\n\t\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t\t   ]\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPageSize())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\nimport { PagingDomainWarehouse } from '../domain-read/paging.domain-warehouse';\nimport { PagingDomainCommandInvoker } from '../domain/paging.domain.command-invoker';\nimport { PagingDomainEventRepository } from '../domain-read/paging.domain.event-repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: PagingCommandInvoker,\n\t\t\tuseClass: PagingDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: PagingWarehouse,\n\t\t\tuseClass: PagingDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: PagingEventRepository,\n\t\t\tuseClass: PagingDomainEventRepository\n\t\t},\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: './paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: './paging-stats.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class TranslationFacade {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): HermesObservable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { Translation } from '../core/api/translation';\nimport { HermesSubscription } from '@generic-ui/hermes';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: HermesSubscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationFacade) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { TranslationFacade } from '../api/translation.facade';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\nimport { HermesObservable, HermesReplaySubject, HermesSubject } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class TranslationDomainFacade extends TranslationFacade {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: HermesSubject<Translation> = new HermesReplaySubject(1);\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): HermesObservable<Translation> {\n\t\treturn this.dictionary$.toObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { TranslationDomainFacade } from '../core/domain/translation.domain-facade';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t]\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationFacade, useClass: TranslationDomainFacade }];\n\t}\n\n\t// constructor(@Optional() apiModule: TranslationApiModule) {\n\t// \tsuper();\n\t// \tif (apiModule === null) {\n\t// \t\tthrow new Error('TranslationApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\t// constructor(@Optional() pagingApiModule: PagingApiModule) {\n\t// \tsuper();\n\t// \tif (pagingApiModule === null) {\n\t// \t\tthrow new Error('PagingApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectorRef, Directive, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\n@Directive()\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: './structure-info-modal.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: './structure.dialog-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\n\n@Injectable()\nexport abstract class SchemaWarehouse implements Warehouse {\n\n\tabstract onTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n\tabstract onCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass>;\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled: boolean = false;\n\n\tprivate readonly infoDialog: boolean = true;\n\n\tprivate readonly columnsManager: boolean = true;\n\n\tprivate readonly schemaManager: boolean = true;\n\n\tprivate readonly sourceSize: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from '../../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from '../../../core/api/panel/info/structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onPreparedEntities(this.structureId),\n\t\t\t(preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t}\n\t\t);\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\nimport { ColumnId } from './column/column.id';\n\n\n@Injectable()\nexport abstract class CompositionWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onContainerWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>>;\n\n\tabstract onHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder>;\n\n\tabstract onTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>>;\n\n\tabstract onResizeWidth(compositionId: CompositionId): HermesObservable<boolean>;\n\n\tabstract onGroups(compositionId: CompositionId): HermesObservable<GroupCollection>;\n\n\tabstract onHighlightedColumn(columnId: ColumnId, compositionId: CompositionId): HermesObservable<boolean>;\n\n\t// abstract onHighlightedColumns(compositionId: CompositionId)\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from './column/column-definition-id';\n\n\n@Injectable()\nexport abstract class CompositionCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(compositionId: CompositionId): void;\n\n\tabstract setColumns(params: Array<ColumnParams>, compositionId: CompositionId): void;\n\n\tabstract setGroups(configs: any, compositionId: CompositionId): void;\n\n\tabstract setWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setContainerWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setResizeWidth(enabled: boolean, compositionId: CompositionId): void;\n\n\tabstract enableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract disableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract highlightColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onAllColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: './structure.menu-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectorRef, Directive, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\n@Directive()\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplateUrl: './structure.info-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/api/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../structure/core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: './structure.schema-manger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onRowColoring(this.schemaReadModelRootId),\n\t\t\t(rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onTheme(this.schemaReadModelRootId),\n\t\t\t(schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onVerticalGrid(this.schemaReadModelRootId),\n\t\t\t(verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onHorizontalGrid(this.schemaReadModelRootId),\n\t\t\t(horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t}\n\t\t);\n\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId, this.structureId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.NONE;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: './structure.schema-manager-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelArchive extends AggregateArchive<ReadonlyArray<FieldReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<FieldReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(FieldReadModelArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private readonly fieldReadModelArchive: FieldReadModelArchive) {\n\t}\n\n\tonFields(structureId: StructureId): HermesObservable<ReadonlyArray<FieldReadModel>> {\n\t\treturn this.fieldReadModelArchive.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class FilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(FilterEnabledArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class QuickFilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(QuickFilterEnabledArchive.default);\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeArchive extends AggregateArchive<FilterTypeMap> {\n\n\tstatic readonly default = new FilterTypeMap(new Map());\n\n\tconstructor() {\n\t\tsuper(FilterTypeArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterArchive extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<ActiveFilterReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(ActiveFilterArchive.default);\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (const key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesArchive extends AggregateArchive<UniqueValuesReadModel> {\n\n\tstatic readonly default = new UniqueValuesReadModel(new Map());\n\n\tconstructor() {\n\t\tsuper(UniqueValuesArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly filterEnabledArchive: FilterEnabledArchive,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledArchive,\n\t\t\t\tprivate readonly filterTypeArchive: FilterTypeArchive,\n\t\t\t\tprivate readonly uniqueValuesArchive: UniqueValuesArchive,\n\t\t\t\tprivate readonly activeFilterArchive: ActiveFilterArchive) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.filterEnabledArchive.on(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureQuickFilterRepository.on(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): HermesObservable<FilterTypeMap> {\n\t\treturn this.filterTypeArchive.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): HermesObservable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterArchive.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): HermesObservable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesArchive.on(structureId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilterTypes(this.structureId),\n\t\t\t(filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.fieldWarehouse.onFields(this.structureId),\n\t\t\t(fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t}\n\t\t);\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: './filter-type-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (const fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, Array.from(filterTypesFromDataType));\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (const filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = Array.from(entities);\n\n\t\tfor (const filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledArchive } from './quick-filter-enabled.archive';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './filter-enabled.archive';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, map, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeArchive } from './filter-type.archive';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeArchive: FilterTypeArchive) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeArchive.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, filters, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterArchive } from './active-filter.archive';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tconst activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, map, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesArchive } from './unique-values.archive';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesArchive) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tconst uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tconst uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, { fieldConfigs, fields }, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeArchive,\n\t\tActiveFilterArchive,\n\t\tUniqueValuesArchive,\n\t\tFilterEnabledArchive,\n\t\tQuickFilterEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Injectable()\nexport abstract class SearchWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSearchEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPhrase(structureId: StructureId): HermesObservable<string>;\n\n\tabstract onHighlight(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPlaceholder(structureId: StructureId): HermesObservable<string>;\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t}\n\t\t);\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() filterApiModule: FilterApiModule) {\n\t// \tsuper();\n\t// \tif (filterApiModule === null) {\n\t// \t\tthrow new Error('FilterApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() filterApiModule: FilterApiModule) {\n\t// \tsuper();\n\t// \tif (filterApiModule === null) {\n\t// \t\tthrow new Error('FilterApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from '../../../core/api/panel/info/structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tconst diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { CellEditConfig } from '../../api/edit/cell-edit.config';\n\nexport class CellEditorManager {\n\n\tprivate readonly enabled: boolean = false;\n\n\tprivate readonly rowEdit: (value: any, item: any, index: number) => boolean = () => true;\n\n\tprivate readonly cellEdit: (value: any, item: any, index: number) => boolean = () => true;\n\n\tconstructor(config: CellEditConfig) {\n\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.rowEdit !== undefined) {\n\t\t\tthis.rowEdit = config.rowEdit;\n\t\t}\n\n\t\tif (config.cellEdit !== undefined) {\n\t\t\tthis.cellEdit = config.cellEdit;\n\t\t}\n\t}\n\n\tisEnabled(value: any, item: any, index: number): boolean {\n\t\treturn this.enabled && this.rowEdit(value, item, index) && this.cellEdit(value, item, index);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { CellEditorManager } from '../../core/domain/edit/cell-editor.manager';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends AggregateArchive<CellEditorManager> {\n\n\tstatic default = new CellEditorManager({ enabled: false });\n\n\tconstructor() {\n\t\tsuper(StructureCellEditArchive.default);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, { beforeItem, afterItem }, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): HermesObservable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvents([\n\t\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t\t   ]\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getSourceItem(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getSourceItem();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\n@Injectable()\nexport abstract class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onColumnsChanged(compositionId?: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent>;\n\n\tabstract onContainerWidthChanged(compositionId?: CompositionReadModelRootId): HermesObservable<number>;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, { selectedRows, allSelected, allUnselected }, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, hermesFilter, hermesMap, HermesObservable, HermesSubject, hermesSwitchMap, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly subject$ = new HermesSubject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvents([\n\t\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t\t]\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesSwitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   hermesTake(1),\n\t\t\t\t\t\t\t\t   hermesMap((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map<string, OriginItemEntity>();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   const item: OriginItemEntity = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getSourceItem(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.subject$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): HermesObservable<ReadonlyArray<SelectedRow>> {\n\t\treturn this.subject$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\nimport { SchemaId } from '../domain/schema.id';\n\n@Injectable()\nexport abstract class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { CommandDispatcher, DomainEvent, DomainEventBus, hermesFilter, hermesTake } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\nimport { ColumnAutoConfigurator } from '../../../../../composition/core/api/column/auto/column-auto.configurator';\n\n\nexport class StructureColumnInputHandler {\n\n\tprivate columns: ReadonlyArray<ColumnConfig | MultiColumnConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly columnAutoConfigurator: ColumnAutoConfigurator,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway> | any): void {\n\n\t\tlet config: ReadonlyArray<ColumnConfig | MultiColumnConfig> = [];\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tconfig = changes.columns.currentValue;\n\t\t\tthis.columns = config;\n\t\t} else {\n\n\t\t\tif (this.columns === undefined && changes.source !== undefined && changes.source !== null) {\n\t\t\t\tconfig = this.columnAutoConfigurator.configure(changes.source.currentValue);\n\t\t\t\tthis.columns = config;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(config);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvents([\n\t\t\t\t\tFieldsInitedEvent as any\n\t\t\t\t]\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: ReadonlyArray<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tlet columnConfigs: Array<ColumnConfig> = [];\n\n\t\tconst groupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs = columnConfigs.concat((config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { AggregateArchive, AggregateId, hermesFilter, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StructureInitialValuesReadyArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(StructureInitialValuesReadyArchive.default);\n\t}\n\n\ton(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn super.on(aggregateId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(v => v)\n\t\t\t\t\t);\n\t}\n\n\tonce(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn this.on(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ColumnConfig } from '../column.config';\n\n@Injectable()\nexport abstract class ColumnAutoConfigurator {\n\n\tabstract configure(source: ReadonlyArray<any>): ReadonlyArray<ColumnConfig>;\n\n}\n","import { ChangeDetectorRef, Directive, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelConfigService } from '../../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { CellEditConfig } from '../../core/api/edit/cell-edit.config';\nimport { ColumnAutoConfigurator } from '../../../../composition/core/api/column/auto/column-auto.configurator';\n\n\n/** @internal */\n@Directive()\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/** *********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tsource: Array<any> = [];\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig>;\n\n\t// @Input()\n\t// filtering: boolean | FilterConfig;\n\n\t// @Input()\n\t// quickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean | CellEditConfig;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\n\t/** *********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tprivate readonly columnAutoConfigurator: ColumnAutoConfigurator,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandInvoker: StructureCommandInvoker,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandInvoker: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventRepository: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationFacade,\n\t\tprotected structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory,\n\t\t\tcolumnAutoConfigurator, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\n\t\t\tlet editingConfig;\n\n\t\t\tif (typeof this.cellEditing === 'boolean') {\n\t\t\t\teditingConfig = {\n\t\t\t\t\tenabled: this.cellEditing\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\teditingConfig = this.cellEditing;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setCellEdit(editingConfig, this.structureId);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width, this.compositionId);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setTheme(this.theme, this.schemaId, this.structureId);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandInvoker.setRowHeight(this.rowHeight, this.structureId);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth, this.compositionId);\n\t\t}\n\n\t\t/**\n\t\t * Columns\n\t\t */\n\t\tthis.structureColumnInputHandler.handle(changes);\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandInvoker.setContainerHeight(this.maxHeight, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source !== undefined && changes.source.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source, this.structureId);\n\t\t}\n\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventRepository\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventRepository\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onThemeChanged(this.schemaId),\n\t\t\tthis.themeChanged\n\t\t);\n\n\t\tthis.componentInitialized();\n\t}\n\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCellEditArchive } from '../../feature/edit/structure.cell-edit.archive';\nimport { CellEditorManager } from '../domain/edit/cell-editor.manager';\n\n\n@Injectable()\nexport class StructureWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.on(structureId);\n\t}\n\n\tonEditManager(structureId: StructureId): HermesObservable<CellEditorManager> {\n\t\treturn this.structureCellEditArchive\n\t\t\t\t   .on(structureId);\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HermesObservable, HermesSubject } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new HermesSubject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): HermesObservable<void> {\n\t\treturn this.closeAll$.toObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { Directive } from '@angular/core';\n\n@Directive()\nexport abstract class DynamicallyCreatedComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tif (this.hasInputs()) {\n\t\t\tthis.throwError('it cannot have properties annotated with @Inputs().');\n\t\t}\n\t}\n\n\tprivate hasInputs(): boolean {\n\n\t\treturn false;\n\n\t\t// Works with Angular 12\n\t\t// return !this.isEmpty((this.constructor as any).ɵcmp.inputs);\n\t}\n\n\tprivate isEmpty(obj: Object) {\n\t\tfor (const key in obj) {\n\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a DynamicallyCreatedComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\nimport { DynamicallyCreatedComponent } from '../../../../../common/cdk/component/dynamically-created-component';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Component({\n\tselector: 'div[gui-row-detail]',\n\ttemplateUrl: './structure.row-detail-view.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent extends DynamicallyCreatedComponent implements OnInit {\n\n\tselectedRowValue: OriginItemEntity;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private readonly item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private readonly template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getSource(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getSource();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureTitlePanelConfigArchive.titlePanelConfig });\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureFooterPanelConfigArchive.footerPanelConfig });\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() sortingApiModule: SortingApiModule) {\n\t// \tsuper();\n\t// \tif (sortingApiModule === null) {\n\t// \t\tthrow new Error('SortingApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, { phrase, initial }, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, origin, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, values, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, preparedItems, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureSummariesChangedAggregateEvent } from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSummariesChangedAggregateEvent') {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(\n\t\t\t\tstructureSummariesChangedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSummariesChangedAggregateEvent.getSummaries()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getAggregateId(),\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getPreparedItems()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tconst searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchHighlightArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly HIGHLIGHTING = true;\n\n\tconstructor() {\n\t\tsuper(SearchHighlightArchive.HIGHLIGHTING);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive extends AggregateArchive<string> {\n\n\tstatic readonly PLACEHOLDER = 'Search...';\n\n\tconstructor() {\n\t\tsuper(SearchPlaceholderArchive.PLACEHOLDER);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './phrase/set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.searchHighlightArchive.next(structureId, config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.searchPlaceholderArchive.next(structureId, config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPhraseArchive extends AggregateArchive<string> {\n\n\tstatic readonly SEARCH_PHRASE = '';\n\n\tconstructor() {\n\t\tsuper(SearchPhraseArchive.SEARCH_PHRASE);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseArchive } from './search-phrase.archive';\nimport { SearchPhraseSetDomainEvent } from './set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private readonly searchPhraseRepository: SearchPhraseArchive) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.searchPhraseRepository.next(event.getAggregateId(), event.getPhrase());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchingEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly ENABLED = false;\n\n\tconstructor() {\n\t\tsuper(SearchingEnabledArchive.ENABLED);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingEnabledArchive } from './searching-enabled.archive';\n\nimport { ConfigSearchingSetEvent } from '../config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './phrase/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from './phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from './enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Injectable } from '@angular/core';\nimport { SearchWarehouse } from '../api/search.warehouse';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDomainWarehouse extends SearchWarehouse {\n\n\tconstructor(private readonly searchingEnabledArchive: SearchingEnabledArchive,\n\t\t\t\tprivate readonly searchPhraseArchive: SearchPhraseArchive,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\t}\n\n\tonSearchEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchingEnabledArchive.on(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPhraseArchive.on(structureId);\n\t}\n\n\tonHighlight(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchHighlightArchive.on(structureId);\n\t}\n\n\tonPlaceholder(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPlaceholderArchive.on(structureId);\n\t}\n\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { SearchPhraseSetDomainEvent } from '../domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { Injectable } from '@angular/core';\nimport { SearchEventRepository } from '../api/search.event-repository';\n\n@Injectable()\nexport class SearchDomainEventRepository extends SearchEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string> {\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   hermesMap((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   hermesFilter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../api/search.command-invoker';\n\n\n@Injectable()\nexport class SearchDomainCommandInvoker extends SearchCommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\nimport { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchDomainWarehouse } from '../domain-read/search.domain-warehouse';\nimport { SearchDomainEventRepository } from '../domain-read/search.domain-event-repository';\nimport { SearchDomainCommandInvoker } from '../domain/search.domain-command-invoker';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SearchCommandInvoker,\n\t\t\tuseClass: SearchDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SearchWarehouse,\n\t\t\tuseClass: SearchDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SearchEventRepository,\n\t\t\tuseClass: SearchDomainEventRepository\n\t\t},\n\n\t\tSearchPhraseArchive,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingEnabledArchive\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { StructureId } from '../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\nimport { fromRxJsObservable, HermesSubscription } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplateUrl: './search.component.html',\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder: string;\n\n\tsearchingEnabled: boolean;\n\n\tsearchInputSubscription: HermesSubscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPlaceholder(this.structureId),\n\t\t\t(placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tconst controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tfromRxJsObservable(\n\t\t\t\tthis.searchForm\n\t\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t\t.valueChanges\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tdebounceTime(200)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.clear();\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n\n\tprivate clear(): void {\n\t\tthis.fields.clear();\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tconst valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; // (rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getSourceItem()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getSourceItem());\n\t\t} else {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity;\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tconst matcher = fieldConfig.matcher;\n\t\tlet sortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './field-read-model.archive';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelArchive,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelArchive,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() fieldApiModule: FieldApiModule) {\n\t// \tsuper();\n\t// \tif (fieldApiModule === null) {\n\t// \t\tthrow new Error('FieldApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SetSourceLoadingEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\tsourceItem: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\tsourceItem: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.sourceItem = sourceItem;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetSourceItem(): any {\n\t\treturn this.sourceItem;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.sourceItem };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = Array.from(this.entities);\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = Array.from(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.sourceItem[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents = events.concat(this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents = events.concat(this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (const element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents = events.concat(this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents = events.concat(this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tconst rows = Array.from(this.selectedRows);\n\t\t\tlet equal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(\n\t\t\t\trowChangedEvent.getSelectedRows(),\n\t\t\t\trowChangedEvent.isAllSelected(),\n\t\t\t\trowChangedEvent.isAllUnselected()\n\t\t\t);\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, mode, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureSourceOriginArchive extends AggregateArchive<ReadonlyArray<any>> {\n\n\tstatic readonly default: ReadonlyArray<any> = [];\n\n\tconstructor() {\n\t\tsuper(StructureSourceOriginArchive.default);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginArchive } from './structure.source-origin.archive';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.next(event.getAggregateId(), origin);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructurePreparedItemsArchive extends AggregateArchive<ReadonlyArray<OriginItemEntity>> {\n\n\tstatic readonly default: ReadonlyArray<OriginItemEntity> = [];\n\n\tconstructor() {\n\t\tsuper(StructurePreparedItemsArchive.default);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedItems(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.get(structureId).getValueOrNullOrThrowError();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsArchive } from './structure.prepared-items.archive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.next(event.getAggregateId(), preparedItems);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { hermesDistinctUntilChanged, hermesMap, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\n\n\n@Injectable()\nexport class SourceDomainWarehouse extends SourceWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate readonly structurePreparedItemsRepository: StructurePreparedItemsArchive,\n\t\t\t\tprivate readonly structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetEntities(structureId: StructureId): ReadonlyArray<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   hermesDistinctUntilChanged((ents1: ReadonlyArray<ItemEntity>, ents2: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((entities: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.on(structureId);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, fromRxJsObservable, hermesMap, hermesTake, toRxJsObservable } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { SelectedRow } from '../api/formation/selected-row';\nimport { SourceCommandInvoker } from '../api/source.command-invoker';\n\n\n@Injectable()\nexport class SourceDomainCommandInvoker extends SourceCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void {\n\n\t\tconst itemId$ =\n\t\t\ttoRxJsObservable(\n\t\t\t\tthis.sourceReadModelService\n\t\t\t\t\t.onceEntities(structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesMap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t);\n\n\t\tconst fieldId$ = toRxJsObservable(\n\t\t\tthis.fieldWarehouse.onFields(structureId)\n\t\t);\n\n\t\tfromRxJsObservable(\n\t\t\tzip(itemId$, fieldId$)\n\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\nimport { SourceDomainWarehouse } from '../domain-read/source.domain-warehouse';\nimport { SourceDomainCommandInvoker } from '../domain/source.domain.command-invoker';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginArchive,\n\t\tStructurePreparedItemsArchive,\n\t\tSourceConverter,\n\n\t\t{\n\t\t\tprovide: SourceCommandInvoker,\n\t\t\tuseClass: SourceDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SourceWarehouse,\n\t\t\tuseClass: SourceDomainWarehouse\n\t\t},\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\t// constructor(@Optional() sourceApiModule: SourceApiModule) {\n\t// \tsuper();\n\t// \tif (sourceApiModule === null) {\n\t// \t\tthrow new Error('SourceApiModule is required');\n\t// \t}\n\t// }\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, theme, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, rowColoring, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, verticalGrid, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, horizontalGrid, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaDomainEvent } from '../schema.domain-event';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, null, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from './schema.aggregate';\nimport { SchemaId } from './schema.id';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract findById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends AggregateArchive<SchemaCssClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { SchemaTheme } from '../theme/schema-theme';\nimport { SchemaRowColoring } from '../row-coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.next(\n\t\t\t\taggregateId,\n\t\t\t\tnew SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring)\n\t\t\t);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends EventDrivenRepository<SchemaId, SchemaVerticalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n@Injectable()\nexport class SchemaThemeRepository extends EventDrivenRepository<SchemaId, SchemaThemeSetEvent, SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n@Injectable()\nexport class SchemaRowColoringRepository extends EventDrivenRepository<SchemaId, RowColoringSetEvent, SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends EventDrivenRepository<SchemaId, SchemaHorizontalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from './schema.key';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\tHermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\tHermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\tHermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(SchemaThemeRepository),\n\t\t\tHermesModule.registerDomainEventHandler(SchemaHorizontalGridRepository),\n\t\t\tHermesModule.registerDomainEventHandler(SchemaRowColoringRepository),\n\t\t\tHermesModule.registerDomainEventHandler(SchemaVerticalGridRepository),\n\t\t\tHermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { SchemaDispatcher } from './schema.dispatcher';\nimport { StructureCommandInvoker } from '../../../structure/core/api/structure.command-invoker';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from '../api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { Injectable } from '@angular/core';\nimport { SchemaCommandInvoker } from '../api/schema.command-invoker';\n\n\n@Injectable()\nexport class SchemaDomainCommandInvoker extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t\tsuper();\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme,\n\t\t\t schemaId: SchemaReadModelRootId,\n\t\t\t structureId: StructureId\n\t): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaCssClass } from '../api/css-classes/schema-css-class';\nimport { SchemaWarehouse } from '../api/schema.warehouse';\nimport { Injectable } from '@angular/core';\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaDomainWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper();\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.onTheme(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaVerticalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { DomainEventBus, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from './grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring/row-coloring-set.event';\nimport { SchemaEventRepository } from '../api/schema.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SchemaDomainEventRepository extends SchemaEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/create/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { schemaKey } from '../domain/schema.key';\nimport { SchemaDomainCommandInvoker } from '../domain/schema.domain-command-invoker';\nimport { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';\nimport { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\tSchemaDomainModule.commandHandlers(),\n\t\t\tSchemaDomainModule.domainEventHandlers()\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\t{\n\t\t\tprovide: SchemaCommandInvoker,\n\t\t\tuseClass: SchemaDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaWarehouse,\n\t\t\tuseClass: SchemaDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaEventRepository,\n\t\t\tuseClass: SchemaDomainEventRepository\n\t\t},\n\n\t\tSchemaCssClassesRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SummariesEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>>;\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, 'StructureSummariesChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic readonly DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesManager } from '../summaries.manager';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SummariesEnabledArchive extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper(SummariesManager.DEFAULT_ENABLED);\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.next(structureId, SummariesManager.DEFAULT_ENABLED);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from './summaries-enabled-archive.service';\nimport { StructureSummariesEnabledSetEvent } from '../set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.summariesEnabledArchive.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tconst summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tconst aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './enabled/structure.summaries-enabled-set.event-handler';\nimport { provideSummariesCalculator } from './summaries.providers';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\t\tprovideSummariesCalculator(DateSummariesCalculator),\n\t\tprovideSummariesCalculator(NumberSummariesCalculator),\n\t\tprovideSummariesCalculator(StringSummariesCalculator),\n\t\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\t\tSummariesManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey);\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SummariesWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onTopEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onBottomEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n}\n","export class StructureSummariesPanelConfig {\n\n\tstatic readonly defaultTop = false;\n\n\tstatic readonly defaultBottom = true;\n\n\tprivate top: boolean = StructureSummariesPanelConfig.defaultTop;\n\n\tprivate bottom: boolean = StructureSummariesPanelConfig.defaultBottom;\n\n\tsetTop(top: boolean): void {\n\t\tthis.top = top;\n\t}\n\n\tsetBottom(bottom: boolean): void {\n\t\tthis.bottom = bottom;\n\t}\n\n\tisTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesConfigArchive extends AggregateArchive<StructureSummariesPanelConfig> {\n\n\tstatic readonly default = new StructureSummariesPanelConfig();\n\n\tconstructor() {\n\t\tsuper(StructureSummariesConfigArchive.default);\n\t}\n\n}\n","import { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesWarehouse } from '../api/summaries.warehouse';\nimport { Injectable } from '@angular/core';\nimport { hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\nimport { StructureSummariesConfigArchive } from '../domain/config/structure.summaries-config.archive';\nimport { StructureSummariesPanelConfig } from '../domain/config/structure.summaries-panel.config';\n\n@Injectable()\nexport class SummariesDomainWarehouse extends SummariesWarehouse {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesConfigArchive) {\n\t\tsuper();\n\t}\n\n\tonEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.summariesEnabledArchive.on(structureId);\n\t}\n\n\tonTopEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.onEnabled(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesSwitchMap((enabled) => {\n\t\t\t\t\t\t   return this.structureSummariesArchive\n\t\t\t\t\t\t\t\t\t  .on(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((config: StructureSummariesPanelConfig) => enabled && config.isTopEnabled())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonBottomEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.onEnabled(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesSwitchMap((enabled) => {\n\t\t\t\t\t\t   return this.structureSummariesArchive\n\t\t\t\t\t\t\t\t\t  .on(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((config: StructureSummariesPanelConfig) => enabled && config.isBottomEnabled())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tconst panelConfig = new StructureSummariesPanelConfig();\n\n\t\tif (config.top !== undefined && config.top !== null) {\n\t\t\tpanelConfig.setTop(config.top);\n\t\t}\n\n\t\tif (config.bottom !== undefined && config.bottom !== null) {\n\t\t\tpanelConfig.setBottom(config.bottom);\n\t\t}\n\n\t\treturn panelConfig;\n\t}\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from './set/structure.set-summaries-enabled.command';\nimport { Injectable } from '@angular/core';\nimport { SummariesCommandInvoker } from '../api/summaries.command-invoker';\nimport { SummariesConfig } from '../api/summaries-config';\nimport { StructureSummariesPanelConfigConverter } from './config/structure.summaries-panel.config-converter';\nimport { StructureSummariesConfigArchive } from './config/structure.summaries-config.archive';\n\n@Injectable()\nexport class SummariesDomainCommandInvoker extends SummariesCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly configConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate readonly structureSummariesConfigArchive: StructureSummariesConfigArchive) {\n\t\tsuper();\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n\tsetConfig(config: SummariesConfig, structureId: StructureId): void {\n\n\t\tconst summariesPanelConfig = this.configConverter.convert(config);\n\n\t\tthis.setSummariesEnabled(config.enabled, structureId);\n\t\tthis.structureSummariesConfigArchive.next(structureId, summariesPanelConfig);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { SummariesEventRepository } from '../api/summaries.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SummariesDomainEventRepository extends SummariesEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SummariesCommandInvoker } from './summaries.command-invoker';\nimport { SummariesEventRepository } from './summaries.event-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { SummariesWarehouse } from './summaries.warehouse';\nimport { SummariesDomainWarehouse } from '../domain-read/summaries.domain-warehouse';\nimport { SummariesDomainCommandInvoker } from '../domain/summaries.domain-command-invoker';\nimport { SummariesDomainEventRepository } from '../domain-read/summaries.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SummariesCommandInvoker,\n\t\t\tuseClass: SummariesDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesEventRepository,\n\t\t\tuseClass: SummariesDomainEventRepository\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesWarehouse,\n\t\t\tuseClass: SummariesDomainWarehouse\n\t\t},\n\t\tSummariesEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesEventRepository } from '../../core/api/summaries.event-repository';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from '../structure.summaries-translations';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplateUrl: './structure.summaries-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tcheckboxSelection: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureSummariesEventRepository: SummariesEventRepository,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSummariesEventRepository.onSummariesChanged(this.structureId.toReadModelRootId()),\n\t\t\t(event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onEntitiesSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t}\n\t\t);\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\nimport { StructureSummariesPanelComponent } from './panel/structure.summaries-panel.component';\nimport { StructureSummariesConfigArchive } from '../core/domain/config/structure.summaries-config.archive';\nimport { StructureSummariesPanelConfigConverter } from '../core/domain/config/structure.summaries-panel.config-converter';\nimport { FabricModule } from '@generic-ui/fabric';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesConfigArchive,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t// \tsuper();\n\t// \tif (summariesApiModule === null) {\n\t// \t\tthrow new Error('SummariesApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/api/composition.id';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from '../core/api/panel/info/structure.info-panel.archive';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus, hermesTimer } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationFacade } from '../../../l10n/core/api/translation.facade';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureInitialValuesReadyArchive } from '../../core/api/structure.initial-values-ready.archive';\nimport { SummariesFeatureModule } from '../../summaries/feature/summaries.feature-module';\nimport { ColumnAutoConfigurator } from '../../../composition/core/api/column/auto/column-auto.configurator';\n\n\n/** @internal */\nexport function structureIdFactoryForGrid(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactoryForGrid(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactoryForGrid(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t{\n\t\t\tprovide: StructureId,\n\t\t\tuseFactory: structureIdFactoryForGrid,\n\t\t\tdeps: [\n\t\t\t\tStructureIdGenerator\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionId,\n\t\t\tuseFactory: compositionIdFactoryForGrid,\n\t\t\tdeps: [\n\t\t\t\tStructureIdGenerator\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaReadModelRootId,\n\t\t\tuseFactory: schemaIdFactoryForGrid,\n\t\t\tdeps: [\n\t\t\t\tStructureIdGenerator\n\t\t\t]\n\t\t},\n\n\t\tSchemaCssClassManager,\n\t\tStructureCellEditCloseAllService,\n\t\tStructureCellEditStore,\n\t\tStructureEditModeArchive,\n\t\tStructureInfoPanelArchive,\n\t\tStructureInfoPanelConfigService,\n\n\t\tStructureColumnMenuConfigArchive,\n\n\t\tPagingFeatureModule.forComponent(),\n\t\tSortingFeatureModule.forComponent(),\n\t\tFieldFeatureModule.forComponent(),\n\t\tSearchFeatureModule.forComponent(),\n\t\tSourceFeatureModule.forComponent(),\n\t\tSchemaFeatureModule.forComponent(),\n\t\tSummariesFeatureModule.forComponent(),\n\t\tTranslationFeatureModule.forComponent(),\n\n\t\tRowSelectEnabledRepository,\n\t\tStructureHeaderTopEnabledArchive,\n\t\tStructureHeaderBottomEnabledArchive,\n\t\tStructureRowDetailConfigArchive,\n\t\tStructureRowDetailService,\n\t\tStructureTitlePanelConfigArchive,\n\t\tStructureFooterPanelConfigArchive,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationFacade,\n\t\t\t\tstructureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\tcolumnAutoConfigurator: ColumnAutoConfigurator,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tcolumnAutoConfigurator,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService,\n\t\t\tstructureInitialValuesReadyArchive\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.create(this.structureId);\n\t\tcompositionCommandDispatcher.create(this.compositionId);\n\t\tschemaCommandDispatcher.create(this.schemaId);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\tthis.structure = structureReadModelRoot;\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t}\n\t\t);\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\n\t\tthis.structureInitialValuesReadyArchive\n\t\t\t.next(this.structureId, true);\n\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\thermesTimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t}\n\t\t);\n\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValuesReadModel } from '../../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationFacade } from '../../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../../l10n/core/api/translation';\nimport { hermesSwitchMap } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/core/api/composition.id';\nimport { CompositionCommandInvoker } from '../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\n\n\n@Component({\n\tselector: 'div[gui-column-config]',\n\ttemplateUrl: './structure.column-config.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tprivate readonly structureColumnConfigService: StructureColumnConfigService;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationFacade: TranslationFacade,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnConfigService = this.injector.get(StructureColumnConfigService);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive\n\t\t\t\t.on()\n\t\t\t\t.pipe(\n\t\t\t\t\thermesSwitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\t\tthis.config = config;\n\t\t\t\t\t\treturn this.translationFacade.onTranslation();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t}\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\thideColumn(): void {\n\t\tthis.compositionCommandInvoker.disableColumn(this.column.getColumnDefinitionId(), this.compositionId);\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveLeft(): void {\n\t\tthis.compositionCommandInvoker.moveLeft(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(): void {\n\t\tthis.compositionCommandInvoker.moveRight(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\thighlightColumn(): void {\n\t\tthis.compositionCommandInvoker.highlightColumn(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { Reactive } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class VerticalFormationWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onRowHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onContainerHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onTopMargin(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onScrollBarPosition(structureId: StructureId): HermesObservable<number>;\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilteringEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onGroups(this.compositionId),\n\t\t\t(collection: GroupCollection) => {\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new HermesReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): HermesObservable<T> {\n\t\treturn this.subject$.toObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly source: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(source: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.source = source;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetSourceItem(): any {\n\t\treturn this.source;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.sourceItem, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'RowHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, null, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n\tDomainEvent,\n\tDomainEventBus,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesMap,\n\tHermesObservable,\n\tHermesReplaySubject,\n\tReactive\n} from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new HermesReplaySubject<Map<string, VerticalFormationReadModel>>(1);\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvents([\n\t\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\t\tOriginSetEvent as any,\n\t\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\t\tPageChangedEvent as any,\n\t\t\t\t\tPagingSetEvent as any\n\t\t\t\t]\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): HermesObservable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\nimport { fromRxJsObservable, toRxJsObservable } from '@generic-ui/hermes';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { CellEditorManager } from '../../core/domain/edit/cell-editor.manager';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: './structure-content.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing: CellEditorManager;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureEditModeArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.onEditManager(this.structureId),\n\t\t\t(manager: CellEditorManager) => {\n\t\t\t\tthis.cellEditing = manager;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowClassArchive.on(),\n\t\t\t(schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowStyleArchive.on(),\n\t\t\t(schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\tcombineLatest(\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onPhrase(this.structureId)),\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onHighlight(this.structureId))\n\t\t\t\t)\n\t\t\t),\n\t\t\t(args: Array<any>) => {\n\n\t\t\t\tconst searchPhrase = args[0],\n\t\t\t\t\thighlighting = args[1];\n\n\t\t\t\tthis.highlighting = highlighting;\n\t\t\t\tthis.searchPhrase = searchPhrase;\n\n\t\t\t\tif (!this.highlighting) {\n\t\t\t\t\tthis.searchPhrase = '';\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tconst height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE, this.structureId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../common/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CellEditorManager } from '../../../core/domain/edit/cell-editor.manager';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: './structure-row.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: CellEditorManager;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getSourceItem(), entity.getPosition());\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getSourceItem(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\nimport { hermesTimer } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnId } from '../../../../../composition/core/api/column/column.id';\nimport { CellEditorManager } from '../../../core/domain/edit/cell-editor.manager';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: './structure.cell.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditorManager: CellEditorManager;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\trowIndex: number;\n\n\t@Input()\n\tcolumnIndex: number;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tisHighlighted: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHighlightedColumn(new ColumnId(this.cell.columnDefinitionId.toString()), this.compositionId),\n\t\t\t(value: boolean) => {\n\t\t\t\tthis.isHighlighted = value;\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.cellEditCloseAllService.onCloseAll(),\n\t\t\t() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t);\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditorManager.isEnabled(\n\t\t\tthis.cell.getValue(this.entity),\n\t\t\tthis.entity.getSourceItem(),\n\t\t\tthis.rowIndex\n\t\t\t) &&\n\t\t\tthis.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\thermesTimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { fromRxJsObservable, hermesEmpty, HermesObservable } from '@generic-ui/hermes';\nimport { Observable, Observer } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\n\ndeclare const ResizeObserver: any;\n\nexport type ObservedSize = {\n\tbottom: number;\n\theight: number;\n\tleft: number;\n\tright: number;\n\ttop: number;\n\twidth: number;\n\tx: number;\n\ty: number;\n}\n\n@Injectable()\nexport class ResizeDetector {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t}\n\n\ton(element: HTMLElement): HermesObservable<ObservedSize> {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\treturn fromRxJsObservable(\n\t\t\t\t(\n\t\t\t\t\tnew Observable((observer: Observer<any>) => {\n\n\t\t\t\t\t\tconst resizeObserver = new ResizeObserver((entries: any) => {\n\n\t\t\t\t\t\t\tif (entries && entries.length > 0) {\n\t\t\t\t\t\t\t\tobserver.next(entries[0].contentRect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresizeObserver.observe(element);\n\n\t\t\t\t\t\treturn () => resizeObserver.disconnect();\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tthrottleTime(25)\n\t\t\t\t\t)\n\t\t\t);\n\n\t\t}\n\n\t\treturn hermesEmpty();\n\t}\n\n\tdestroy(element: HTMLElement) {\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport {\n\tfromRxJsObservable,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesFromEvent,\n\thermesMap,\n\tHermesSubject,\n\thermesTakeUntil,\n\ttoRxJsObservable\n} from '@generic-ui/hermes';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { ObservedSize, ResizeDetector } from '../../../../common/cdk/resize-detector/resize.detector';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: './structure-container.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new HermesSubject<void>();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\tprivate readonly structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onContainerHeight(this.structureId),\n\t\t\t(containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\ttoRxJsObservable(this.structureInitialValuesReadyArchive.once(this.structureId))\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tflatMap(() => {\n\t\t\t\t\t\t\treturn combineLatest(\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.sourceWarehouse.onEntities(this.structureId)),\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.compositionWarehouse.onTemplateColumns(this.compositionId))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t),\n\t\t\t(arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onResizeWidth(this.compositionId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\n\t\t\tthis.hermesSubscribeWithoutRender(\n\t\t\t\tthis.resizeDetector\n\t\t\t\t\t.on(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\t\thermesMap((size: ObservedSize) => size.width),\n\t\t\t\t\t\thermesDistinctUntilChanged()\n\t\t\t\t\t),\n\t\t\t\t(width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onVerticalScrollEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureWarehouse\n\t\t\t\t.on(this.structureId)\n\t\t\t\t.pipe(\n\t\t\t\t\thermesFilter((str: StructureReadModelRoot) => {\n\t\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onScrollBarPosition(this.structureId),\n\t\t\t(scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width, this.compositionId);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\thermesFromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesTakeUntil(this.scrollObservation$)\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop, this.structureId);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../../core/api/panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\nimport { SummariesWarehouse } from '../../../summaries/core/api/summaries.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: './structure.blueprint.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent implements OnInit {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly summariesWarehouse: SummariesWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderTopEnabledArchive.on(),\n\t\t\t(topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderBottomEnabledArchive.on(),\n\t\t\t(bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onQuickFiltersEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.summariesWarehouse.onBottomEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.bottomSummariesPanelEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.summariesWarehouse.onTopEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.topSummariesPanelEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureTitlePanelConfigArchive.on(),\n\t\t\t(titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureFooterPanelConfigArchive.on(),\n\t\t\t(footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, { fieldId, filterTypeId, value }, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly hermesStructure$ = new HermesReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(structureId: StructureId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(structureId.getId());\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\n\t\treturn this.hermesStructure$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\t\t\t\t\t\t   return structureIdToStructure.get(structureId.getId());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.hermesStructure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, position, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tstatic readonly ROW_HEIGHT = 42;\n\n\tstatic readonly HIDDEN_ITEMS_TOP = 5;\n\n\tstatic readonly HIDDEN_ITEMS_BOTTOM = 2;\n\n\n\tprivate rowHeight: number = VerticalFormation.ROW_HEIGHT;\n\n\tprivate hiddenItemsTop: number = VerticalFormation.HIDDEN_ITEMS_TOP;\n\n\tprivate hiddenItemsBottom: number = VerticalFormation.HIDDEN_ITEMS_BOTTOM;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.key';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = Array.from(entities);\n\n\t\tfor (const sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (const value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (const entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (const field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (const notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tconst map = new Map();\n\n\t\tfor (const field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from '../../../summaries/core/domain/enabled/summaries-enabled-archive.service';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.summariesEnabledArchive.init(structureId);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from '../api/structure.id';\nimport { CreateStructureCommand } from './create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { StructureCommandInvoker } from '../api/structure.command-invoker';\nimport { Injectable } from '@angular/core';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { CellEditConfig } from '../../grid/core/api/edit/cell-edit.config';\nimport { StructureCellEditArchive } from '../../grid/feature/edit/structure.cell-edit.archive';\nimport { CellEditorManager } from '../../grid/core/domain/edit/cell-editor.manager';\n\n@Injectable()\nexport class StructureDomainCommandInvoker extends StructureCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n\tsetCellEdit(cellEdit: CellEditConfig, structureId: StructureId): void {\n\t\tthis.structureCellEditArchive.next(structureId, new CellEditorManager(cellEdit));\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\nimport { StructureDomainCommandInvoker } from '../../../core/domain/structure.domain-command-invoker';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\n\n\nconst commandProviders = [\n\tinMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\tinMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\tHermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\tinMemoryStructureProviders,\n\n\tcommandProviders,\n\treadProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\t{\n\t\tprovide: StructureCommandInvoker,\n\t\tuseClass: StructureDomainCommandInvoker\n\t},\n\n\tStructureInitialValuesReadyArchive\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(source: any): ItemEntity;\n\tcreate(source: Array<any>): Array<ItemEntity>;\n\tcreate(source: any): any {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createEntities(source);\n\t\t} else {\n\t\t\treturn this.createEntity(source);\n\t\t}\n\t}\n\n\tcreateEntities(source: Array<any>): Array<ItemEntity> {\n\t\treturn source.map((source: any) => this.createEntity(source));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.sourceItem, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\nimport { StructureColumnMenuConfig } from '../config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from '../config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-trigger]',\n\ttemplateUrl: './structure.column-config-trigger.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive.on(),\n\t\t\t(config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t}\n\t\t);\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-sort]',\n\ttemplateUrl: './structure.column-config-sort.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionReadModelService.onSortOrder(this.column.getFieldId(), this.compositionId),\n\t\t\t(sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t}\n\t\t);\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-column-hide]',\n\ttemplateUrl: './structure.column-config-column-hide.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigColumnHideComponent extends PureComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Output()\n\tcolumnHidden = new EventEmitter<void>();\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t}\n\n\thideColumn(): void {\n\t\tthis.columnHidden.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-column-hide';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-column-config-column-move][column]',\n\ttemplateUrl: './structure.column-config-column-move.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigColumnMoveComponent extends PureComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Output()\n\tmovedLeft = new EventEmitter<void>();\n\n\t@Output()\n\tmovedRight = new EventEmitter<void>();\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t}\n\n\tmoveLeft(): void {\n\t\tthis.movedLeft.emit();\n\t}\n\n\tmoveRight(): void {\n\t\tthis.movedRight.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-column-move';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-menu-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-menu-arrow-icon]',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandInvoker: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandInvoker.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandInvoker.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() filterApiModule: FilterApiModule) {\n\t// \tsuper();\n\t// \tif (filterApiModule === null) {\n\t// \t\tthrow new Error('FilterApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './trigger/structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, Directive, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n@Directive()\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.onBannerPanelConfig(),\n\t\t\t(config: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = config.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tabstract onBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplateUrl: './structure.title-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplateUrl: './structure.footer-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: './empty-source.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'div[gui-select-all]',\n\ttemplateUrl: './select-all.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onMode(this.structureId),\n\t\t\t(mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionArchive extends AggregateArchive<number> {\n\n\tstatic readonly DEFAULT_POSITION = 0;\n\n\tconstructor() {\n\t\tsuper(VerticalFormationScrollBarPositionArchive.DEFAULT_POSITION);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionArchive } from './vertical-formation.scroll-bar-position.archive';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { VerticalFormationRepository } from '../api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionArchive } from './scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\nimport { VerticalFormationWarehouse } from '../api/vertical-formation.warehouse';\n\n\n@Injectable()\nexport class VerticalFormationDomainWarehouse extends VerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t\tsuper();\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { VerticalFormationWarehouse } from './vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionArchive } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { VerticalFormationDomainWarehouse } from '../domain-read/vertical-formation.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\t{\n\t\t\tprovide: VerticalFormationWarehouse,\n\t\t\tuseClass: VerticalFormationDomainWarehouse\n\t\t},\n\t\tVerticalFormationScrollBarPositionArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t// \tsuper();\n\t// \tif (verticalFormationApiModule === null) {\n\t// \t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t// \t}\n\t// }\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tconst staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => {\n\t\t\t\treturn columnWidth.isTypeAuto() ||\n\t\t\t\t\tcolumnWidth.isTypePercentage() ||\n\t\t\t\t\t(columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH);\n\t\t\t});\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, payload, 'CompositionContainerWidthSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = Array.from(this.columns);\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tconst newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (const column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width;\n\t\tconst autoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tconst column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (const column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, activeColumns, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t// this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (const param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../api/composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(source: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createColumns(source);\n\t\t} else {\n\t\t\treturn this.createColumn(source);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\tdataType = field.getDataType(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined;\n\n\t\tlet view: ViewEntity,\n\t\t\tenabled: boolean;\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tconst columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tconst columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract findById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\t\t}\n\n\t}\n\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../../api/composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublish(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../../api/composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private readonly columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tpublic template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getSourceItem());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getSourceItem());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tgetClasses(): string {\n\t\treturn 'gui-cell-highlighted';\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity);\n\t\t\tconst lowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tconst positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\ttoHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header || '';\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\ttoContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private readonly viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate readonly editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.isSortingEnabled()\n\t\t);\n\n\t\tif (column.getCellView() === CellView.NG_TEMPLATE) {\n\t\t\tcolumnDef.cellTemplate = column.getColumnConfig().templateRef;\n\t\t} else {\n\t\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\t}\n\n\t\tif (typeof column.getHeader() === 'function') {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\t\t}\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.isSortingEnabled()\n\t\t);\n\n\t\tif (activeColumn.getCellView() === CellView.NG_TEMPLATE) {\n\t\t\tcolumnDef.cellTemplate = activeColumn.getColumnConfig().templateRef;\n\t\t} else {\n\t\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\t}\n\n\t\tif (typeof activeColumn.getHeader() === 'function') {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\t\t}\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.toHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.toHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.toContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionReadModelRootId } from '../../../api/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, HermesObservable, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new HermesReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../../api/composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { ColumnId } from '../../api/column/column.id';\n\nexport class ColumnHighlightManager {\n\n\tprivate enabled = true;\n\n\tprivate highlightedColumns: Set<string> = new Set(); // should be set of ColumnId\n\n\tisHighlighted(columnId: ColumnId): boolean {\n\t\treturn this.highlightedColumns.has(columnId.toString());\n\t}\n\n\ttoggle(columnId: ColumnId): void {\n\t\tif (this.highlightedColumns.has(columnId.toString())) {\n\t\t\tthis.highlightedColumns.delete(columnId.toString());\n\t\t} else {\n\t\t\tthis.highlightedColumns.add(columnId.toString());\n\t\t}\n\t}\n\n\tremove(columnId: ColumnId): void {\n\t\tthis.highlightedColumns.delete(columnId.toString());\n\t}\n}\n","import { AggregateArchive } from '@generic-ui/hermes';\nimport { ColumnHighlightManager } from './column-highlight.manager';\nimport { Injectable } from '@angular/core';\nimport { Override } from '../../../../common/cdk/decorators';\nimport { CompositionId } from '../../api/composition.id';\nimport { ColumnId } from '../../api/column/column.id';\n\n@Injectable()\nexport class ColumnHighlightArchive extends AggregateArchive<ColumnHighlightManager> {\n\n\tconstructor() {\n\t\tsuper(new ColumnHighlightManager());\n\t}\n\n\ttoggle(key: CompositionId, value: ColumnId) {\n\t\tthis.get(key)\n\t\t\t.ifPresent((manager) => {\n\t\t\t\tmanager.toggle(value);\n\t\t\t\tthis.next(key, manager);\n\t\t\t});\n\t}\n\n\t@Override\n\tprotected equals(a: ColumnHighlightManager, b: ColumnHighlightManager): boolean {\n\t\treturn false;\n\t}\n\n\t@Override\n\tprotected createDefaultValue(defaultValue: ColumnHighlightManager): ColumnHighlightManager {\n\t\treturn new ColumnHighlightManager();\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from './composition.key';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\nimport { ColumnHighlightArchive } from './highlight/column-highlight.archive';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tinMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory,\n\t\tColumnHighlightArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupArchive extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], false);\n\n\tconstructor() {\n\t\tsuper(CompositionGroupArchive.default);\n\t}\n\n}\n","import { CompositionDispatcher } from './composition.dispatcher';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionId } from '../api/composition.id';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../api/column/column-definition-id';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionCommandInvoker } from '../api/composition.command-invoker';\nimport { Injectable } from '@angular/core';\nimport { ColumnHighlightArchive } from './highlight/column-highlight.archive';\n\n@Injectable()\nexport class CompositionDomainCommandInvoker extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupArchive,\n\t\t\t\tprivate readonly columnHighlightArchive: ColumnHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tcreate(compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\thighlightColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.columnHighlightArchive.toggle(compositionId, new ColumnId(columnDefinitionId.getId()));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionEventRepository } from '../api/composition.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainEventRepository extends CompositionEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CompositionReadModelRootRepository } from './composition.read-model-root-repository';\nimport { CompositionGroupArchive } from './group/composition-group.archive';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { GroupCollection } from '../api/group/group.collection';\nimport { CompositionWarehouse } from '../api/composition.warehouse';\nimport { Injectable } from '@angular/core';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { ColumnId } from '../api/column/column.id';\nimport { ColumnHighlightArchive } from '../domain/highlight/column-highlight.archive';\nimport { ColumnHighlightManager } from '../domain/highlight/column-highlight.manager';\n\n@Injectable()\nexport class CompositionDomainWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupArchive: CompositionGroupArchive,\n\t\t\t\tprivate readonly columnHighlightArchive: ColumnHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tonWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   hermesMap((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId): HermesObservable<GroupCollection> {\n\t\treturn this.compositionGroupArchive.on(compositionId);\n\t}\n\n\tonHighlightedColumn(columnId: ColumnId, compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.columnHighlightArchive\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((manager: ColumnHighlightManager) => manager.isHighlighted(columnId))\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ColumnAutoConfigurator } from '../../../api/column/auto/column-auto.configurator';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n@Injectable()\nexport class DomainColumnAutoConfigurator extends ColumnAutoConfigurator {\n\n\tconfigure(source: ReadonlyArray<any>): ReadonlyArray<ColumnConfig | MultiColumnConfig> {\n\n\t\tif (source !== undefined && source !== null && Array.isArray(source) && source.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst rawItem = source[0];\n\n\t\treturn Object.keys(rawItem)\n\t\t\t\t\t .map((key, index) => {\n\n\t\t\t\t\t\t return this.toColumnConfig(key, rawItem);\n\t\t\t\t\t });\n\t}\n\n\tprivate toColumnConfig(key: string, rawItem: any): ColumnConfig {\n\t\treturn {\n\t\t\tfield: this.getField(key),\n\t\t\theader: this.getHeader(key),\n\t\t\ttype: this.getType(key, rawItem)\n\t\t} as ColumnConfig;\n\t}\n\n\tprivate getField(key: string): string {\n\t\treturn key;\n\t}\n\n\tprivate getHeader(key: string): string {\n\t\treturn key[0].toUpperCase() + key.slice(1);\n\t}\n\n\tprivate getType(key: string, rawItem: any): DataType {\n\n\t\tif (typeof rawItem[key] === 'string') {\n\t\t\treturn DataType.STRING;\n\t\t} else if (typeof rawItem[key] === 'number') {\n\t\t\treturn DataType.NUMBER;\n\t\t} else if (rawItem[key] instanceof Date) {\n\t\t\treturn DataType.DATE;\n\t\t} else if (typeof rawItem[key] === 'boolean') {\n\t\t\treturn DataType.BOOLEAN;\n\t\t} else {\n\t\t\treturn DataType.UNKNOWN;\n\t\t}\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from '../domain/composition.key';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport { inMemoryCompositionProviders, inMemoryCompositionReadModelProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionDomainCommandInvoker } from '../domain/compositon.domain-command-invoker';\nimport { CompositionDomainEventRepository } from '../domain/composition.domain-event-repository';\nimport { CompositionDomainWarehouse } from '../domain-read/composition.domain-warehouse';\nimport { ColumnAutoConfigurator } from './column/auto/column-auto.configurator';\nimport { DomainColumnAutoConfigurator } from '../domain/column/auto/domain.column-auto.configurator';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\tinMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\tinMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupArchive,\n\n\t\t{\n\t\t\tprovide: CompositionCommandInvoker,\n\t\t\tuseClass: CompositionDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionWarehouse,\n\t\t\tuseClass: CompositionDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionEventRepository,\n\t\t\tuseClass: CompositionDomainEventRepository\n\t\t},\n\t\t{\n\t\t\tprovide: ColumnAutoConfigurator,\n\t\t\tuseClass: DomainColumnAutoConfigurator\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule { // extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, Directive, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n@Directive()\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, Directive, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { fromRxJsObservable, hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n@Directive()\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\thermesFromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tfromRxJsObservable(\n\t\t\tthis.filterForm\n\t\t\t\t.controls[this.filterFieldName]\n\t\t\t\t.valueChanges\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\nimport { hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: [\n\t\texportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t// \tsuper();\n\t// \tif (compositionApiModule === null) {\n\t// \t\tthrow new Error('CompositionApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { Directive, EventEmitter, OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n@Directive()\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(value);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n@Directive()\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.searchEventRepository.onSearchPhrase(this.structureId.toReadModelRootId()),\n\t\t\tthis.searchPhraseChanged\n\t\t);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n@Directive()\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly compositionId: CompositionId,\n\t\t\t\t\t\t  protected readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.compositionId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageSizeChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageSizeChanged\n\t\t);\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, compositionId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.structureId);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n@Directive()\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getSource()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationFacade) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../core/api/summaries-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SummariesCommandInvoker } from '../../core/api/summaries.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.summariesCommandInvoker.setConfig(this.summaries, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../../core/api/panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../../core/api/panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onRowColoring(this.schemaId),\n\t\t\tthis.rowColoringChanged\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { SchemaCommandInvoker } from '../../../core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n\n@Directive({\n\tselector: 'gui-structure[verticalGrid][horizontalGrid]'\n})\nexport class ThemeGridGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ThemeGridGate>): void {\n\n\t\tif (this.isDefined('verticalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setVerticalGrid(this.verticalGrid, this.schemaId);\n\t\t}\n\n\t\tif (this.isDefined('horizontalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setHorizontalGrid(this.horizontalGrid, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onHorizontalGridChanged(this.schemaId),\n\t\t\tthis.horizontalGridChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onVerticalGridChanged(this.schemaId),\n\t\t\tthis.verticalGridChanged\n\t\t);\n\t}\n}\n","import { Directive, Input, OnChanges, OnInit } from '@angular/core';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Directive({\n\tselector: 'gui-structure[loading]'\n})\nexport class SourceLoadingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tloading: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandInvoker: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceLoadingGate>): void {\n\n\n\t\tif (this.isDefined('loading', changes)) {\n\t\t\tthis.sourceCommandInvoker.setLoading(this.loading, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t}\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[virtualScroll]'\n})\nexport class VerticalFormationGate extends Gate implements OnChanges {\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<VerticalFormationGate>): void {\n\n\t\tif (this.isDefined('virtualScroll', changes)) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandInvoker.enableVirtualScroll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.structureCommandInvoker.disableVirtualScroll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SortingConfig } from '../../core/api/sorting-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SortingCommandInvoker } from '../../core/api/sorting.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[sorting]'\n})\nexport class StructureSortingGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSortingGate>) {\n\n\t\tif (this.isDefined('sorting', changes)) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandInvoker.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { FilterConfig } from '../../core/api/filter-config';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[filtering]'\n})\nexport class StructureFilterGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureFilterGate>) {\n\n\t\tif (this.isDefined('filtering', changes)) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setFilterConfig(filtering, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { QuickFiltersConfig } from '../../core/api/quick-filters.config';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[quickFilters]'\n})\nexport class StructureQuickFiltersGate extends Gate implements OnChanges {\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureQuickFiltersGate>) {\n\n\t\tif (this.isDefined('quickFilters', changes)) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setQuickFiltersConfig(quickFilters, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from '../../../summaries/feature/gate/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\nimport { ThemeGridGate } from '../../../../schema/feature/gate/grid/theme-grid.gate';\nimport { SourceLoadingGate } from './source/source-loading.gate';\nimport { VerticalFormationGate } from '../../../vertical-formation/feature/gate/vertical-formation.gate';\nimport { StructureSortingGate } from '../../../sorting/feature/gate/structure-sorting.gate';\nimport { StructureFilterGate } from '../../../filter/feature/gate/structure-filter.gate';\nimport { StructureQuickFiltersGate } from '../../../filter/feature/gate/structure-quick-filters.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate,\n\tThemeGridGate,\n\tStructureSortingGate,\n\tSourceLoadingGate,\n\tStructureFilterGate,\n\tStructureQuickFiltersGate,\n\tVerticalFormationGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDetector } from './resize.detector';\n\n@NgModule({\n\tproviders: [\n\t\tResizeDetector\n\t]\n})\nexport class ResizeDetectorModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/config/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../common/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\nimport { ResizeDetectorModule } from '../../../../common/cdk/resize-detector/resize-detector.module';\nimport { StructureCellEditArchive } from '../../feature/edit/structure.cell-edit.archive';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\tPagingDomainModule.commandHandlers(),\n\t\t\tSortingDomainModule.commandHandlers(),\n\t\t\tFieldDomainModule.commandHandlers(),\n\t\t\tSearchDomainModule.commandHandlers(),\n\t\t\tFilterDomainModule.commandHandlers(),\n\t\t\tSourceDomainModule.commandHandlers(),\n\t\t\tSummariesDomainModule.commandHandlers(),\n\t\t\tVerticalFormationDomainModule.commandHandlers(),\n\t\t\tstructureCommandHandlers\n\t\t], [\n\t\t\tstructureDomainEventHandlers,\n\t\t\tSearchDomainModule.domainEventHandlers(),\n\t\t\tFilterDomainModule.domainEventHandlers(),\n\t\t\tSourceDomainModule.domainEventHandlers(),\n\t\t\tSummariesDomainModule.domainEventHandlers(),\n\t\t\tFieldDomainModule.domainEventHandlers(),\n\t\t\tVerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\tfabricImports,\n\tResizeDetectorModule,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\n\tstructureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\tfabricImports,\n\tPagingFeatureModule,\n\tstructureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = Array.from(exportDeclarations);\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders<StructureModule> {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: 'structure'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: StructureDefinition,\n\t\t\t\t\tuseFactory: createStructureDefinition\n\t\t\t\t},\n\t\t\t\tItemEntityFactory,\n\t\t\t\tStructureThemeConverter,\n\n\t\t\t\tStructureIdGenerator,\n\n\t\t\t\tStructureCellEditArchive,\n\n\t\t\t\tstructureProviders\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GuiGridComponent } from '../../feature/grid/gui.grid.component';\n\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\n\nimport { GuiGridIdGenerator } from '../../feature/grid/register/gui.grid-id.generator';\nimport { GuiGridRegister } from '../../feature/grid/register/gui.grid.register';\nimport { GuiGridColumnComponent } from '../../feature/grid/column/gui.grid-column.component';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiGridComponent,\n\tGuiGridColumnComponent\n];\n\nconst providers = [\n\tGuiGridIdGenerator,\n\tGuiGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiGridComponent,\n\tGuiGridColumnComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiGridComponent,\n\tGuiGridColumnComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = Array.from(entryComponents);\n\n\tstatic exportDeclarations = Array.from(exportDeclarations);\n\n\tstatic elementComponents = Array.from(elementComponents);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DynamicallyCreatedComponent as ɵpx} from './common/cdk/component/dynamically-created-component';\nexport {Gate as ɵqi} from './common/cdk/component/gate';\nexport {GuiComponent as ɵfl} from './common/cdk/component/gui-component';\nexport {IconComponent as ɵgm} from './common/cdk/component/icon-component';\nexport {PureComponent as ɵfr} from './common/cdk/component/pure-component';\nexport {SmartComponent as ɵfk} from './common/cdk/component/smart-component';\nexport {StaticComponent as ɵgn} from './common/cdk/component/static-component';\nexport {Override as ɵmo} from './common/cdk/decorators';\nexport {ConsoleLogger as ɵoj} from './common/cdk/logger/console.logger';\nexport {Logger as ɵk} from './common/cdk/logger/logger';\nexport {LoggerModule as ɵoi} from './common/cdk/logger/logger.module';\nexport {NumberFormatterModule as ɵjx} from './common/cdk/number-formatter/number-formatter.module';\nexport {NumberFormatterPipe as ɵjy} from './common/cdk/number-formatter/number-formatter.pipe';\nexport {ResizeDetectorModule as ɵew} from './common/cdk/resize-detector/resize-detector.module';\nexport {ResizeDetector as ɵex} from './common/cdk/resize-detector/resize.detector';\nexport {SafePipe as ɵnu} from './common/cdk/sanitize/safe.pipe';\nexport {SanitizeModule as ɵnt} from './common/cdk/sanitize/sanitize.module';\nexport {ColumnAutoConfigurator as ɵnr} from './composition/core/api/column/auto/column-auto.configurator';\nexport {ColumnDefinitionId as ɵli} from './composition/core/api/column/column-definition-id';\nexport {CompositionApiModule as ɵlv} from './composition/core/api/composition.api-module';\nexport {CompositionCommandInvoker as ɵkb} from './composition/core/api/composition.command-invoker';\nexport {CompositionEventRepository as ɵnp} from './composition/core/api/composition.event-repository';\nexport {CompositionId as ɵhc} from './composition/core/api/composition.id';\nexport {CompositionWarehouse as ɵhd} from './composition/core/api/composition.warehouse';\nexport {Group as ɵnl} from './composition/core/api/group/group';\nexport {GroupCollection as ɵnk} from './composition/core/api/group/group.collection';\nexport {GroupId as ɵnm} from './composition/core/api/group/group.id';\nexport {CompositionDomainWarehouse as ɵno} from './composition/core/domain-read/composition.domain-warehouse';\nexport {CompositionReadModelRootConverter as ɵna} from './composition/core/domain-read/composition.read-model-root-converter';\nexport {CompositionReadModelRootRepository as ɵnh} from './composition/core/domain-read/composition.read-model-root-repository';\nexport {CellContext as ɵle} from './composition/core/domain-read/definition/cell-context';\nexport {CellTemplateWithContext as ɵld} from './composition/core/domain-read/definition/cell-template-with-context';\nexport {CellValue as ɵlg,CellValueType as ɵlf} from './composition/core/domain-read/definition/cell-value';\nexport {ColumnDefinitionFactory as ɵnb} from './composition/core/domain-read/definition/column-definition.factory';\nexport {EditCommunicationComponent as ɵnz} from './composition/core/domain-read/edit/edit-communication.component';\nexport {EditTemplateFactory as ɵng} from './composition/core/domain-read/edit/edit-template.factory';\nexport {EditTemplateRepository as ɵnf} from './composition/core/domain-read/edit/edit-template.repository';\nexport {EditTemplatesComponent as ɵnw} from './composition/core/domain-read/edit/edit-templates.component';\nexport {BooleanEditTemplateComponent as ɵob} from './composition/core/domain-read/edit/template/boolean-edit-template.component';\nexport {DateEditTemplateComponent as ɵoc} from './composition/core/domain-read/edit/template/date-edit-template.component';\nexport {InputEditTemplateComponent as ɵny} from './composition/core/domain-read/edit/template/input-edit-template.component';\nexport {NumberEditTemplateComponent as ɵoa} from './composition/core/domain-read/edit/template/number-edit-template.component';\nexport {StringEditTemplateComponent as ɵnx} from './composition/core/domain-read/edit/template/string-edit-template.component';\nexport {CompositionGroupArchive as ɵnj} from './composition/core/domain-read/group/composition-group.archive';\nexport {TemplateFactory as ɵne} from './composition/core/domain-read/template/template.factory';\nexport {BarViewComponent as ɵof} from './composition/core/domain-read/view/bar/bar-view.component';\nexport {FunctionViewComponent as ɵoe} from './composition/core/domain-read/view/function/function-view.component';\nexport {PercentageViewComponent as ɵog} from './composition/core/domain-read/view/percentage/percentage-view.component';\nexport {TextViewComponent as ɵoh} from './composition/core/domain-read/view/text/text-view.component';\nexport {ViewTemplateFactory as ɵnd} from './composition/core/domain-read/view/view-template.factory';\nexport {ViewTemplateRepository as ɵnc} from './composition/core/domain-read/view/view-template.repository';\nexport {ViewTemplatesComponent as ɵnv} from './composition/core/domain-read/view/view-templates.component';\nexport {DomainColumnAutoConfigurator as ɵns} from './composition/core/domain/column/auto/domain.column-auto.configurator';\nexport {ColumnAlign as ɵlk} from './composition/core/domain/column/column-align';\nexport {ColumnEntityFactory as ɵly} from './composition/core/domain/column/column-entity.factory';\nexport {ColumnFieldFactory as ɵmm} from './composition/core/domain/column/field/colum-field.factory';\nexport {CompositionMoveLeftColumnCommandHandler as ɵmv} from './composition/core/domain/column/move/left/composition.move-left-column.command-handler';\nexport {CompositionMoveRightColumnCommandHandler as ɵmw} from './composition/core/domain/column/move/right/composition.move-right-column.command-handler';\nexport {ColumnPresentationConverter as ɵlz} from './composition/core/domain/column/presentation/column.presentation.converter';\nexport {SetColumnsCommandHandler as ɵmp} from './composition/core/domain/column/set-columns/set-columns.command-handler';\nexport {CompositionSetColumnEnabledCommandHandler as ɵmt} from './composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler';\nexport {CompositionChangeSortStatusCommandHandler as ɵmu} from './composition/core/domain/column/sort/composition-change-sort-status.command-handler';\nexport {CompositionChangeSortStatusEventHandler as ɵmy} from './composition/core/domain/column/sort/composition-change-sort-status.event-handler';\nexport {SortOrder as ɵlj} from './composition/core/domain/column/sort/sort-order';\nexport {CompositionAggregateFactory as ɵlx} from './composition/core/domain/composition.aggregate-factory';\nexport {CompositionAggregateRepository as ɵmc} from './composition/core/domain/composition.aggregate-repository';\nexport {CompositionDispatcher as ɵmk} from './composition/core/domain/composition.dispatcher';\nexport {CompositionDomainEventRepository as ɵnq} from './composition/core/domain/composition.domain-event-repository';\nexport {CompositionDomainModule as ɵmg} from './composition/core/domain/composition.domain-module';\nexport {CompositionEventConverter as ɵml} from './composition/core/domain/composition.event-converter';\nexport {compositionKey as ɵlw} from './composition/core/domain/composition.key';\nexport {CompositionDomainCommandInvoker as ɵnn} from './composition/core/domain/compositon.domain-command-invoker';\nexport {CreateCompositionCommandHandler as ɵmf} from './composition/core/domain/create/create-composition.command-handler';\nexport {CompositionGroupFactory as ɵma} from './composition/core/domain/group/composition.group.factory';\nexport {SetGroupsCommandHandler as ɵmx} from './composition/core/domain/group/set-groups/set-groups.command-handler';\nexport {ColumnHighlightArchive as ɵmn} from './composition/core/domain/highlight/column-highlight.archive';\nexport {SetCompositionResizeWidthCommandHandler as ɵmr} from './composition/core/domain/width/resize-width/set-composition-resize-width.command-handler';\nexport {SetCompositionContainerWidthCommandHandler as ɵms} from './composition/core/domain/width/set-container-width/set-composition-container-width.command-handler';\nexport {SetCompositionWidthCommandHandler as ɵmq} from './composition/core/domain/width/set-width/set-composition-width.command-handler';\nexport {InMemoryCompositionReadStore as ɵmz} from './composition/core/infrastructure/in-memory/api/in-memory.composition.read-store';\nexport {InMemoryCompositionRepository as ɵni} from './composition/core/infrastructure/in-memory/api/in-memory.composition.repository';\nexport {InMemoryCompositionAggregateRepository as ɵmb} from './composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nexport {InMemoryCompositionAggregateStore as ɵmd} from './composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store';\nexport {inMemoryCompositionCommandProviders as ɵmh,inMemoryCompositionProviders as ɵmj,inMemoryCompositionReadModelProviders as ɵmi} from './composition/core/infrastructure/in-memory/in-memory.composition.providers';\nexport {InMemoryCompositionStore as ɵme} from './composition/core/infrastructure/in-memory/in-memory.composition.store';\nexport {ColumnQueryComponent as ɵod} from './composition/feature/column/column-query.component';\nexport {CompositionFeatureModule as ɵlu} from './composition/feature/composition.feature-module';\nexport {GuiGridGateway as ɵrk} from './gui/grid/feature/grid/gui.grid-gateway';\nexport {guiGridStructureDefinition as ɵrl} from './gui/grid/feature/grid/gui.grid-structure-definition';\nexport {GuiGridIdGenerator as ɵrn} from './gui/grid/feature/grid/register/gui.grid-id.generator';\nexport {GuiGridRegister as ɵrm} from './gui/grid/feature/grid/register/gui.grid.register';\nexport {TranslationApiModule as ɵd} from './l10n/core/api/translation.api-module';\nexport {TranslationFacade as ɵf} from './l10n/core/api/translation.facade';\nexport {TranslationDomainFacade as ɵg} from './l10n/core/domain/translation.domain-facade';\nexport {TranslationFeatureModule as ɵc} from './l10n/feature/translation.feature-module';\nexport {TranslationPipe as ɵe} from './l10n/feature/translation.pipe';\nexport {SchemaApiModule as ɵir} from './schema/core/api/schema.api-module';\nexport {SchemaCommandInvoker as ɵjl} from './schema/core/api/schema.command-invoker';\nexport {SchemaEventRepository as ɵjq} from './schema/core/api/schema.event-repository';\nexport {SchemaReadModelRootId as ɵkj} from './schema/core/api/schema.read-model-root-id';\nexport {SchemaWarehouse as ɵjo} from './schema/core/api/schema.warehouse';\nexport {SchemaRowClassArchive as ɵjs} from './schema/core/api/styling/schema.row-class.archive';\nexport {SchemaRowStyleArchive as ɵjt} from './schema/core/api/styling/schema.row-style.archive';\nexport {SchemaCssClassesEventHandler as ɵji} from './schema/core/domain-read/css-classes/schema-css-classes.event-handler';\nexport {SchemaCssClassesRepository as ɵjj} from './schema/core/domain-read/css-classes/schema.css-classes.repository';\nexport {SchemaHorizontalGridRepository as ɵjf} from './schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository';\nexport {SchemaRowColoringRepository as ɵjg} from './schema/core/domain-read/row-coloring/schema.row-coloring.repository';\nexport {SchemaDomainWarehouse as ɵjp} from './schema/core/domain-read/schema.domain-warehouse';\nexport {SchemaThemeRepository as ɵje} from './schema/core/domain-read/theme/schema.theme.repository';\nexport {SchemaVerticalGridRepository as ɵjh} from './schema/core/domain-read/vertical-grid/schema.vertical-grid.repository';\nexport {CreateSchemaCommandHandler as ɵiy} from './schema/core/domain/create/create-schema.command-handler';\nexport {SchemaAggregateFactory as ɵit} from './schema/core/domain/create/schema.aggregate-factory';\nexport {SetSchemaHorizontalGridCommandHandler as ɵjc} from './schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nexport {SetSchemaVerticalGridCommandHandler as ɵjd} from './schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler';\nexport {SetRowColoringCommandHandler as ɵjb} from './schema/core/domain/row-coloring/set-row-coloring.command-handler';\nexport {SchemaAggregateRepository as ɵiv} from './schema/core/domain/schema.aggregate-repository';\nexport {SchemaDispatcher as ɵjk} from './schema/core/domain/schema.dispatcher';\nexport {SchemaDomainCommandInvoker as ɵjm} from './schema/core/domain/schema.domain-command-invoker';\nexport {SchemaDomainEventRepository as ɵjr} from './schema/core/domain/schema.domain-event-repository';\nexport {SchemaDomainModule as ɵiz} from './schema/core/domain/schema.domain-module';\nexport {schemaKey as ɵis} from './schema/core/domain/schema.key';\nexport {SetSchemaThemeCommandHandler as ɵja} from './schema/core/domain/theme/set-schema-theme.command-handler';\nexport {InMemorySchemaAggregateRepository as ɵiu} from './schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository';\nexport {InMemorySchemaAggregateStore as ɵiw} from './schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store';\nexport {InMemorySchemaStore as ɵix} from './schema/core/infrastructure/in-memory/in-memory.schema.store';\nexport {ThemeGridGate as ɵqy} from './schema/feature/gate/grid/theme-grid.gate';\nexport {StructureDialogSchemaManagerComponent as ɵkk} from './schema/feature/manager/dialog/structure.dialog-schema-manager.component';\nexport {StructureDialogSchemaManagerService as ɵkm} from './schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nexport {StructureSchemaManagerIconComponent as ɵkl} from './schema/feature/manager/manager-icon/structure.schema-manager-icon.component';\nexport {SchemaManagerModule as ɵkh} from './schema/feature/manager/schema-manager.module';\nexport {StructureSchemaMangerComponent as ɵki} from './schema/feature/manager/structure.schema-manger.component';\nexport {SchemaFeatureModule as ɵiq} from './schema/feature/schema.feature-module';\nexport {CssClassModifier as ɵfm} from './structure/common/css-class/css-class.modifier';\nexport {CssClassModule as ɵjv} from './structure/common/css-class/css-class.module';\nexport {StructureSharedModule as ɵju} from './structure/common/structure-shared.module';\nexport {structureKey as ɵh} from './structure/core/api/structre.key';\nexport {StructureCommandInvoker as ɵjn} from './structure/core/api/structure.command-invoker';\nexport {StructureId as ɵfn} from './structure/core/api/structure.id';\nexport {StructureInitialValuesReadyArchive as ɵou} from './structure/core/api/structure.initial-values-ready.archive';\nexport {CreateStructureCommandHandler as ɵbb} from './structure/core/domain/create-structure/create-structure-command-handler.service';\nexport {StructureCreatedEventHandler as ɵeu} from './structure/core/domain/create-structure/structure-created.event-handler';\nexport {StructureAggregateRepository as ɵy} from './structure/core/domain/structure-aggregate.repository';\nexport {StructureAggregateFactory as ɵi} from './structure/core/domain/structure.aggregate-factory';\nexport {StructureDomainCommandInvoker as ɵrj} from './structure/core/domain/structure.domain-command-invoker';\nexport {InMemoryStructureReadStore as ɵim} from './structure/core/infrastructure/in-memory/api/in-memory-structure.read-store';\nexport {InMemoryStructureRepository as ɵri} from './structure/core/infrastructure/in-memory/api/in-memory.structure.repository';\nexport {InMemoryStructureAggregateRepository as ɵx} from './structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nexport {InMemoryStructureAggregateStore as ɵz} from './structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store';\nexport {inMemoryStructureCommandProviders as ɵrf,inMemoryStructureProviders as ɵrh,inMemoryStructureReadProviders as ɵrg} from './structure/core/infrastructure/in-memory/in-memory.structure.providers';\nexport {InMemoryStructureStore as ɵba} from './structure/core/infrastructure/in-memory/in-memory.structure.store';\nexport {FieldApiModule as ɵga} from './structure/field/core/api/field.api-module';\nexport {FieldCommandInvoker as ɵgb} from './structure/field/core/api/field.command-invoker';\nexport {FieldWarehouse as ɵgc} from './structure/field/core/api/field.warehouse';\nexport {FieldReadModelArchive as ɵbp} from './structure/field/core/api/read/field-read-model.archive';\nexport {FieldUiConverter as ɵbq} from './structure/field/core/api/read/field.ui-converter';\nexport {FieldsInitedEventHandler as ɵbo} from './structure/field/core/api/read/fields-inited.event-handler';\nexport {FieldCollectionFactory as ɵt} from './structure/field/core/domain/field-collection.factory';\nexport {FieldDomainModule as ɵbm} from './structure/field/core/domain/field.domain-module';\nexport {DataFieldFactory as ɵw} from './structure/field/core/domain/field/data/data-field.factory';\nexport {FieldIdGenerator as ɵv} from './structure/field/core/domain/field/field-id.generator';\nexport {FieldFactory as ɵu} from './structure/field/core/domain/field/field.factory';\nexport {FieldId as ɵlh} from './structure/field/core/domain/field/field.id';\nexport {InitFieldsCommandHandler as ɵbn} from './structure/field/core/domain/init/init-fields.command-handler';\nexport {FieldFeatureModule as ɵfz} from './structure/field/feature/field.feature-module';\nexport {ActiveFilterArchive as ɵcx} from './structure/filter/core/api/active/active-filter.archive';\nexport {ActiveFiltersSetEventHandler as ɵcw} from './structure/filter/core/api/active/active-filters-set.event-handler';\nexport {FilterContainerRef as ɵhg} from './structure/filter/core/api/config/filter-container-ref';\nexport {filterContainerToken as ɵhf} from './structure/filter/core/api/config/filter-container-token';\nexport {FilterApiModule as ɵgu} from './structure/filter/core/api/filter.api-module';\nexport {FilterCommandInvoker as ɵgv} from './structure/filter/core/api/filter.command-invoker';\nexport {FilterWarehouse as ɵgw} from './structure/filter/core/api/filter.warehouse';\nexport {ConfigFilterSetEventHandler as ɵcp} from './structure/filter/core/api/read/config-filter-set.event-handler';\nexport {ConfigQuickFilterSetEventHandler as ɵcn} from './structure/filter/core/api/read/config-quick-filter-set.event-handler';\nexport {FilterEnabledArchive as ɵcq} from './structure/filter/core/api/read/filter-enabled.archive';\nexport {QuickFilterEnabledArchive as ɵco} from './structure/filter/core/api/read/quick-filter-enabled.archive';\nexport {FilterTypeMap as ɵct} from './structure/filter/core/api/type/filter-type-map';\nexport {FilterTypeArchive as ɵcs} from './structure/filter/core/api/type/filter-type.archive';\nexport {FilterTypeConfigFilterSetEventHandler as ɵcr} from './structure/filter/core/api/type/filter-type.config-filter-set.event-handler';\nexport {FilterTypeReadModel as ɵcu} from './structure/filter/core/api/type/filter-type.read-model';\nexport {UniqueFilterCalculatedEventHandler as ɵcy} from './structure/filter/core/api/unique/unique-filter-calculated.event-handler';\nexport {UniqueValueReadModel as ɵdb} from './structure/filter/core/api/unique/unique-value.read-model';\nexport {UniqueValuesArchive as ɵcz} from './structure/filter/core/api/unique/unique-values.archive';\nexport {UniqueValuesReadModel as ɵda} from './structure/filter/core/api/unique/unique-values.read-model';\nexport {SetConfigFilterCommandHandler as ɵcd} from './structure/filter/core/domain/config/set-config-filter.command-handler';\nexport {AddFilterCommandHandler as ɵcg} from './structure/filter/core/domain/core/add/add-filter.command-handler';\nexport {RemoveAllFiltersCommandHandler as ɵch} from './structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler';\nexport {RemoveFilterCommandHandler as ɵci} from './structure/filter/core/domain/core/remove/remove-filter.command-handler';\nexport {FilterDomainModule as ɵcc} from './structure/filter/core/domain/filter.domain-module';\nexport {FilterManagerFactory as ɵr} from './structure/filter/core/domain/filter.manager-factory';\nexport {SetConfigQuickFilterCommandHandler as ɵce} from './structure/filter/core/domain/quick/set-config-quick-filter.command-handler';\nexport {ToggleFilterCommandHandler as ɵcf} from './structure/filter/core/domain/toggle/toggle-filter.command-handler';\nexport {FilterTypeId as ɵcv} from './structure/filter/core/domain/type/filter-type.id';\nexport {FilterTypeFieldsInitedEventHandler as ɵdd} from './structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler';\nexport {SelectAllUniqueFilterCommandHandler as ɵck} from './structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler';\nexport {SelectUniqueFilterCommandHandler as ɵcj} from './structure/filter/core/domain/unique/select/select-unique-filter.command-handler';\nexport {UniqueValueId as ɵdc} from './structure/filter/core/domain/unique/unique-value-id';\nexport {UnselectAllUniqueFilterCommandHandler as ɵcm} from './structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler';\nexport {UnselectUniqueFilterCommandHandler as ɵcl} from './structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler';\nexport {ActiveFilterListComponent as ɵgy} from './structure/filter/feature/active-filters/active-filter-list.component';\nexport {ActiveFilterListModule as ɵgx} from './structure/filter/feature/active-filters/active-filter-list.module';\nexport {ActiveSearchComponent as ɵgz} from './structure/filter/feature/active-filters/search/active-search.component';\nexport {StructureFilterGate as ɵrb} from './structure/filter/feature/gate/structure-filter.gate';\nexport {StructureQuickFiltersGate as ɵrc} from './structure/filter/feature/gate/structure-quick-filters.gate';\nexport {ColumnSelectorComponent as ɵhh} from './structure/filter/feature/menu/column-selector/column-selector.component';\nexport {FieldSelectorComponent as ɵhk} from './structure/filter/feature/menu/field-selector/field-selector.component';\nexport {FilterMenuTriggerComponent as ɵhe} from './structure/filter/feature/menu/filter-menu-trigger.component';\nexport {FilterMenuComponent as ɵhb} from './structure/filter/feature/menu/filter-menu.component';\nexport {FilterMenuFeatureModule as ɵgt} from './structure/filter/feature/menu/filter-menu.feature-module';\nexport {FilterTypeSelectorComponent as ɵhi} from './structure/filter/feature/menu/filter-selector/filter-type-selector.component';\nexport {FilterIconComponent as ɵha} from './structure/filter/feature/menu/icon/filter-icon.component';\nexport {FilterValueComponent as ɵhj} from './structure/filter/feature/menu/value/filter-value.component';\nexport {UniqueValueListComponent as ɵla} from './structure/filter/feature/unique/unique-value-list.component';\nexport {UniqueValueListModule as ɵkz} from './structure/filter/feature/unique/unique-value-list.module';\nexport {CellEditConfig as ɵgs} from './structure/grid/core/api/edit/cell-edit.config';\nexport {StructureInfoPanelConfigService as ɵoq} from './structure/grid/core/api/panel/info/structure.info-panel-config.service';\nexport {StructureInfoPanelArchive as ɵks} from './structure/grid/core/api/panel/info/structure.info-panel.archive';\nexport {StructureInfoPanelConfigConverter as ɵkv} from './structure/grid/core/api/panel/info/structure.info-panel.config-converter';\nexport {StructureReadModelRepository as ɵff} from './structure/grid/core/api/read/structure.read-model-repository';\nexport {StructureReadModelRootConverter as ɵin} from './structure/grid/core/api/read/structure.read-model-root-converter';\nexport {STRUCTURE_CSS_CLASS_NAME as ɵpv} from './structure/grid/core/api/structure-tokens';\nexport {StructureModule as ɵb,createStructureDefinition as ɵa} from './structure/grid/core/api/structure.module';\nexport {structureCommandHandlers as ɵer,structureDomainEventHandlers as ɵes,structureProviders as ɵet} from './structure/grid/core/api/structure.providers';\nexport {StructureWarehouse as ɵgp} from './structure/grid/core/api/structure.warehouse';\nexport {CellEditorManager as ɵgr} from './structure/grid/core/domain/edit/cell-editor.manager';\nexport {StructureBlueprintComponent as ɵpu} from './structure/grid/feature/blueprint/structure.blueprint.component';\nexport {StructureDialogColumnManagerComponent as ɵkc} from './structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component';\nexport {StructureDialogColumnManagerService as ɵkf} from './structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service';\nexport {StructureColumnManagerIconComponent as ɵke} from './structure/grid/feature/column-manager/icon/structure.column-manager-icon.component';\nexport {StructureMenuColumnManagerComponent as ɵkd} from './structure/grid/feature/column-manager/menu/structure.menu-column-manager.component';\nexport {StructureColumnManagerComponent as ɵka} from './structure/grid/feature/column-manager/structure.column-manager.component';\nexport {StructureColumnManagerModule as ɵjz} from './structure/grid/feature/column-manager/structure.column-manager.module';\nexport {StructureCellEditBooleanComponent as ɵpq} from './structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component';\nexport {StructureCellEditComponent as ɵpp} from './structure/grid/feature/content/cell/edit/structure.cell-edit.component';\nexport {StructureCellComponent as ɵpo} from './structure/grid/feature/content/cell/structure.cell.component';\nexport {StructureRowComponent as ɵpn} from './structure/grid/feature/content/row/structure-row.component';\nexport {StructureContainerComponent as ɵpr} from './structure/grid/feature/content/structure-container.component';\nexport {StructureContentComponent as ɵpm} from './structure/grid/feature/content/structure-content.component';\nexport {StructureCellEditCloseAllService as ɵox} from './structure/grid/feature/edit/structure.cell-edit-close-all.service';\nexport {StructureCellEditArchive as ɵgq} from './structure/grid/feature/edit/structure.cell-edit.archive';\nexport {StructureCellEditStore as ɵor} from './structure/grid/feature/edit/structure.cell-edit.store';\nexport {StructureEditModeArchive as ɵop} from './structure/grid/feature/edit/structure.edit-mode.archive';\nexport {StructureColumnHeaderGate as ɵqh} from './structure/grid/feature/gate/column/header/structure-column-header.gate';\nexport {StructureColumnMenuGate as ɵqs} from './structure/grid/feature/gate/column/menu/structure-column-menu.gate';\nexport {StructureL10nGate as ɵqp} from './structure/grid/feature/gate/l10n/structure-l10n.gate';\nexport {StructurePagingGate as ɵqj} from './structure/grid/feature/gate/paging/structure-paging.gate';\nexport {StructureInfoPanelGate as ɵqu} from './structure/grid/feature/gate/panel/info/structure-info-panel.gate';\nexport {StructurePanelGate as ɵqq} from './structure/grid/feature/gate/panel/structure-panel.gate';\nexport {StructureRowClassGate as ɵqv} from './structure/grid/feature/gate/row/class/structure-row-class.gate';\nexport {StructureRowColoringGate as ɵqx} from './structure/grid/feature/gate/row/coloring/structure-row-coloring.gate';\nexport {StructureRowDetailGate as ɵqr} from './structure/grid/feature/gate/row/detail/structure-row-detail.gate';\nexport {StructureRowStyleGate as ɵqw} from './structure/grid/feature/gate/row/style/structure-row-style.gate';\nexport {StructureSearchingGate as ɵql} from './structure/grid/feature/gate/searching/structure-searching.gate';\nexport {SourceLoadingGate as ɵra} from './structure/grid/feature/gate/source/source-loading.gate';\nexport {StructureSelectionGate as ɵqn} from './structure/grid/feature/gate/source/structure-selection.gate';\nexport {structureGates as ɵqg} from './structure/grid/feature/gate/structure.gates';\nexport {StructureGateway as ɵoo} from './structure/grid/feature/gate/structure.gateway';\nexport {SelectAllComponent as ɵpl} from './structure/grid/feature/header/column/select-all/select-all.component';\nexport {StructureHeaderColumnsComponent as ɵph} from './structure/grid/feature/header/column/structure-header-columns.component';\nexport {StructureHeaderFiltersComponent as ɵpi} from './structure/grid/feature/header/filters/structure-header-filters.component';\nexport {StructureHeaderFilterComponent as ɵpk} from './structure/grid/feature/header/filters/structure.header-filter.component';\nexport {StructureHeaderGroupsComponent as ɵpj} from './structure/grid/feature/header/group/structure-header-groups.component';\nexport {StructureColumnConfigComponent as ɵlb} from './structure/grid/feature/header/menu/config/structure.column-config.component';\nexport {StructureColumnMenuConfigArchive as ɵlc} from './structure/grid/feature/header/menu/config/structure.column-menu-config.archive';\nexport {StructureColumnMenuArrowIconComponent as ɵlr} from './structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component';\nexport {StructureColumnMenuIconComponent as ɵlq} from './structure/grid/feature/header/menu/icon/structure.column-menu-icon.component';\nexport {StructureColumnConfigColumnHideComponent as ɵlo} from './structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component';\nexport {StructureColumnConfigColumnMoveComponent as ɵlp} from './structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component';\nexport {StructureColumnConfigSortComponent as ɵln} from './structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component';\nexport {StructureColumnConfigService as ɵlm} from './structure/grid/feature/header/menu/structure.column-config.service';\nexport {StructureColumnMenuModule as ɵky} from './structure/grid/feature/header/menu/structure.column-menu.module';\nexport {StructureColumnConfigTriggerComponent as ɵll} from './structure/grid/feature/header/menu/trigger/structure.column-config-trigger.component';\nexport {StructureQuickFiltersComponent as ɵpt} from './structure/grid/feature/header/quick-filters/structure.quick-filters.component';\nexport {StructureHeaderBottomEnabledArchive as ɵot} from './structure/grid/feature/header/structure-header-bottom-enabled.archive';\nexport {StructureHeaderTopEnabledArchive as ɵoy} from './structure/grid/feature/header/structure-header-top-enabled.archive';\nexport {StructureHeaderComponent as ɵpg} from './structure/grid/feature/header/structure-header.component';\nexport {StructureFooterPanelComponent as ɵqf} from './structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nexport {StructureFooterPanelConfigArchive as ɵpc} from './structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nexport {StructureBannerPanel as ɵqe} from './structure/grid/feature/panel/banner-panels/structure-banner-panel';\nexport {StructureTitlePanelComponent as ɵqd} from './structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component';\nexport {StructureTitlePanelConfigArchive as ɵpb} from './structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive';\nexport {StructureInfoIconComponent as ɵku} from './structure/grid/feature/panel/info/icon/structure.info-icon.component';\nexport {StructureInfoModalComponent as ɵkt} from './structure/grid/feature/panel/info/info-modal/structure-info-modal.component';\nexport {StructureInfoPanelComponent as ɵkr} from './structure/grid/feature/panel/info/structure.info-panel.component';\nexport {StructureInfoPanelModule as ɵjw} from './structure/grid/feature/panel/info/structure.info-panel.module';\nexport {StructureTopPanelComponent as ɵkx} from './structure/grid/feature/panel/top/structure.top-panel.component';\nexport {StructureTopPanelModule as ɵkw} from './structure/grid/feature/panel/top/structure.top-panel.module';\nexport {StructureRowDetailConfigArchive as ɵoz} from './structure/grid/feature/row-detail/structure.row-detail.config-archive';\nexport {StructureRowDetailService as ɵpa} from './structure/grid/feature/row-detail/structure.row-detail.service';\nexport {StructureRowDetailViewComponent as ɵpw} from './structure/grid/feature/row-detail/view/structure.row-detail-view.component';\nexport {structureRowDetailViewItem as ɵpy,structureRowDetailViewTemplate as ɵpz} from './structure/grid/feature/row-detail/view/structure.row-detail-view.tokens';\nexport {SchemaCssClassManager as ɵow} from './structure/grid/feature/schema/schema-css-class.manager';\nexport {StructureThemeConverter as ɵkg} from './structure/grid/feature/schema/structure.theme.converter';\nexport {structureComponentToken as ɵpd} from './structure/grid/feature/structure-component-token';\nexport {StructureDefinition as ɵpe} from './structure/grid/feature/structure-definition';\nexport {fabricImports as ɵev} from './structure/grid/feature/structure-fabric.imports';\nexport {StructureIdGenerator as ɵov} from './structure/grid/feature/structure-id.generator';\nexport {structureParentComponent as ɵps} from './structure/grid/feature/structure-parent-component';\nexport {StructureComponent as ɵon,compositionIdFactoryForGrid as ɵol,schemaIdFactoryForGrid as ɵom,structureIdFactoryForGrid as ɵok} from './structure/grid/feature/structure.component';\nexport {PagingApiModule as ɵez} from './structure/paging/core/api/paging.api-module';\nexport {PagingCommandInvoker as ɵfa} from './structure/paging/core/api/paging.command-invoker';\nexport {PagingEventRepository as ɵfg} from './structure/paging/core/api/paging.event-repository';\nexport {PagingWarehouse as ɵfc} from './structure/paging/core/api/paging.warehouse';\nexport {PagingConverter as ɵfi} from './structure/paging/core/api/read/paging.converter';\nexport {PagingRepository as ɵfe} from './structure/paging/core/api/read/paging.repository';\nexport {PagingDomainWarehouse as ɵfd} from './structure/paging/core/domain-read/paging.domain-warehouse';\nexport {PagingDomainEventRepository as ɵfh} from './structure/paging/core/domain-read/paging.domain.event-repository';\nexport {ChangePagesizeCommandHandler as ɵbh} from './structure/paging/core/domain/change-pagesize/change-pagesize.command-handler';\nexport {NextPageCommandHandler as ɵbf} from './structure/paging/core/domain/next-page/next-page.command-handler';\nexport {PagingDispatcher as ɵbd} from './structure/paging/core/domain/paging.dispatcher';\nexport {PagingDomainModule as ɵbc} from './structure/paging/core/domain/paging.domain-module';\nexport {PagingDomainCommandInvoker as ɵfb} from './structure/paging/core/domain/paging.domain.command-invoker';\nexport {PagingManagerFactory as ɵj} from './structure/paging/core/domain/paging.manager-factory';\nexport {PrevPageCommandHandler as ɵbg} from './structure/paging/core/domain/prev-page/prev-page.command-handler';\nexport {SetPagingCommandHandler as ɵbe} from './structure/paging/core/domain/set/set-paging.command-handler';\nexport {AlternativePagingNavigatorComponent as ɵfu} from './structure/paging/feature/advanced/navigator/alternative-paging-navigator.component';\nexport {AlternativePagingPagesComponent as ɵfv} from './structure/paging/feature/advanced/pages/alternative-paging-pages.component';\nexport {PagingNavigatorComponent as ɵfq} from './structure/paging/feature/basic/navigator/paging-navigator.component';\nexport {PagingStatsComponent as ɵft} from './structure/paging/feature/basic/stats/paging-stats.component';\nexport {PagingGate as ɵqk} from './structure/paging/feature/gate/paging.gate';\nexport {PagingDisplayModeArchive as ɵfp} from './structure/paging/feature/mode/paging-display-mode.archive';\nexport {PagingDefinition as ɵpf} from './structure/paging/feature/paging-definition';\nexport {PagingComponent as ɵfj} from './structure/paging/feature/paging.component';\nexport {PagingFeatureModule as ɵey} from './structure/paging/feature/paging.feature-module';\nexport {PagingSelectComponent as ɵfs} from './structure/paging/feature/select/paging-select.component';\nexport {SearchApiModule as ɵge} from './structure/search/core/api/search.api-module';\nexport {SearchCommandInvoker as ɵgf} from './structure/search/core/api/search.command-invoker';\nexport {SearchEventRepository as ɵgj} from './structure/search/core/api/search.event-repository';\nexport {SearchWarehouse as ɵgh} from './structure/search/core/api/search.warehouse';\nexport {SearchDomainEventRepository as ɵgk} from './structure/search/core/domain-read/search.domain-event-repository';\nexport {SearchDomainWarehouse as ɵgi} from './structure/search/core/domain-read/search.domain-warehouse';\nexport {SetConfigSearchingCommandHandler as ɵbv} from './structure/search/core/domain/config/set-config-searching.command-handler';\nexport {ConfigSearchingSetEventHandler as ɵca} from './structure/search/core/domain/enabled/config-searching-set.event-handler';\nexport {SearchingEnabledArchive as ɵcb} from './structure/search/core/domain/enabled/searching-enabled.archive';\nexport {SearchHighlightArchive as ɵbt} from './structure/search/core/domain/highlight/search-highlight.archive';\nexport {SearchPhraseSetEventHandler as ɵby} from './structure/search/core/domain/phrase/search-phrase-set.event-handler';\nexport {SearchPhraseArchive as ɵbz} from './structure/search/core/domain/phrase/search-phrase.archive';\nexport {StructureSetSearchPhraseCommandHandler as ɵbw} from './structure/search/core/domain/phrase/set-phrase/structure.set-search-phrase.command-handler';\nexport {SearchPlaceholderArchive as ɵbu} from './structure/search/core/domain/placeholder/search-placeholder.archive';\nexport {SearchDispatcher as ɵbs} from './structure/search/core/domain/search.dispatcher';\nexport {SearchDomainCommandInvoker as ɵgg} from './structure/search/core/domain/search.domain-command-invoker';\nexport {SearchDomainModule as ɵbr} from './structure/search/core/domain/search.domain-module';\nexport {SearchManagerFactory as ɵs} from './structure/search/core/domain/search.manager-factory';\nexport {SearchingGate as ɵqm} from './structure/search/feature/gate/searching.gate';\nexport {SearchIconComponent as ɵgl} from './structure/search/feature/icon/search-icon.component';\nexport {SearchComponent as ɵgo} from './structure/search/feature/search.component';\nexport {SearchFeatureModule as ɵgd} from './structure/search/feature/search.feature-module';\nexport {SortingApiModule as ɵfx} from './structure/sorting/core/api/sorting.api-module';\nexport {SortingCommandInvoker as ɵfy} from './structure/sorting/core/api/sorting.command-invoker';\nexport {SetSortOrderCommandHandler as ɵbl} from './structure/sorting/core/domain/order/set-sort-order.command-handler';\nexport {SetSortingCommandHandler as ɵbk} from './structure/sorting/core/domain/set-config/set-sorting.command-handler';\nexport {SortingDomainModule as ɵbi} from './structure/sorting/core/domain/sorting.domain-module';\nexport {ToggleSortCommandHandler as ɵbj} from './structure/sorting/core/domain/toggle/toggle-sort.command-handler';\nexport {StructureSortingGate as ɵqz} from './structure/sorting/feature/gate/structure-sorting.gate';\nexport {SortingFeatureModule as ɵfw} from './structure/sorting/feature/sorting.feature-module';\nexport {SourceEventService as ɵhr} from './structure/source/core/api/event/source-event.service';\nexport {FormationCommandInvoker as ɵht} from './structure/source/core/api/formation/formation.command-invoker';\nexport {FormationEventRepository as ɵhs} from './structure/source/core/api/formation/formation.event-repository';\nexport {FormationWarehouse as ɵhu} from './structure/source/core/api/formation/formation.warehouse';\nexport {RowSelectionModeRepository as ɵdv} from './structure/source/core/api/formation/mode/row-selection-mode.repository';\nexport {SelectionModeSetEventHandler as ɵdu} from './structure/source/core/api/formation/mode/selection-mode-set.event-handler';\nexport {RowSelectedRepository as ɵdt} from './structure/source/core/api/formation/row-selected/row-selected.repository';\nexport {SelectedRowChangedEventHandler as ɵds} from './structure/source/core/api/formation/row-selected/selected-row-changed.event-handler';\nexport {SelectedRow as ɵqa} from './structure/source/core/api/formation/selected-row';\nexport {RowSelectEnabledRepository as ɵos} from './structure/source/core/api/formation/set-enabled/row-select-enabled.repository';\nexport {RowSelectionTypeArchive as ɵhv} from './structure/source/core/api/formation/type/row-selection-type.archive';\nexport {SourceApiModule as ɵhm} from './structure/source/core/api/source.api-module';\nexport {SourceCommandInvoker as ɵho} from './structure/source/core/api/source.command-invoker';\nexport {SourceConverter as ɵhn} from './structure/source/core/api/source.converter';\nexport {SourceWarehouse as ɵfo} from './structure/source/core/api/source.warehouse';\nexport {SourceDomainWarehouse as ɵhq} from './structure/source/core/domain-read/source.domain-warehouse';\nexport {ItemEntityFactory as ɵre} from './structure/source/core/domain/core/item/item.entity-factory';\nexport {SourceManagerFactory as ɵl} from './structure/source/core/domain/core/source.manager-factory';\nexport {FormationManagerFactory as ɵm} from './structure/source/core/domain/formation/core/formation.manager-factory';\nexport {FormationDispatcher as ɵdg} from './structure/source/core/domain/formation/formation.dispatcher';\nexport {SetSelectionModeCommandHandler as ɵdl} from './structure/source/core/domain/formation/mode/set-selection-mode.command-handler';\nexport {SelectAllRowsCommandHandler as ɵdm} from './structure/source/core/domain/formation/select-all/select-all-rows.command-handler';\nexport {SetEnabledSelectionCommandHandler as ɵdk} from './structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler';\nexport {ToggleSelectedRowCommandHandler as ɵdp} from './structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler';\nexport {UnselectAllRowsCommandHandler as ɵdn} from './structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler';\nexport {SourceSetLoadingCommandHandler as ɵdh} from './structure/source/core/domain/loading/source-set-loading.command-handler';\nexport {DeleteOriginItemCommandHandler as ɵdo} from './structure/source/core/domain/origin/delete/delete-origin-item.command-handler';\nexport {StructureEditSourceItemCommandHandler as ɵdj} from './structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler';\nexport {OriginId as ɵqc} from './structure/source/core/domain/origin/origin-id';\nexport {OriginItemEntity as ɵqb} from './structure/source/core/domain/origin/origin-item-entity';\nexport {SetOriginCommandHandler as ɵdi} from './structure/source/core/domain/origin/set-origin/set-origin.command-handler';\nexport {StructureOriginChangedEventHandler as ɵdq} from './structure/source/core/domain/origin/structure.origin-changed.event-handler';\nexport {StructureSourceOriginArchive as ɵdr} from './structure/source/core/domain/origin/structure.source-origin.archive';\nexport {StructurePreparedItemsArchive as ɵdx} from './structure/source/core/domain/prepared/structure.prepared-items.archive';\nexport {StructurePreparedItemsEventHandler as ɵdw} from './structure/source/core/domain/prepared/structure.prepared-items.event-handler';\nexport {SourceDispatcher as ɵdf} from './structure/source/core/domain/source.dispatcher';\nexport {SourceDomainEventPublisher as ɵbx} from './structure/source/core/domain/source.domain-event.publisher';\nexport {SourceDomainModule as ɵde} from './structure/source/core/domain/source.domain-module';\nexport {SourceDomainCommandInvoker as ɵhp} from './structure/source/core/domain/source.domain.command-invoker';\nexport {ActiveFilterMenuTriggerDirective as ɵko} from './structure/source/feature/counter/filter/active-filter-menu-trigger.directive';\nexport {ActiveFilterMenuComponent as ɵkq} from './structure/source/feature/counter/filter/active-filter-menu.component';\nexport {ActiveFilterService as ɵkp} from './structure/source/feature/counter/filter/active-filter.service';\nexport {SourceCounterFeatureModule as ɵkn} from './structure/source/feature/counter/source-counter.feature-module';\nexport {EmptySourceComponent as ɵlt} from './structure/source/feature/empty/empty-source.component';\nexport {EmptySourceFeatureModule as ɵls} from './structure/source/feature/empty/empty-source.feature-module';\nexport {SelectionGate as ɵqo} from './structure/source/feature/gate/selection.gate';\nexport {SourceFeatureModule as ɵhl} from './structure/source/feature/source.feature-module';\nexport {SummariesApiModule as ɵhx} from './structure/summaries/core/api/summaries.api-module';\nexport {SummariesCommandInvoker as ɵhy} from './structure/summaries/core/api/summaries.command-invoker';\nexport {SummariesEventRepository as ɵid} from './structure/summaries/core/api/summaries.event-repository';\nexport {SummariesWarehouse as ɵif} from './structure/summaries/core/api/summaries.warehouse';\nexport {SummariesDomainEventRepository as ɵie} from './structure/summaries/core/domain-read/summaries.domain-event-repository';\nexport {SummariesDomainWarehouse as ɵig} from './structure/summaries/core/domain-read/summaries.domain-warehouse';\nexport {BooleanSummariesCalculator as ɵea} from './structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator';\nexport {DateSummariesCalculator as ɵeb} from './structure/summaries/core/domain/calculation/date/date-summaries.calculator';\nexport {NumberSummariesCalculator as ɵec} from './structure/summaries/core/domain/calculation/number/number-summaries.calculator';\nexport {StringSummariesCalculator as ɵed} from './structure/summaries/core/domain/calculation/string/string-summaries.calculator';\nexport {SummariesCalculator as ɵq} from './structure/summaries/core/domain/calculation/summaries.calculator';\nexport {SUMMARIES_CALCULATORS as ɵp} from './structure/summaries/core/domain/calculation/summaries.calculators.token';\nexport {UnknownSummariesCalculator as ɵee} from './structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator';\nexport {StructureSummariesConfigArchive as ɵib} from './structure/summaries/core/domain/config/structure.summaries-config.archive';\nexport {StructureSummariesPanelConfig as ɵic} from './structure/summaries/core/domain/config/structure.summaries-panel.config';\nexport {StructureSummariesPanelConfigConverter as ɵia} from './structure/summaries/core/domain/config/structure.summaries-panel.config-converter';\nexport {StructureSummariesEnabledSetEventHandler as ɵeg} from './structure/summaries/core/domain/enabled/structure.summaries-enabled-set.event-handler';\nexport {SummariesEnabledArchive as ɵeh} from './structure/summaries/core/domain/enabled/summaries-enabled-archive.service';\nexport {StructureSetSummariesEnabledCommandHandler as ɵef} from './structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler';\nexport {SummariesDomainCommandInvoker as ɵhz} from './structure/summaries/core/domain/summaries.domain-command-invoker';\nexport {SummariesDomainModule as ɵdy} from './structure/summaries/core/domain/summaries.domain-module';\nexport {SummariesManagerFactory as ɵo} from './structure/summaries/core/domain/summaries.manager.factory';\nexport {provideSummariesCalculator as ɵdz} from './structure/summaries/core/domain/summaries.providers';\nexport {StructureSummariesGate as ɵqt} from './structure/summaries/feature/gate/structure-summaries.gate';\nexport {StructureSummariesPanelComponent as ɵih} from './structure/summaries/feature/panel/structure.summaries-panel.component';\nexport {SummariesFeatureModule as ɵhw} from './structure/summaries/feature/summaries.feature-module';\nexport {VerticalFormationApiModule as ɵij} from './structure/vertical-formation/core/api/vertical-formation.api-module';\nexport {VerticalFormationConverter as ɵik} from './structure/vertical-formation/core/api/vertical-formation.converter';\nexport {VerticalFormationRepository as ɵil} from './structure/vertical-formation/core/api/vertical-formation.repository';\nexport {VerticalFormationWarehouse as ɵio} from './structure/vertical-formation/core/api/vertical-formation.warehouse';\nexport {ScrollBarPositionSetEventHandler as ɵep} from './structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nexport {VerticalFormationScrollBarPositionArchive as ɵeq} from './structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive';\nexport {VerticalFormationDomainWarehouse as ɵip} from './structure/vertical-formation/core/domain-read/vertical-formation.domain-warehouse';\nexport {StructureSetHeightCommandHandler as ɵen} from './structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler';\nexport {SetScrollBarPositionCommandHandler as ɵeo} from './structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler';\nexport {SetScrollPositionCommandHandler as ɵej} from './structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler';\nexport {SetVerticalScrollEnabledCommandHandler as ɵek} from './structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler';\nexport {SetRowHeightBasedOnThemeCommandHandler as ɵel} from './structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nexport {SetRowHeightCommandHandler as ɵem} from './structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler';\nexport {VerticalFormationDomainModule as ɵei} from './structure/vertical-formation/core/domain/vertical-formation.domain-module';\nexport {VerticalFormationFactory as ɵn} from './structure/vertical-formation/core/domain/vertical-formation.factory';\nexport {VerticalFormationGate as ɵrd} from './structure/vertical-formation/feature/gate/vertical-formation.gate';\nexport {VerticalFormationFeatureModule as ɵii} from './structure/vertical-formation/feature/vertical-formation.feature-module';"],"names":["_a","declarations","Optional","exportDeclarations","imports","entryComponents"],"mappings":"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"}