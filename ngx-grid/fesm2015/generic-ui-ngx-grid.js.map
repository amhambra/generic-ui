{"version":3,"file":"generic-ui-ngx-grid.js","sources":["ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/composition/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/sort-status.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/composition.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/init/composition-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/init/init-composition.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/init/init-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/structure-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"sourcesContent":["export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\taggregation?: GuiColumnAggregation;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumns?: boolean;\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../lib/structure/domain/composition/column-aggregation.config';\nimport { AggregationType } from '../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/structure/domain/composition/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/structure/domain/composition/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","import { EventEmitter, Input, Output, OnChanges, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn, GuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/structure/domain/composition/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{after: any, before: any}> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn  this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs/';\n\nimport { AggregateId } from '@generic-ui/hermes';\nimport { Structure } from './structure';\n\n\n\nexport abstract class StructureRepository {\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, Input, OnChanges, Output, EventEmitter } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, Input, EventEmitter, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { Component, ChangeDetectionStrategy, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\t\t\t<p>Generic UI Grid</p>\n\t\t\t<p>version 0.5.4</p>\n\n\t\t\t<p>Links:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/\">Website</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<p>Feedback:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t</li>\n\n\t\t\t</ul>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\t\t\t\n\t\t\t<p *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\n\t\t\t<p *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\t\t\t\n\t\t</ng-container>\n\t\t<div>\n\t\t\t<p (click)=\"openInfo()\">\n\t\t\t\t<button>i</button>\n\t\t\t\tInfo\n\t\t\t</p>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo() {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t{{ element }}\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t{{ element }}\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-bold\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-italic\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\" >\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\" >\n\t\t\t<gui-function-view [element]=\"element\" ></gui-function-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\tselect(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { Inject, ChangeDetectionStrategy, ViewEncapsulation, Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<gui-checkbox #checkbox\n\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t  (changed)=\"toggle($event)\"></gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.checkboxRef.nativeElement.querySelector('input[type=\"checkbox\"]');\n\n\t\tinputElement.focus();\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(400),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumns(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columns: Array<ColumnConfig>) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","export enum SortStatus {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { CellView } from '../../cell-view';\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { HeaderTemplate } from '../../column.config';\nimport { SortStatus } from '../sort/sort-status';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\nexport class ColumnEntity {\n\n\tcolumnId: ColumnId;\n\n\tcolumnField: ColumnField;\n\n\theader?: string | HeaderTemplate;\n\n\tsortStatus = SortStatus.NONE;\n\n\twidth?: number;\n\n\tsortable?: boolean;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tconstructor(columnField: ColumnField,\n\t\t\t\theader?: string | HeaderTemplate,\n\t\t\t\tview?: ViewEntity,\n\t\t\t\twidth?: number) {\n\t\tthis.columnField = columnField;\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate{\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst column: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField();\n\n\t\tlet columnEntity = new ColumnEntity(field);\n\n\t\tif (column.header !== undefined) {\n\t\t\tcolumnEntity.header = column.header;\n\t\t}\n\n\t\tif (column.view !== undefined) {\n\t\t\tcolumnEntity.setView(new ViewEntity(column.view));\n\t\t}\n\n\t\tif (column.width !== undefined) {\n\t\t\tcolumnEntity.width = this.convertWidth(column.width);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n}\n","import { AggregateId, AggregateEvent } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from '../column.entity';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly columns: Array<ColumnEntity>) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnWidthCollection } from './column/column-width/column-width-collection';\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './sort/change-sort.params';\nimport { SortStatus } from './sort/sort-status';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\t/**\n\t * Collection of columns which are used in the composition.\n\t */\n\tprivate activeColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\t/**\n\t * DOM element's width\n\t */\n\tprivate containerWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\t/**\n\t * Autowired\n\t */\n\tprivate readonly columnFactory: ColumnEntityFactory = new ColumnEntityFactory();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id);\n\n\t\tconst columns = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columns;\n\t\tthis.width = width;\n\n\t\tthis.activeColumns = this.columnFactory.create(columnsParams);\n\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columns, width);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\t}\n\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.activeColumns.length > 0;\n\t}\n\n\tclone(): CompositionAggregate {\n\n\t\tconst activeColumns = [...this.activeColumns];\n\n\t\tlet composition = new CompositionAggregate(\n\t\t\tthis.getId(),\n\t\t\tthis.baseParams,\n\t\t\tthis.width,\n\t\t\tthis.resizeWidthEnabled\n\t\t);\n\n\t\tcomposition.containerWidth = this.containerWidth;\n\t\tcomposition.activeColumns = activeColumns;\n\t\tcomposition.columnWidthCollection = this.columnWidthCollection;\n\n\t\treturn composition;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tconst columns: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tthis.columnWidthCollection.setColumns(columns);\n\n\t\tconst newColumns = this.columnFactory.create(params),\n\t\t\twidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.updateColumnsWidths(newColumns, widths);\n\n\t\tthis.setActiveColumnsWithEvent(newColumns);\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\t// TODO Aggregate events\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\n\t\tthis.activeColumns.forEach((column: ColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortStatus.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortStatus.ASC : SortStatus.DESC;\n\n\t\t\tconst columns = this.activeColumns.filter((column: ColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tthis.columnWidthCollection.setWidth(this.getWidth());\n\n\t\tconst newColumns = [...this.activeColumns],\n\t\t\twidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.updateColumnsWidths(newColumns, widths);\n\n\t\tthis.setActiveColumnsWithEvent(newColumns);\n\t}\n\n\tprivate updateColumnsWidths(columns: Array<ColumnEntity>, widths: Array<number>): void {\n\t\tcolumns.forEach((columnEntity: ColumnEntity, index: number) => {\n\t\t\tcolumnEntity.width = widths[index];\n\t\t});\n\t}\n\n\tprivate setActiveColumnsWithEvent(columns: Array<ColumnEntity>): void {\n\t\tthis.activeColumns = columns;\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.columnWidthCollection.getColumns());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.columnWidthCollection.getColumns());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerWidth = containerWidth;\n\t\t}\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryAggregateStore, AggregateStoreRegister, AggregateId } from '@generic-ui/hermes';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { CompositionAggregate } from '../../../../domain/composition/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n\t@Override\n\tgetById(aggregateId: AggregateId): CompositionAggregate {\n\t\tlet composition = super.getById(aggregateId);\n\n\t\tif (composition) {\n\t\t\treturn composition.clone();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\n\t}\n}\n","import { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository {\n\n\tabstract getById(compositionId: CompositionId): CompositionAggregate;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../../domain/composition/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../../domain/composition/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): CompositionAggregate {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../command/sort/sort-status';\n\n\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortStatus: SortStatus) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId) {\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortStatus } from '../../command/sort/sort-status';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortStatus;\n\n\tprivate header: string | HeaderTemplate;\n\n\tconstructor(field: ColumnField,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tsort: SortStatus = SortStatus.NONE) {\n\t\tthis.field = field;\n\t\tthis.header = header;\n\t\tthis.sortStatus = sort;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(this.headerTemplate, this.editTemplate, headerCellContext, this.width, fieldId, this.sortStatus);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tlet accessor = (entity: any) => {\n\t\t\treturn this.templateFunction(this.field.getAccessor()(entity));\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(this.cellTemplate, this.editTemplate, true, accessor, this.width, this.field.getId());\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(column.getField(), column.getHeader(), column.sortStatus);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.width;\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModel, AggregateId } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly columns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetColumns(): Array<ColumnDefinition> {\n\t\treturn this.columns;\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.columns\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.columns\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.columns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.columns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tcolumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tcolumnDefs: Array<ColumnDefinition> = this.convertColumnsToColumnDef(columns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, columnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertColumnsToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../../domain/composition/read/composition';\nimport { CompositionAggregate } from '../../../../domain/composition/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../../domain/composition/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\n\n\nexport abstract class CompositionRepository {\n\n\tabstract on(compositionId: CompositionId): Observable<Composition>;\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionInitedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class ColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\nimport { ColumnEntity } from '../column/column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { DomainEventBus, DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../../domain/composition/read/composition.repository';\nimport { Composition } from '../../../../domain/composition/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionInitedEvent } from '../../../../domain/composition/command/init/composition-inited.event';\nimport { CompositionResizeWidthSetEvent } from '../../../../domain/composition/command/width/resize-width/composition-resize-width-set.event';\nimport { ColumnsSetEvent } from '../../../../domain/composition/command/column/set-columns/columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../../domain/composition/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../../domain/composition/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../../domain/composition/command/sort/composition-change-sort-status.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository implements OnDestroy {\n\n\tprivate readonly composition$ = new ReplaySubject<Composition>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tCompositionInitedEvent,\n\t\t\t\tCompositionResizeWidthSetEvent,\n\t\t\t\tColumnsSetEvent,\n\t\t\t\tCompositionContainerWidthSetEvent,\n\t\t\t\tCompositionWidthSetEvent,\n\t\t\t\tCompositionChangeSortStatusEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst composition = this.inMemoryCompositionQueryStore.getById(aggregateId);\n\n\t\t\t\tthis.composition$.next(composition);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Composition> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((composition: Composition) => composition.getId().toString() === aggregateId.toString()),\n\t\t\t\t\t   filter((composition: Composition) => composition.isReady())\n\t\t\t\t   );\n\t}\n\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../../domain/composition/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../../domain/composition/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t},\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class InitCompositionCommand extends Command {\n\n\tconstructor(public readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'InitCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { InitCompositionCommand } from './init/init-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './sort/composition-change-sort-status.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new InitCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CompositionAggregateFactory } from '../composition.aggregate-factory';\nimport { InitCompositionCommand } from './init-composition.command';\nimport { CompositionInitedEvent } from './composition-inited.event';\n\n\n@Injectable()\nexport class InitCompositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly compositionAggregateFactory: CompositionAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitCompositionCommand,\n\t\t\tCompositionInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitCompositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.compositionId;\n\n\t\tconst compositionAggregate = this.compositionAggregateFactory.create(aggregateId);\n\n\t\tthis.compositionAggregateRepository.save(compositionAggregate);\n\t}\n\n}\n","export const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { ColumnsSetEvent } from './column/set-columns/columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new ColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Command, DomainEventPublisher, CommandHandler, ExecuteResponse, AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetColumnsCommand);\n\t}\n\n\thandle(command: SetColumnsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tsetColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setColumns(setColumnsParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionWidthCommand,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionResizeWidthCommand,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionResizeWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setResizeWidth(enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse, AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetCompositionContainerWidthCommand);\n\t}\n\n\thandle(command: SetCompositionContainerWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setContainerWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishAggregateEvents(composition.getEvents() as Array<AggregateEvent>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../composition-event.converter';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionChangeSortStatusCommand);\n\t}\n\n\thandle(command: CompositionChangeSortStatusCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tsortParams = command.getSortParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(compositionId);\n\n\t\tcomposition.changeSort(sortParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tconst columns = composition.getColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { ColumnsSetEvent } from '../../domain/composition/command/column/set-columns/columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../domain/composition/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   ColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   ColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../../domain/composition/read/composition.repository';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { globalCompositionId } from '../../domain/composition/global-composition-id';\nimport { Composition } from '../../domain/composition/read/composition';\nimport { CellTemplateWithContext } from '../../domain/composition/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../domain/composition/read/definition/cell-template-with-accessor';\nimport { SortStatus } from '../../domain/composition/command/sort/sort-status';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortStatus> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../../domain/composition/command/composition.dispatcher';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { globalCompositionId } from '../../domain/composition/global-composition-id';\nimport { ColumnParams } from '../../domain/composition/command/column/set-columns/column.params';\n\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.init(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{fieldId: FieldId, direction: boolean}>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../column/field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{fieldId: FieldId, direction: boolean}>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../composition.dispatcher';\nimport { ColumnFieldId } from '../column/field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { ColumnConfig } from '../../../../composition/column.config';\nimport { Field } from '../data-type/field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/command/field/init/fields-inited.event';\nimport { Field } from '../../../../structure/command/field/data-type/field';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n\t// handle(event: DomainEvent): void {\n\t//\n\t// \tif (event instanceof FieldsInitedEvent) {\n\t//\n\t// \t\t// TODO Move to different layer\n\t// \t\tlet fields = event.getFields();\n\t//\n\t// \t\tif (!!fields) {\n\t// \t\t\tfields = [];\n\t// \t\t}\n\t// \t\tconst columnFieldIds = fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t//\n\t// \t\tlet columns = event.columns || [];\n\t//\n\t// \t\tconst params = columns.map((column: ColumnConfig, index: number) => {\n\t// \t\t\tconst columnField = new ColumnField(columnFieldIds[index], fields[index].getAccessorMethod());\n\t//\n\t// \t\t\treturn new ColumnParams(column, columnField);\n\t// \t\t});\n\t//\n\t// \t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t// \t}\n\t// }\n\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders, inMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../../infrastructure/in-memory/composition/in-memory.composition.providers';\nimport { CompositionAggregateFactory } from '../../domain/composition/command/composition.aggregate-factory';\nimport { CompositionDispatcher } from '../../domain/composition/command/composition.dispatcher';\nimport { InitCompositionCommandHandler } from '../../domain/composition/command/init/init-composition.command-handler';\nimport { SetColumnsCommandHandler } from '../../domain/composition/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../../domain/composition/command/width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../../domain/composition/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../../domain/composition/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../../domain/composition/command/sort/composition-change-sort-status.command-handler';\nimport { ColumnEntityFactory } from '../../domain/composition/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../../domain/composition/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../../domain/composition/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../../domain/composition/composition.converter';\nimport { EditTemplateRepository } from '../../domain/composition/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../../domain/composition/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../../domain/composition/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../../domain/composition/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../../domain/composition/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../../domain/composition/command/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../../domain/composition/command/column/set-columns/composition-fields-inited.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tCompositionAggregateFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitCompositionCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetColumnsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionResizeWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionContainerWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusCommandHandler,\n\t\tmulti: true\n\t},\n\tColumnEntityFactory,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, \t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\nimport { ViewTemplatesComponent } from '../../domain/composition/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../../domain/composition/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../../domain/composition/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../../domain/composition/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../../domain/composition/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../../ui/composition/column-query.component';\nimport { FunctionViewComponent } from '../../domain/composition/read/view/function-view.component';\nimport { compositionProviders } from './composition.providers';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tColumnQueryComponent,\n\tFunctionViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\tFunctionViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent{\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete()\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly fieldId: FieldId,\n\t\t\t\tpublic readonly externalFilterId: string,\n\t\t\t\tpublic readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class InitStructureCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'InitStructureCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\nimport { SortStatus } from '../../../../composition/command/sort/sort-status';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { ColumnConfig } from '../../../../composition/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortStatus } from '../../../../composition/command/sort/sort-status';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../composition/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortStatus) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortStatus {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { InitStructureCommand } from '../../domain/structure/command/init/init-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { StructureSetConfigSearchingCommand } from '../../domain/structure/command/search/config/structure.set-config-searching.command';\nimport { ColumnConfig } from '../../domain/composition/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { StructureSetSearchPhraseCommand } from '../../domain/structure/command/search/set/structure.set-search-phrase.command';\nimport { SortStatus } from '../../domain/composition/command/sort/sort-status';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tinit(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../domain/composition/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../domain/composition/column.config';\nimport { SortStatus } from '../../../domain/composition/command/sort/sort-status';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tinit(): void {\n\t\tsuper.init(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId)\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../composition/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../ui-api/composition/composition.command-service';\nimport { CompositionId } from '../../../domain/composition/composition-id';\nimport { CompositionDispatcher } from '../../../domain/composition/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../domain/composition/global-composition-id';\nimport { ColumnParams } from '../../../domain/composition/command/column/set-columns/column.params';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.init(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../ui-api/composition/composition-read-model.service';\nimport { CompositionId } from '../../../domain/composition/composition-id';\nimport { CompositionRepository } from '../../../domain/composition/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../domain/composition/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../domain/composition/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../../domain/composition/command/sort/sort-status';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortStatus> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { CompositionCommandService } from '../../ui-api/composition/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../ui-api/composition/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService},\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService},\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService},\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService},\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService},\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService},\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService},\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService},\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService},\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService},\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService},\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject, Subject, BehaviorSubject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","export class ColumnMenuConfig {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumns?: boolean;\n\n}\n","import {\n\tEventEmitter,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges\n} from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../domain/composition/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../ui-api/composition/composition.command-service';\nimport { CompositionEventService } from '../../ui-api/composition/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\n\n\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId)\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined  && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch(state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take, switchMap } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columns\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columns: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columns);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSort(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilter(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumns(): boolean {\n\t\treturn this.columns;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilter()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumns()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../domain/composition/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../ui-api/composition/composition.command-service';\nimport { CompositionEventService } from '../ui-api/composition/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../ui-api/composition/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./composition/composition.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive\n\t\t);\n\n\t\tthis.structureCommandService.init();\n\t\tcompositionCommandService.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild, Input } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { SortStatus } from '../../../domain/composition/command/sort/sort-status';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../ui-api/composition/composition-read-model.service';\nimport { Placement } from '@generic-ui/fabric';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t\t\t\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t\t\t\t\t\t   [class.gui-header-text-bold]=\"isAscSort()\">\n\t\t\t\t\t\t\t\t\tAscending\n\t\t\t\t\t\t\t\t</gui-dropdown-item>\n\n\t\t\t\t\t\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t\t\t\t\t\t   [class.gui-header-text-bold]=\"isDescSort()\">\n\t\t\t\t\t\t\t\t\tDescending\n\t\t\t\t\t\t\t\t</gui-dropdown-item>\n\n\t\t\t\t\t\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t\t\t\t\t\t   [class.gui-header-text-bold]=\"isNoneSort()\">\n\t\t\t\t\t\t\t\t\tTurned off\n\t\t\t\t\t\t\t\t</gui-dropdown-item>\n\n\t\t\t\t\t\t\t</gui-dropdown>\n\t\t\t\t\t\t</div>\n<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">Autosize This Column</div>-->\n<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">Autosize All Column</div>-->\n<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">Reset Columns</div>-->\n<!--\t\t\t\t\t\t<hr>-->\n<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">GenericUI is Great</div>-->\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilter()\">\n\t\t\t\t\t\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\t\t\t\t\t\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumns()\">\n\t\t\t\t\t\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getColumnMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\t\t\t\t\t\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tsortStatus: SortStatus;\n\n\tstatus = SortStatus;\n\n\tplacement: Placement = Placement.Right;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') private column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortStatus) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\ttoggleSort() {\n\t\tthis.structureCommandService.toggleSort(this.column.getFieldId());\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n\n\tsetSortOrder(sort: SortStatus): void {\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { InlineDialogPlacement } from '@generic-ui/fabric';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate inlineDialogService: FabricInlineDialogService) {\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column',\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, injector, InlineDialogPlacement.Top, -8);\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild, ViewEncapsulation, Injector } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortStatus } from '../../../domain/composition/command/sort/sort-status';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext) {\n\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.DESC;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../ui-api/composition/composition-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\t\t\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\" >\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../domain/composition/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\t\t\n<!--\t\t<ng-container-->\n<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n<!--\t\t</ng-container>-->\n\t\t\n\t\t<button gui-button [primary]=\"true\" >Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.select()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../domain/composition/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\t\treturn `translateY(${index * 30}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../domain/composition/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation, SimpleChanges, OnDestroy, OnChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../domain/composition/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../domain/composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../domain/composition/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-cell',\n\ttemplate: `\n\n\t\t<span *ngIf=\"!inEditMode\"\n\t\t\t  (click)=\"enterEditMode()\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.template;\n\t\t\t\t\tcontext: { element: cell.accessor(entity) }\">\n\t\t\t</ng-container>\n\t\t</span>\n\t\t\n\t\t<span *ngIf=\"inEditMode\" class=\"gui-cell-edit-mode\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges, OnDestroy {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: any;\n\n\tstatus$: any;\n\n\tactualValue: any;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.cellEditingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inEditMode = true;\n\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.accessor(this.entity),\n\t\t\tfocus: forceCheck\n\t\t};\n\n\t\tthis.observeFieldStatus();\n\t\tthis.observeValueChanges();\n\n\t\tthis.publishEditEnter();\n\n\t\tif (!forceCheck) {\n\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t} else {\n\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t}\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.select()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.select()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import {\n\tComponent,\n\tChangeDetectionStrategy,\n\tViewChild,\n\tElementRef,\n\tRenderer2,\n\tOnDestroy,\n\tAfterViewInit,\n\tChangeDetectorRef,\n\tOnInit,\n\tInject,\n\tOptional,\n\tViewEncapsulation,\n\tNgZone\n} from '@angular/core';\nimport { Subject, combineLatest, fromEvent } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../domain/composition/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../ui-api/composition/composition.command-service';\nimport { CompositionReadModelService } from '../../ui-api/composition/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tthis.sourceQueryService\n\t\t\t.onEntities()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * 30);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1];\n\n\t\t\t\tconst sourceSizeHeight = source.length * 30;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchingRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {}\n\n\tonSearchEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.selectSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../ui-api/composition/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-header-cell gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tCount: <span>{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tDistinct: <span>{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&sum;</span> Sum</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-mean\"><span>_</span><span>X Average</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&and;</span> Min</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&or;</span> Max</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-median\"><span>~</span><span>X Median</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tTruthy: <span>{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tFalsy: <span>{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryAggregateStore } from '@generic-ui/hermes';\nimport { AggregateStoreRegister } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository {\n\n\tabstract getById(aggregateId: AggregateId): StructureAggregate;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): StructureAggregate {\n\t\tconst structure = this.inMemoryStructureAggregateStore.getById(aggregateId);\n\n\t\tstructure.clearEvents();\n\n\t\treturn structure;\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion())\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { DomainEventBus, DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureInitedEvent } from '../../../../domain/structure/command/init/structure-inited.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureInitedEvent,\n\t\t\t\tSetSourceLoadingEvent,\n\t\t\t\tSchemaSetEvent,\n\t\t\t\tSchemaThemeSetEvent,\n\t\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\t\tSchemaVerticalGridSetEvent,\n\t\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\t\tRowColoringSetEvent,\n\t\t\t\tPagingSetEvent,\n\t\t\t\tPrevPageEvent,\n\t\t\t\tNextPageEvent,\n\t\t\t\tPagesizeChangedEvent,\n\t\t\t\tFormationSetEvent,\n\t\t\t\tSelectedRowToggledEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tSortToggledEvent as any,\n\t\t\t\tStructureFilterToggledEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\t\tSortOrderSetEvent as any,\n\t\t\t\tOriginSetEvent as any\n\t\t\t)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst structure = this.inMemoryStructureQueryStore.getById(aggregateId),\n\t\t\t\t\tkey = structure.getId().toString();\n\n\t\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t\t});\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t},\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = {...this.rawData};\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { Field } from '../../structure/command/field/data-type/field';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t})\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 30;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { Field } from '../field/data-type/field';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: Field;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: Field,\n\t\t\t\tfilterValue: any) {\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\n\t\t\tif (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.filterString(item);\n\t\t\t} else if (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.filterNumber(item);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.filterBoolean(item);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate filterString(item: OriginItemEntity): boolean {\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity): boolean {\n\t\tconst numberValue = this.field.getValue(item);\n\n\t\treturn numberValue > this.filterValue;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity): boolean {\n\t\tconst booleanValue = this.field.getValue(item);\n\n\t\treturn booleanValue === this.filterValue;\n\t}\n\n}\n","import { Field } from '../field/data-type/field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: Field,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { Field } from '../field/data-type/field';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: Field, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../composition/column-aggregation.config';\n\nexport abstract class Field {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class UnknownField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class NumberField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class StringField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class BooleanField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class DateField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../composition/column.config';\nimport { Field } from './field';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\n\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): Field {\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t}\n\n\n}\n","import { Field } from './data-type/field';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\nimport { ColumnConfig } from '../../../composition/column.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tthis.addField(field);\n\t\t});\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\n\t\t\tlet valueOne = this.direction ? this.field.getValue(entityOne) : this.field.getValue(entityTwo),\n\t\t\t\tvalueTwo = this.direction ? this.field.getValue(entityTwo) : this.field.getValue(entityOne);\n\n\t\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.sortNumber(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.sortBoolean(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.sortString(valueOne, valueTwo);\n\t\t\t} else {\n\t\t\t\treturn this.sortUnknown(valueOne, valueTwo);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate sortString(strOne: string, strTwo: string): number {\n\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tprivate sortNumber(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tprivate sortBoolean(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tprivate sortUnknown(a: any, b: any): number {\n\t\treturn 0;\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { Field } from '../field/data-type/field';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortStatus } from '../../../composition/command/sort/sort-status';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortStatus): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortStatus.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortStatus.ASC || sortOrder === SortStatus.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortStatus.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28;\n\n\tprivate pagerHeight = 35;\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.EVEN;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { Field } from '../field/data-type/field';\nimport { DataType } from '../field/data-type/data-type';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn field.getDataType() === DataType.STRING;\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tfor (let field of this.searchFields) {\n\n\t\t\t\tif (this.filterString(entities[i], field)) {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n\tprivate filterString(item: OriginItemEntity, field: Field): boolean {\n\t\tconst value = field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity, field: Field): boolean {\n\t\tconst numberValue = field.getValue(item);\n\n\t\treturn numberValue > this.searchPhrase;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity, field: Field): boolean {\n\t\tconst booleanValue = field.getValue(item);\n\n\t\treturn booleanValue === this.searchPhrase;\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../composition/column.config';\nimport { Field } from './field/data-type/field';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortStatus } from '../../composition/command/sort/sort-status';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId);\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): Array<Field> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\t// TODO Should throw event fields created\n\t\treturn this.fieldCollection.getAllFields();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../structure.aggregate-factory';\nimport { InitStructureCommand } from './init-structure.command';\nimport { StructureInitedEvent } from './structure-inited.event';\n\n\n\n@Injectable()\nexport class InitStructureCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitStructureCommand,\n\t\t\tStructureInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitStructureCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId;\n\n\t\tconst structure = this.structureAggregateFactory.create(aggregateId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\n\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetVerticalScrollEnabledCommand);\n\t}\n\n\thandle(command: SetVerticalScrollEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\n\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetScrollPositionCommand);\n\t}\n\n\thandle(command: SetScrollPositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tposition = command.position;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setScrollPosition(position);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\n\n@Injectable()\nexport class InitFieldsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitFieldsCommand);\n\t}\n\n\thandle(command: InitFieldsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tcompositionId = command.compositionId,\n\t\t\tcolumns = command.columns;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst fields = structure.createFields(columns); // tODO convert don't let dandruff into the domain\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(structureId, compositionId, columns, fields));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSortCommand);\n\t}\n\n\thandle(command: ToggleSortCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst structure = this.structureAggregateRepository.getById(aggregateId);\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\n\n\n@Injectable()\nexport class SetSortingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortingCommand);\n\t}\n\n\thandle(command: SetSortingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsortingConfig = command.getSortingConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSortingConfig(sortingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfilterConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setFilterConfig(filterConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(structureId, filterConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigSearchingCommand);\n\t}\n\n\thandle(command: StructureSetConfigSearchingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsearchingConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSearchingConfig(searchingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(structureId, searchingConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigQuickFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigQuickFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setQuickFiltersConfig(quickFiltersConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureToggleFilterCommand);\n\t}\n\n\thandle(command: StructureToggleFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfieldId: FieldId = command.fieldId,\n\t\t\texternalFieldId: string = command.externalFilterId,\n\t\t\tfilterValue = command.filterValue;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.toggleFilter(fieldId, externalFieldId, filterValue);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetAggregationEnabledCommand);\n\t}\n\n\thandle(command: StructureSetAggregationEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.setAggregationEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(structureId, enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { Field } from '../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues{\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n}\n","import { Type, Provider } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Field } from '../../../domain/structure/command/field/data-type/field';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { PagingConfig } from '../../paging-config';\n\n\n@Injectable()\nexport class SetPagingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetPagingCommand,\n\t\t\tPagingSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetPagingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst pagingConfig = command.payload as PagingConfig,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.changePaging(pagingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\n\n\n@Injectable()\nexport class NextPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(NextPageCommand,\n\t\t\tNextPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: NextPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.nextPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\n\n\n@Injectable()\nexport class PrevPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(PrevPageCommand,\n\t\t\tPrevPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: PrevPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.prevPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse, DomainEventPublisher, AggregateEvent } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangePagesizeCommand);\n\t}\n\n\thandle(command: ChangePagesizeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst newPageSize = command.pageSize as number,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.changePageSize(newPageSize);\n\n\t\t// aggregateEvents => DomainEvents\n\n\t\t// DomainEvent\n\t\t// causationId -> aka commandId\n\t\t// correlationId -> actual or previous commandId\n\n\t\t// event publisher should take aggregate events\n\t\t// and convert them to domain events\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\t// TODO\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = structureId;\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetPagingCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: NextPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: PrevPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangePagesizeCommandHandler,\n\t\tmulti: true\n\t}\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaVerticalGridCommand,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaVerticalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaHorizontalGridCommand,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaHorizontalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHorizontalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { DomainEventPublisher } from '@generic-ui/hermes';\nimport { ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaThemeCommand,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaThemeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst theme = command.theme,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setTheme(theme);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaBottomHeaderCommand,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaBottomHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderBottom(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { DomainEventPublisher } from '@generic-ui/hermes';\nimport { ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaTopHeaderCommand,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaTopHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderTop(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowColoringCommand,\n\t\t\tRowColoringSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetRowColoringCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst coloring = command.coloring,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setRowColoring(coloring);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaCommand,\n\t\t\tSchemaSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst height = command.height,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setHeight(height);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaVerticalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaHorizontalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaThemeCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaBottomHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaTopHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowColoringCommandHandler,\n\t\tmulti: true\n\t},\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\n\n\n@Injectable()\nexport class SetFormationCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetFormationCommand,\n\t\t\tFormationSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetFormationCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst rawFormation = command.payload as any,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\t// missing implementation\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSelectedRowCommand,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ToggleSelectedRowCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst selectedRow = command.selectedRow,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst formation = structure.getFormation();\n\n\t\tformation.toggleRow(selectedRow);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetFormationCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSelectedRowCommandHandler,\n\t\tmulti: true\n\t},\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(SetOriginCommand);\n\t}\n\n\thandle(command: SetOriginCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\titems = command.items as Array<any>;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst aggregateEvents = structure.setOrigin(items);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(StructureEditSourceItemCommand);\n\t}\n\n\thandle(command: StructureEditSourceItemCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tparams = command.getParams();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.editItem(params);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SourceSetLoadingCommand,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SourceSetLoadingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tsource = structure.getSource();\n\n\t\tsource.setLoading(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SourceSetLoadingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetOriginCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureEditSourceItemCommandHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetSearchPhraseCommand);\n\t}\n\n\thandle(command: StructureSetSearchPhraseCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tphrase = command.phrase,\n\t\t\tstructure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.addSearchPhrase(phrase);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(structureId));\n\t\tthis.structureSourceDomainEventPublisher.publish(structure.getEvents());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from '../toggle/sort-toggled.event';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortOrderCommand);\n\t}\n\n\thandle(command: SetSortOrderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { InitStructureCommandHandler } from '../../domain/structure/command/init/init-structure.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitStructureCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetVerticalScrollEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetScrollPositionCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitFieldsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSortCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigSearchingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigQuickFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureToggleFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetAggregationEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetSearchPhraseCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortOrderCommandHandler,\n\t\tmulti: true\n\t},\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation, OnInit } from \"@angular/core\";\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form [formGroup]=\"searchForm\">\n\t\t\t<div class=\"gui-search-icon\"></div>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"'Search ...'\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit {\n\n\tsearchForm: FormGroup;\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t\tsuper();\n\t\tthis.searchForm = this.formBuilder.group({\n\t\t\t'searchPhrase': ''\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { Component, Input, ElementRef, Injector, ViewChild, OnInit, ChangeDetectorRef } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon\"\n\t\t\t (click)=\"openConfigDialog()\">\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {}\n","import { ModuleWithProviders, NgModule, PLATFORM_ID, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from './structure-fabric.imports';\nimport { StructurePagingModule } from './paging/structure-paging.module';\nimport { StructureInfoPanelModule } from './panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../ui-api/composition/composition.module';\nimport { StructureComponent } from './structure.component';\nimport { StructureHeaderComponent } from './header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from './header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from './header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from './header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from './content/structure-content.component';\nimport { StructureRowComponent } from './content/row/structure-row.component';\nimport { StructureCellComponent } from './content/cell/structure.cell.component';\nimport { StructureContainerComponent } from './content/structure-container.component';\nimport { StructureQuickFiltersComponent } from './header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from './blueprint/structure.blueprint.component';\nimport { StructureAggregationPanelComponent } from './panel/aggregation/structure.aggregation-panel.component';\nimport { StructureColumnConfigComponent } from './header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../ui-api/structure/structure-tokens';\nimport { StructureDefinition } from './structure-definition';\nimport { SourceReadModelService } from '../ui-api/source/source-read-model.service';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureAggregationPanelConfigConverter } from './panel/aggregation/structure.aggregation-panel.config-converter';\nimport { structureProviders } from '../ui-api/structure/structure.providers';\nimport { StructureModuleConfig } from './structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from './panel/top/structure.top-panel.module';\nimport { StructureColumnConfigTriggerComponent } from './header/menu/structure.column-config-trigger.component';\nimport { StructureEmptySourceComponent } from './content/empty-source/structure-empty-source.component';\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureAggregationPanelComponent,\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\tStructureAggregationPanelConfigConverter,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\t\tcssClassName: 'grid',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"],"names":["tslib_1.__decorate","commandProviders","readProviders","exportDeclarations","imports","declarations","providers","entryComponents"],"mappings":"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"}