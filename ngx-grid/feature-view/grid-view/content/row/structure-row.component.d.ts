import { ChangeDetectorRef, ElementRef, OnChanges, OnInit } from '@angular/core';
import { CellTemplateWithAccessor } from '../../../../core/composition/core-read/definition/cell-template-with-accessor';
import { ItemEntity } from '../../../../core/structure/source/domain/item/item.entity';
import { FormationPublisher } from '../../../../core/structure/formation/api/formation.publisher';
import { StructureId } from '../../../../core/structure/structure-core/api/global/structure.id';
import { FormationWarehouse } from '../../../../core/structure/formation/api/formation.warehouse';
import { SmartComponent } from '../../../../feature/common/cdk/component/smart-component';
import { GuiRowClass, GuiRowStyle } from '../../../../gui/grid/core/api/gui.grid.public-api';
import { CssClassModifier } from '../../../../feature/structure/common/css-class/css-class.modifier';
import { NgChanges } from '../../../../feature/common/cdk/component/ng-changes';
import { CellEditorManager } from '../../../../core/structure/structure-core/domain/edit/cell-editor.manager';
import * as i0 from "@angular/core";
export declare class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {
    private readonly changeDetectorRef;
    private readonly elRef;
    private readonly structureId;
    private readonly formationWarehouse;
    private readonly formationCommandDispatcher;
    private readonly cssClassModifier;
    entity: ItemEntity;
    columns: Array<CellTemplateWithAccessor>;
    editMode: boolean;
    cellEditing: CellEditorManager;
    searchPhrase: string;
    index: number;
    rowStyle: GuiRowStyle;
    rowClass: GuiRowClass;
    detailsEnabled: boolean;
    checkboxSelection: boolean;
    selectedItem: boolean;
    private row;
    private readonly styleModifier;
    private readonly classModifier;
    constructor(changeDetectorRef: ChangeDetectorRef, elRef: ElementRef, structureId: StructureId, formationWarehouse: FormationWarehouse, formationCommandDispatcher: FormationPublisher, cssClassModifier: CssClassModifier);
    ngOnChanges(changes: NgChanges<StructureRowComponent>): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    trackByFn(): number;
    selectRow(): void;
    checkSelectedItem(): void;
    protected getSelectorName(): string;
    private calculateRowStyle;
    private updateRowStyle;
    private removeRowStyles;
    private renderRowStyles;
    private updateRowClass;
    private calculateRowClass;
    static ɵfac: i0.ɵɵFactoryDeclaration<StructureRowComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<StructureRowComponent, "div[gui-structure-row]", never, { "entity": "entity"; "columns": "columns"; "editMode": "editMode"; "cellEditing": "cellEditing"; "searchPhrase": "searchPhrase"; "index": "index"; "rowStyle": "rowStyle"; "rowClass": "rowClass"; "detailsEnabled": "detailsEnabled"; "checkboxSelection": "checkboxSelection"; }, {}, never, never, false>;
}
