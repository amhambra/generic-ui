import { ChangeDetectorRef, ElementRef, Injector, OnInit } from '@angular/core';
import { StructurePublisher } from '../../../../../core/structure/core/api/structure.publisher';
import { CellTemplateWithContext } from '../../../../../core/composition/domain-read/definition/cell-template-with-context';
import { SmartComponent } from '../../../../../feature/common/cdk/component/smart-component';
import { CompositionWarehouse } from '../../../../../core/composition/api/composition.warehouse';
import { StructureColumnMenuConfigArchive } from './structure.column-menu-config.archive';
import { StructureColumnMenuConfig } from './structure.column-menu-config';
import { FilterWarehouse } from '../../../../../core/structure/filter/api/filter.warehouse';
import { StructureId } from '../../../../../core/structure/core/api/global/structure.id';
import { TranslationFacade } from '../../../../../core/l10n/api/translation.facade';
import { CompositionId } from '../../../../../core/composition/api/global/composition.id';
import { CompositionPublisher } from '../../../../../core/composition/api/composition.publisher';
import * as i0 from "@angular/core";
export declare class StructureColumnConfigComponent extends SmartComponent implements OnInit {
    private readonly changeDetectorRef;
    private readonly structureId;
    private readonly structureCommandService;
    private readonly compositionReadModelService;
    private readonly filterWarehouse;
    private readonly translationFacade;
    private readonly structureColumnMenuConfigArchive;
    private readonly compositionId;
    private readonly compositionCommandInvoker;
    private readonly injector;
    readonly column: CellTemplateWithContext;
    readonly headerSortMenu?: ElementRef;
    config: StructureColumnMenuConfig;
    uniqueValues: Array<any>;
    hideColumnTitle: string;
    dropdownTextTranslation: string;
    private readonly structureColumnConfigService;
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef, structureId: StructureId, structureCommandService: StructurePublisher, compositionReadModelService: CompositionWarehouse, filterWarehouse: FilterWarehouse, translationFacade: TranslationFacade, structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive, compositionId: CompositionId, compositionCommandInvoker: CompositionPublisher, injector: Injector, column: CellTemplateWithContext);
    ngOnInit(): void;
    isEnabled(): boolean;
    hideColumn(): void;
    moveLeft(): void;
    moveRight(): void;
    highlightColumn(): void;
    protected getSelectorName(): string;
    private setTabTitles;
    static ɵfac: i0.ɵɵFactoryDeclaration<StructureColumnConfigComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<StructureColumnConfigComponent, "div[gui-column-config]", never, {}, {}, never, never>;
}
