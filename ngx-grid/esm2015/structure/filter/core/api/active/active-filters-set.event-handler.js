import { Injectable } from '@angular/core';
import { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';
import { ActiveFilterArchive } from './active-filter.archive';
export class ActiveFiltersSetEventHandler {
    constructor(activeFilterRepository) {
        this.activeFilterRepository = activeFilterRepository;
    }
    forEvent() {
        return ActiveFiltersSetEvent;
    }
    handle(activeFiltersSetEvent) {
        if (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {
            const activeFilters = activeFiltersSetEvent.getFilters();
            this.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);
        }
    }
}
ActiveFiltersSetEventHandler.decorators = [
    { type: Injectable }
];
ActiveFiltersSetEventHandler.ctorParameters = () => [
    { type: ActiveFilterArchive }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZlLWZpbHRlcnMtc2V0LmV2ZW50LWhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL3N0cnVjdHVyZS9maWx0ZXIvY29yZS9hcGkvYWN0aXZlL2FjdGl2ZS1maWx0ZXJzLXNldC5ldmVudC1oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFLM0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDbkYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFJOUQsTUFBTSxPQUFPLDRCQUE0QjtJQUV4QyxZQUE2QixzQkFBMkM7UUFBM0MsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUFxQjtJQUN4RSxDQUFDO0lBRUQsUUFBUTtRQUNQLE9BQU8scUJBQXFCLENBQUM7SUFDOUIsQ0FBQztJQUVELE1BQU0sQ0FBQyxxQkFBNEM7UUFFbEQsSUFBSSxxQkFBcUIsQ0FBQyxhQUFhLENBQUMsdUJBQXVCLENBQUMsRUFBRTtZQUVqRSxNQUFNLGFBQWEsR0FBeUMscUJBQXFCLENBQUMsVUFBVSxFQUFFLENBQUM7WUFFL0YsSUFBSSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxjQUFjLEVBQUUsRUFBRSxhQUFhLENBQUMsQ0FBQztTQUN4RjtJQUNGLENBQUM7OztZQWxCRCxVQUFVOzs7WUFIRixtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IERvbWFpbkV2ZW50SGFuZGxlciwgRG9tYWluRXZlbnRUeXBlIH0gZnJvbSAnQGdlbmVyaWMtdWkvaGVybWVzJztcblxuaW1wb3J0IHsgU3RydWN0dXJlSWQgfSBmcm9tICcuLi8uLi8uLi8uLi9jb3JlL2FwaS9zdHJ1Y3R1cmUuaWQnO1xuaW1wb3J0IHsgQWN0aXZlRmlsdGVyc1NldEV2ZW50IH0gZnJvbSAnLi4vLi4vZG9tYWluL2NvcmUvYWN0aXZlLWZpbHRlcnMtc2V0LmV2ZW50JztcbmltcG9ydCB7IEFjdGl2ZUZpbHRlckFyY2hpdmUgfSBmcm9tICcuL2FjdGl2ZS1maWx0ZXIuYXJjaGl2ZSc7XG5pbXBvcnQgeyBBY3RpdmVGaWx0ZXJSZWFkTW9kZWwgfSBmcm9tICcuL2FjdGl2ZS1maWx0ZXIucmVhZC1tb2RlbCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBY3RpdmVGaWx0ZXJzU2V0RXZlbnRIYW5kbGVyIGltcGxlbWVudHMgRG9tYWluRXZlbnRIYW5kbGVyPFN0cnVjdHVyZUlkLCBBY3RpdmVGaWx0ZXJzU2V0RXZlbnQ+IHtcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGFjdGl2ZUZpbHRlclJlcG9zaXRvcnk6IEFjdGl2ZUZpbHRlckFyY2hpdmUpIHtcblx0fVxuXG5cdGZvckV2ZW50KCk6IERvbWFpbkV2ZW50VHlwZTxBY3RpdmVGaWx0ZXJzU2V0RXZlbnQ+IHtcblx0XHRyZXR1cm4gQWN0aXZlRmlsdGVyc1NldEV2ZW50O1xuXHR9XG5cblx0aGFuZGxlKGFjdGl2ZUZpbHRlcnNTZXRFdmVudDogQWN0aXZlRmlsdGVyc1NldEV2ZW50KTogdm9pZCB7XG5cblx0XHRpZiAoYWN0aXZlRmlsdGVyc1NldEV2ZW50Lm9mTWVzc2FnZVR5cGUoJ0FjdGl2ZUZpbHRlcnNTZXRFdmVudCcpKSB7XG5cblx0XHRcdGNvbnN0IGFjdGl2ZUZpbHRlcnM6IFJlYWRvbmx5QXJyYXk8QWN0aXZlRmlsdGVyUmVhZE1vZGVsPiA9IGFjdGl2ZUZpbHRlcnNTZXRFdmVudC5nZXRGaWx0ZXJzKCk7XG5cblx0XHRcdHRoaXMuYWN0aXZlRmlsdGVyUmVwb3NpdG9yeS5uZXh0KGFjdGl2ZUZpbHRlcnNTZXRFdmVudC5nZXRBZ2dyZWdhdGVJZCgpLCBhY3RpdmVGaWx0ZXJzKTtcblx0XHR9XG5cdH1cblxufVxuIl19