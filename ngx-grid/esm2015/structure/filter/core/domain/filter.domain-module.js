import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DomainModule, HermesModule } from '@generic-ui/hermes';
import { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';
import { AddFilterCommandHandler } from './core/add/add-filter.command-handler';
import { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';
import { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';
import { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';
import { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';
import { FilterManagerFactory } from './filter.manager-factory';
import { ConfigQuickFilterSetEventHandler } from '../domain-read/quick-filter/config-quick-filter-set.event-handler';
import { ConfigFilterSetEventHandler } from '../domain-read/config/config-filter-set.event-handler';
import { FilterTypeConfigFilterSetEventHandler } from '../domain-read/type/filter-type.config-filter-set.event-handler';
import { ActiveFiltersSetEventHandler } from '../domain-read/active/active-filters-set.event-handler';
import { UniqueFilterCalculatedEventHandler } from '../domain-read/unique/unique-filter-calculated.event-handler';
import { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';
import { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';
import { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';
import { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';
import { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';
import { structureKey } from '../../../core/api/structre.key';
import { FilterDispatcher } from './filter.dispatcher';
export class FilterDomainModule extends DomainModule {
    constructor() {
        super();
    }
    static commandHandlers() {
        return [
            HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),
            HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),
            HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),
            HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),
            HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),
            HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),
            HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),
            HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),
            HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),
            HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)
        ];
    }
    static domainEventHandlers() {
        return [
            HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),
            HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),
            HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),
            HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),
            HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),
            HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)
        ];
    }
}
FilterDomainModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                providers: [
                    FilterManagerFactory,
                    FilterDispatcher
                ],
                declarations: [],
                exports: []
            },] }
];
FilterDomainModule.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,