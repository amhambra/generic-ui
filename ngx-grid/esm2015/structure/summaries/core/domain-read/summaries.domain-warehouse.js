import { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';
import { SummariesWarehouse } from '../api/summaries.warehouse';
import { Injectable } from '@angular/core';
import { hermesMap, hermesSwitchMap } from '@generic-ui/hermes';
import { StructureSummariesConfigArchive } from '../domain/config/structure.summaries-config.archive';
export class SummariesDomainWarehouse extends SummariesWarehouse {
    constructor(summariesEnabledArchive, structureSummariesArchive) {
        super();
        this.summariesEnabledArchive = summariesEnabledArchive;
        this.structureSummariesArchive = structureSummariesArchive;
    }
    onEnabled(structureId) {
        return this.summariesEnabledArchive.on(structureId);
    }
    onTopEnabled(structureId) {
        return this.onEnabled(structureId)
            .pipe(hermesSwitchMap((enabled) => {
            return this.structureSummariesArchive
                .on(structureId)
                .pipe(hermesMap((config) => enabled && config.isTopEnabled()));
        }));
    }
    onBottomEnabled(structureId) {
        return this.onEnabled(structureId)
            .pipe(hermesSwitchMap((enabled) => {
            return this.structureSummariesArchive
                .on(structureId)
                .pipe(hermesMap((config) => enabled && config.isBottomEnabled()));
        }));
    }
}
SummariesDomainWarehouse.decorators = [
    { type: Injectable }
];
SummariesDomainWarehouse.ctorParameters = () => [
    { type: SummariesEnabledArchive },
    { type: StructureSummariesConfigArchive }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtbWFyaWVzLmRvbWFpbi13YXJlaG91c2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL3N0cnVjdHVyZS9zdW1tYXJpZXMvY29yZS9kb21haW4tcmVhZC9zdW1tYXJpZXMuZG9tYWluLXdhcmVob3VzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUU5RixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxTQUFTLEVBQW9CLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2xGLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBSXRHLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxrQkFBa0I7SUFFL0QsWUFBNkIsdUJBQWdELEVBQ3pELHlCQUEwRDtRQUM3RSxLQUFLLEVBQUUsQ0FBQztRQUZvQiw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQXlCO1FBQ3pELDhCQUF5QixHQUF6Qix5QkFBeUIsQ0FBaUM7SUFFOUUsQ0FBQztJQUVELFNBQVMsQ0FBQyxXQUF3QjtRQUNqQyxPQUFPLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUVELFlBQVksQ0FBQyxXQUF3QjtRQUNwQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDO2FBQzVCLElBQUksQ0FDSixlQUFlLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUMzQixPQUFPLElBQUksQ0FBQyx5QkFBeUI7aUJBQ2xDLEVBQUUsQ0FBQyxXQUFXLENBQUM7aUJBQ2YsSUFBSSxDQUNKLFNBQVMsQ0FBQyxDQUFDLE1BQXFDLEVBQUUsRUFBRSxDQUFDLE9BQU8sSUFBSSxNQUFNLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FDdEYsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUNGLENBQUM7SUFDUixDQUFDO0lBRUQsZUFBZSxDQUFDLFdBQXdCO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUM7YUFDNUIsSUFBSSxDQUNKLGVBQWUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQzNCLE9BQU8sSUFBSSxDQUFDLHlCQUF5QjtpQkFDbEMsRUFBRSxDQUFDLFdBQVcsQ0FBQztpQkFDZixJQUFJLENBQ0osU0FBUyxDQUFDLENBQUMsTUFBcUMsRUFBRSxFQUFFLENBQUMsT0FBTyxJQUFJLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUN6RixDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQ0YsQ0FBQztJQUVSLENBQUM7OztZQXJDRCxVQUFVOzs7WUFSRix1QkFBdUI7WUFLdkIsK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3VtbWFyaWVzRW5hYmxlZEFyY2hpdmUgfSBmcm9tICcuLi9kb21haW4vZW5hYmxlZC9zdW1tYXJpZXMtZW5hYmxlZC1hcmNoaXZlLnNlcnZpY2UnO1xuaW1wb3J0IHsgU3RydWN0dXJlSWQgfSBmcm9tICcuLi8uLi8uLi9jb3JlL2FwaS9zdHJ1Y3R1cmUuaWQnO1xuaW1wb3J0IHsgU3VtbWFyaWVzV2FyZWhvdXNlIH0gZnJvbSAnLi4vYXBpL3N1bW1hcmllcy53YXJlaG91c2UnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaGVybWVzTWFwLCBIZXJtZXNPYnNlcnZhYmxlLCBoZXJtZXNTd2l0Y2hNYXAgfSBmcm9tICdAZ2VuZXJpYy11aS9oZXJtZXMnO1xuaW1wb3J0IHsgU3RydWN0dXJlU3VtbWFyaWVzQ29uZmlnQXJjaGl2ZSB9IGZyb20gJy4uL2RvbWFpbi9jb25maWcvc3RydWN0dXJlLnN1bW1hcmllcy1jb25maWcuYXJjaGl2ZSc7XG5pbXBvcnQgeyBTdHJ1Y3R1cmVTdW1tYXJpZXNQYW5lbENvbmZpZyB9IGZyb20gJy4uL2RvbWFpbi9jb25maWcvc3RydWN0dXJlLnN1bW1hcmllcy1wYW5lbC5jb25maWcnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU3VtbWFyaWVzRG9tYWluV2FyZWhvdXNlIGV4dGVuZHMgU3VtbWFyaWVzV2FyZWhvdXNlIHtcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IHN1bW1hcmllc0VuYWJsZWRBcmNoaXZlOiBTdW1tYXJpZXNFbmFibGVkQXJjaGl2ZSxcblx0XHRcdFx0cHJpdmF0ZSByZWFkb25seSBzdHJ1Y3R1cmVTdW1tYXJpZXNBcmNoaXZlOiBTdHJ1Y3R1cmVTdW1tYXJpZXNDb25maWdBcmNoaXZlKSB7XG5cdFx0c3VwZXIoKTtcblx0fVxuXG5cdG9uRW5hYmxlZChzdHJ1Y3R1cmVJZDogU3RydWN0dXJlSWQpOiBIZXJtZXNPYnNlcnZhYmxlPGJvb2xlYW4+IHtcblx0XHRyZXR1cm4gdGhpcy5zdW1tYXJpZXNFbmFibGVkQXJjaGl2ZS5vbihzdHJ1Y3R1cmVJZCk7XG5cdH1cblxuXHRvblRvcEVuYWJsZWQoc3RydWN0dXJlSWQ6IFN0cnVjdHVyZUlkKTogSGVybWVzT2JzZXJ2YWJsZTxib29sZWFuPiB7XG5cdFx0cmV0dXJuIHRoaXMub25FbmFibGVkKHN0cnVjdHVyZUlkKVxuXHRcdFx0XHQgICAucGlwZShcblx0XHRcdFx0XHQgICBoZXJtZXNTd2l0Y2hNYXAoKGVuYWJsZWQpID0+IHtcblx0XHRcdFx0XHRcdCAgIHJldHVybiB0aGlzLnN0cnVjdHVyZVN1bW1hcmllc0FyY2hpdmVcblx0XHRcdFx0XHRcdFx0XHRcdCAgLm9uKHN0cnVjdHVyZUlkKVxuXHRcdFx0XHRcdFx0XHRcdFx0ICAucGlwZShcblx0XHRcdFx0XHRcdFx0XHRcdFx0ICBoZXJtZXNNYXAoKGNvbmZpZzogU3RydWN0dXJlU3VtbWFyaWVzUGFuZWxDb25maWcpID0+IGVuYWJsZWQgJiYgY29uZmlnLmlzVG9wRW5hYmxlZCgpKVxuXHRcdFx0XHRcdFx0XHRcdFx0ICApO1xuXHRcdFx0XHRcdCAgIH0pXG5cdFx0XHRcdCAgICk7XG5cdH1cblxuXHRvbkJvdHRvbUVuYWJsZWQoc3RydWN0dXJlSWQ6IFN0cnVjdHVyZUlkKTogSGVybWVzT2JzZXJ2YWJsZTxib29sZWFuPiB7XG5cdFx0cmV0dXJuIHRoaXMub25FbmFibGVkKHN0cnVjdHVyZUlkKVxuXHRcdFx0XHQgICAucGlwZShcblx0XHRcdFx0XHQgICBoZXJtZXNTd2l0Y2hNYXAoKGVuYWJsZWQpID0+IHtcblx0XHRcdFx0XHRcdCAgIHJldHVybiB0aGlzLnN0cnVjdHVyZVN1bW1hcmllc0FyY2hpdmVcblx0XHRcdFx0XHRcdFx0XHRcdCAgLm9uKHN0cnVjdHVyZUlkKVxuXHRcdFx0XHRcdFx0XHRcdFx0ICAucGlwZShcblx0XHRcdFx0XHRcdFx0XHRcdFx0ICBoZXJtZXNNYXAoKGNvbmZpZzogU3RydWN0dXJlU3VtbWFyaWVzUGFuZWxDb25maWcpID0+IGVuYWJsZWQgJiYgY29uZmlnLmlzQm90dG9tRW5hYmxlZCgpKVxuXHRcdFx0XHRcdFx0XHRcdFx0ICApO1xuXHRcdFx0XHRcdCAgIH0pXG5cdFx0XHRcdCAgICk7XG5cblx0fVxuXG59XG4iXX0=