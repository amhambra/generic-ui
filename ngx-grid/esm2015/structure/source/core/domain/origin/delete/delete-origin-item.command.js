import { StructureCommand } from '../../../../../core/domain/structure.command';
export var DeleteCommandPayloadType;
(function (DeleteCommandPayloadType) {
    DeleteCommandPayloadType[DeleteCommandPayloadType["INDEX"] = 0] = "INDEX";
    DeleteCommandPayloadType[DeleteCommandPayloadType["ITEM_ID"] = 1] = "ITEM_ID";
    DeleteCommandPayloadType[DeleteCommandPayloadType["MANY_INDEX"] = 2] = "MANY_INDEX";
    DeleteCommandPayloadType[DeleteCommandPayloadType["MANY_ITEM_ID"] = 3] = "MANY_ITEM_ID";
})(DeleteCommandPayloadType || (DeleteCommandPayloadType = {}));
export class DeleteOriginItemCommand extends StructureCommand {
    constructor(structureId, payload, type) {
        super(structureId, 'DeleteOriginItemCommand');
        this.payload = payload;
        this.type = type;
    }
    static byIndex(structureId, index) {
        return new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);
    }
    static byManyIndex(structureId, indexes) {
        return new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);
    }
    static byItemId(structureId, itemId) {
        return new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);
    }
    static byManyItemId(structureId, itemIds) {
        return new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);
    }
    getType() {
        return this.type;
    }
    getPayload() {
        return this.payload;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVsZXRlLW9yaWdpbi1pdGVtLmNvbW1hbmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL3N0cnVjdHVyZS9zb3VyY2UvY29yZS9kb21haW4vb3JpZ2luL2RlbGV0ZS9kZWxldGUtb3JpZ2luLWl0ZW0uY29tbWFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUVoRixNQUFNLENBQU4sSUFBWSx3QkFLWDtBQUxELFdBQVksd0JBQXdCO0lBQ25DLHlFQUFLLENBQUE7SUFDTCw2RUFBTyxDQUFBO0lBQ1AsbUZBQVUsQ0FBQTtJQUNWLHVGQUFZLENBQUE7QUFDYixDQUFDLEVBTFcsd0JBQXdCLEtBQXhCLHdCQUF3QixRQUtuQztBQVVELE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxnQkFBZ0I7SUFFNUQsWUFBWSxXQUF3QixFQUNoQixPQUE0RCxFQUM1RCxJQUE4QjtRQUNqRCxLQUFLLENBQUMsV0FBVyxFQUFFLHlCQUF5QixDQUFDLENBQUM7UUFGM0IsWUFBTyxHQUFQLE9BQU8sQ0FBcUQ7UUFDNUQsU0FBSSxHQUFKLElBQUksQ0FBMEI7SUFFbEQsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBd0IsRUFBRSxLQUFhO1FBQ3JELE9BQU8sSUFBSSx1QkFBdUIsQ0FBQyxXQUFXLEVBQUUsS0FBSyxFQUFFLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hGLENBQUM7SUFFRCxNQUFNLENBQUMsV0FBVyxDQUFDLFdBQXdCLEVBQUUsT0FBc0I7UUFDbEUsT0FBTyxJQUFJLHVCQUF1QixDQUFDLFdBQVcsRUFBRSxPQUFPLEVBQUUsd0JBQXdCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDL0YsQ0FBQztJQUVELE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBd0IsRUFBRSxNQUFnQjtRQUN6RCxPQUFPLElBQUksdUJBQXVCLENBQUMsV0FBVyxFQUFFLE1BQU0sRUFBRSx3QkFBd0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMzRixDQUFDO0lBRUQsTUFBTSxDQUFDLFlBQVksQ0FBQyxXQUF3QixFQUFFLE9BQXdCO1FBQ3JFLE9BQU8sSUFBSSx1QkFBdUIsQ0FBQyxXQUFXLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2pHLENBQUM7SUFFRCxPQUFPO1FBQ04sT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ2xCLENBQUM7SUFFRCxVQUFVO1FBQ1QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3JCLENBQUM7Q0FFRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0cnVjdHVyZUlkIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29yZS9hcGkvc3RydWN0dXJlLmlkJztcbmltcG9ydCB7IE9yaWdpbklkIH0gZnJvbSAnLi4vb3JpZ2luLWlkJztcbmltcG9ydCB7IFN0cnVjdHVyZUNvbW1hbmQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb3JlL2RvbWFpbi9zdHJ1Y3R1cmUuY29tbWFuZCc7XG5cbmV4cG9ydCBlbnVtIERlbGV0ZUNvbW1hbmRQYXlsb2FkVHlwZSB7XG5cdElOREVYLFxuXHRJVEVNX0lELFxuXHRNQU5ZX0lOREVYLFxuXHRNQU5ZX0lURU1fSURcbn1cblxuZXhwb3J0IHR5cGUgRGVsZXRlT3JpZ2luSXRlbVBheWxvYWQgPSB7XG5cblx0aW5kZXg/OiBudW1iZXI7XG5cblx0aXRlbUlkPzogT3JpZ2luSWQ7XG5cbn07XG5cbmV4cG9ydCBjbGFzcyBEZWxldGVPcmlnaW5JdGVtQ29tbWFuZCBleHRlbmRzIFN0cnVjdHVyZUNvbW1hbmQge1xuXG5cdGNvbnN0cnVjdG9yKHN0cnVjdHVyZUlkOiBTdHJ1Y3R1cmVJZCxcblx0XHRcdFx0cHJpdmF0ZSByZWFkb25seSBwYXlsb2FkOiBudW1iZXIgfCBPcmlnaW5JZCB8IEFycmF5PG51bWJlcj4gfCBBcnJheTxPcmlnaW5JZD4sXG5cdFx0XHRcdHByaXZhdGUgcmVhZG9ubHkgdHlwZTogRGVsZXRlQ29tbWFuZFBheWxvYWRUeXBlKSB7XG5cdFx0c3VwZXIoc3RydWN0dXJlSWQsICdEZWxldGVPcmlnaW5JdGVtQ29tbWFuZCcpO1xuXHR9XG5cblx0c3RhdGljIGJ5SW5kZXgoc3RydWN0dXJlSWQ6IFN0cnVjdHVyZUlkLCBpbmRleDogbnVtYmVyKTogRGVsZXRlT3JpZ2luSXRlbUNvbW1hbmQge1xuXHRcdHJldHVybiBuZXcgRGVsZXRlT3JpZ2luSXRlbUNvbW1hbmQoc3RydWN0dXJlSWQsIGluZGV4LCBEZWxldGVDb21tYW5kUGF5bG9hZFR5cGUuSU5ERVgpO1xuXHR9XG5cblx0c3RhdGljIGJ5TWFueUluZGV4KHN0cnVjdHVyZUlkOiBTdHJ1Y3R1cmVJZCwgaW5kZXhlczogQXJyYXk8bnVtYmVyPik6IERlbGV0ZU9yaWdpbkl0ZW1Db21tYW5kIHtcblx0XHRyZXR1cm4gbmV3IERlbGV0ZU9yaWdpbkl0ZW1Db21tYW5kKHN0cnVjdHVyZUlkLCBpbmRleGVzLCBEZWxldGVDb21tYW5kUGF5bG9hZFR5cGUuTUFOWV9JTkRFWCk7XG5cdH1cblxuXHRzdGF0aWMgYnlJdGVtSWQoc3RydWN0dXJlSWQ6IFN0cnVjdHVyZUlkLCBpdGVtSWQ6IE9yaWdpbklkKTogRGVsZXRlT3JpZ2luSXRlbUNvbW1hbmQge1xuXHRcdHJldHVybiBuZXcgRGVsZXRlT3JpZ2luSXRlbUNvbW1hbmQoc3RydWN0dXJlSWQsIGl0ZW1JZCwgRGVsZXRlQ29tbWFuZFBheWxvYWRUeXBlLklURU1fSUQpO1xuXHR9XG5cblx0c3RhdGljIGJ5TWFueUl0ZW1JZChzdHJ1Y3R1cmVJZDogU3RydWN0dXJlSWQsIGl0ZW1JZHM6IEFycmF5PE9yaWdpbklkPik6IERlbGV0ZU9yaWdpbkl0ZW1Db21tYW5kIHtcblx0XHRyZXR1cm4gbmV3IERlbGV0ZU9yaWdpbkl0ZW1Db21tYW5kKHN0cnVjdHVyZUlkLCBpdGVtSWRzLCBEZWxldGVDb21tYW5kUGF5bG9hZFR5cGUuTUFOWV9JVEVNX0lEKTtcblx0fVxuXG5cdGdldFR5cGUoKTogRGVsZXRlQ29tbWFuZFBheWxvYWRUeXBlIHtcblx0XHRyZXR1cm4gdGhpcy50eXBlO1xuXHR9XG5cblx0Z2V0UGF5bG9hZCgpOiBudW1iZXIgfCBPcmlnaW5JZCB8IEFycmF5PG51bWJlcj4gfCBBcnJheTxPcmlnaW5JZD4ge1xuXHRcdHJldHVybiB0aGlzLnBheWxvYWQ7XG5cdH1cblxufVxuIl19