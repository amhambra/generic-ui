/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HermesModule } from '@generic-ui/hermes';
import { PagingDispatcher } from '../../domain/paging/paging.dispatcher';
import { SetPagingCommandHandler } from '../../domain/paging/set/set-paging.command-handler';
import { NextPageCommandHandler } from '../../domain/paging/next-page/next-page.command-handler';
import { PrevPageCommandHandler } from '../../domain/paging/prev-page/prev-page.command-handler';
import { ChangePagesizeCommandHandler } from '../../domain/paging/change-pagesize/change-pagesize.command-handler';
import { PagingRepository } from '../../read/paging/paging.repository';
import { PagingManagerFactory } from '../../domain/paging/paging.manager-factory';
import { PagingConverter } from '../../read/paging/paging.converter';
import { StructurePagingCommandDispatcher } from './structure-paging.command-dispatcher';
import { StructurePagingReadModelWarehouse } from './structure-paging.read-model-warehouse';
import { StructurePagingEventRepository } from './structure-paging.event-repository';
/** @type {?} */
const commandProviders = [
    PagingDispatcher
];
/** @type {?} */
const readProviders = [
    PagingRepository
];
/** @type {?} */
export const pagingCommandHandlers = [
    ...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')
];
/** @type {?} */
export const pagingProviders = [
    ...commandProviders,
    ...readProviders,
    PagingManagerFactory,
    PagingConverter,
    StructurePagingCommandDispatcher,
    StructurePagingReadModelWarehouse,
    StructurePagingEventRepository
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5nLnByb3ZpZGVycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BnZW5lcmljLXVpL25neC1ncmlkLyIsInNvdXJjZXMiOlsibGliL3N0cnVjdHVyZS91aS1hcGkvcGFnaW5nL3BhZ2luZy5wcm92aWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN6RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUM3RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx5REFBeUQsQ0FBQztBQUNqRyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx5REFBeUQsQ0FBQztBQUNqRyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxxRUFBcUUsQ0FBQztBQUNuSCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNsRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDckUsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDekYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDNUYsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0scUNBQXFDLENBQUM7O01BRy9FLGdCQUFnQixHQUFHO0lBQ3hCLGdCQUFnQjtDQUNoQjs7TUFFSyxhQUFhLEdBQUc7SUFDckIsZ0JBQWdCO0NBQ2hCOztBQUVELE1BQU0sT0FBTyxxQkFBcUIsR0FBRztJQUNwQyxHQUFHLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyx1QkFBdUIsRUFBRSxvQkFBb0IsQ0FBQztJQUNyRixHQUFHLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxzQkFBc0IsRUFBRSxvQkFBb0IsQ0FBQztJQUNwRixHQUFHLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxzQkFBc0IsRUFBRSxvQkFBb0IsQ0FBQztJQUNwRixHQUFHLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyw0QkFBNEIsRUFBRSxvQkFBb0IsQ0FBQztDQUMxRjs7QUFFRCxNQUFNLE9BQU8sZUFBZSxHQUFHO0lBQzlCLEdBQUcsZ0JBQWdCO0lBQ25CLEdBQUcsYUFBYTtJQUVoQixvQkFBb0I7SUFDcEIsZUFBZTtJQUVmLGdDQUFnQztJQUNoQyxpQ0FBaUM7SUFDakMsOEJBQThCO0NBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSGVybWVzTW9kdWxlIH0gZnJvbSAnQGdlbmVyaWMtdWkvaGVybWVzJztcblxuaW1wb3J0IHsgUGFnaW5nRGlzcGF0Y2hlciB9IGZyb20gJy4uLy4uL2RvbWFpbi9wYWdpbmcvcGFnaW5nLmRpc3BhdGNoZXInO1xuaW1wb3J0IHsgU2V0UGFnaW5nQ29tbWFuZEhhbmRsZXIgfSBmcm9tICcuLi8uLi9kb21haW4vcGFnaW5nL3NldC9zZXQtcGFnaW5nLmNvbW1hbmQtaGFuZGxlcic7XG5pbXBvcnQgeyBOZXh0UGFnZUNvbW1hbmRIYW5kbGVyIH0gZnJvbSAnLi4vLi4vZG9tYWluL3BhZ2luZy9uZXh0LXBhZ2UvbmV4dC1wYWdlLmNvbW1hbmQtaGFuZGxlcic7XG5pbXBvcnQgeyBQcmV2UGFnZUNvbW1hbmRIYW5kbGVyIH0gZnJvbSAnLi4vLi4vZG9tYWluL3BhZ2luZy9wcmV2LXBhZ2UvcHJldi1wYWdlLmNvbW1hbmQtaGFuZGxlcic7XG5pbXBvcnQgeyBDaGFuZ2VQYWdlc2l6ZUNvbW1hbmRIYW5kbGVyIH0gZnJvbSAnLi4vLi4vZG9tYWluL3BhZ2luZy9jaGFuZ2UtcGFnZXNpemUvY2hhbmdlLXBhZ2VzaXplLmNvbW1hbmQtaGFuZGxlcic7XG5pbXBvcnQgeyBQYWdpbmdSZXBvc2l0b3J5IH0gZnJvbSAnLi4vLi4vcmVhZC9wYWdpbmcvcGFnaW5nLnJlcG9zaXRvcnknO1xuaW1wb3J0IHsgUGFnaW5nTWFuYWdlckZhY3RvcnkgfSBmcm9tICcuLi8uLi9kb21haW4vcGFnaW5nL3BhZ2luZy5tYW5hZ2VyLWZhY3RvcnknO1xuaW1wb3J0IHsgUGFnaW5nQ29udmVydGVyIH0gZnJvbSAnLi4vLi4vcmVhZC9wYWdpbmcvcGFnaW5nLmNvbnZlcnRlcic7XG5pbXBvcnQgeyBTdHJ1Y3R1cmVQYWdpbmdDb21tYW5kRGlzcGF0Y2hlciB9IGZyb20gJy4vc3RydWN0dXJlLXBhZ2luZy5jb21tYW5kLWRpc3BhdGNoZXInO1xuaW1wb3J0IHsgU3RydWN0dXJlUGFnaW5nUmVhZE1vZGVsV2FyZWhvdXNlIH0gZnJvbSAnLi9zdHJ1Y3R1cmUtcGFnaW5nLnJlYWQtbW9kZWwtd2FyZWhvdXNlJztcbmltcG9ydCB7IFN0cnVjdHVyZVBhZ2luZ0V2ZW50UmVwb3NpdG9yeSB9IGZyb20gJy4vc3RydWN0dXJlLXBhZ2luZy5ldmVudC1yZXBvc2l0b3J5JztcblxuXG5jb25zdCBjb21tYW5kUHJvdmlkZXJzID0gW1xuXHRQYWdpbmdEaXNwYXRjaGVyXG5dO1xuXG5jb25zdCByZWFkUHJvdmlkZXJzID0gW1xuXHRQYWdpbmdSZXBvc2l0b3J5XG5dO1xuXG5leHBvcnQgY29uc3QgcGFnaW5nQ29tbWFuZEhhbmRsZXJzID0gW1xuXHQuLi5IZXJtZXNNb2R1bGUucmVnaXN0ZXJDb21tYW5kSGFuZGxlcihTZXRQYWdpbmdDb21tYW5kSGFuZGxlciwgJ1N0cnVjdHVyZUFnZ3JlZ2F0ZScpLFxuXHQuLi5IZXJtZXNNb2R1bGUucmVnaXN0ZXJDb21tYW5kSGFuZGxlcihOZXh0UGFnZUNvbW1hbmRIYW5kbGVyLCAnU3RydWN0dXJlQWdncmVnYXRlJyksXG5cdC4uLkhlcm1lc01vZHVsZS5yZWdpc3RlckNvbW1hbmRIYW5kbGVyKFByZXZQYWdlQ29tbWFuZEhhbmRsZXIsICdTdHJ1Y3R1cmVBZ2dyZWdhdGUnKSxcblx0Li4uSGVybWVzTW9kdWxlLnJlZ2lzdGVyQ29tbWFuZEhhbmRsZXIoQ2hhbmdlUGFnZXNpemVDb21tYW5kSGFuZGxlciwgJ1N0cnVjdHVyZUFnZ3JlZ2F0ZScpXG5dO1xuXG5leHBvcnQgY29uc3QgcGFnaW5nUHJvdmlkZXJzID0gW1xuXHQuLi5jb21tYW5kUHJvdmlkZXJzLFxuXHQuLi5yZWFkUHJvdmlkZXJzLFxuXG5cdFBhZ2luZ01hbmFnZXJGYWN0b3J5LFxuXHRQYWdpbmdDb252ZXJ0ZXIsXG5cblx0U3RydWN0dXJlUGFnaW5nQ29tbWFuZERpc3BhdGNoZXIsXG5cdFN0cnVjdHVyZVBhZ2luZ1JlYWRNb2RlbFdhcmVob3VzZSxcblx0U3RydWN0dXJlUGFnaW5nRXZlbnRSZXBvc2l0b3J5XG5dO1xuIl19