/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';
import { inMemoryStructureCommandProviders, inMemoryStructureProviders, inMemoryStructureReadProviders } from '../infrastructure/in-memory/in-memory.structure.providers';
import { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';
import { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';
import { InitFieldsCommandHandler } from '../domain/structure/field/init/init-fields.command-handler';
import { ToggleSortCommandHandler } from '../domain/structure/sort/toggle/toggle-sort.command-handler';
import { SetSortingCommandHandler } from '../domain/structure/sort/set-config/set-sorting.command-handler';
import { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';
import { StructureSetConfigSearchingCommandHandler } from '../domain/structure/search/config/structure.set-config-searching.command-handler';
import { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';
import { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';
import { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';
import { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';
import { FieldCollectionFactory } from '../domain/structure/field/field-collection.factory';
import { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';
import { FieldIdGenerator } from '../domain/structure/field/field-id.generator';
import { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';
import { FieldFactory } from '../domain/structure/field/data-type/field.factory';
import { summariesProviders } from '../domain/structure/summaries/summaries.providers';
import { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';
import { StructureConfigSearchingSetEventHandler } from './search/enabled/structure.config-searching-set.event-handler';
import { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';
import { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';
import { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';
import { StructureFilterWarehouse } from './filter/structure-filter.warehouse';
import { StructureFilterRepository } from './filter/read/structure.filter.repository';
import { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';
import { StructureSearchingRepository } from './search/enabled/structure.searching.repository';
import { StructureSearchWarehouse } from './search/structure-search.warehouse';
import { StructureFieldUiArchive } from './field/structure.field.ui-archive';
import { StructureFieldUiConverter } from './field/structure.field.ui-converter';
import { StructureFieldUiRepository } from './field/structure.field.ui-repository';
import { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';
import { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';
import { StructureCommandDispatcher } from './structure.command-dispatcher';
import { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';
import { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';
import { StructureWarehouse } from './structure.warehouse';
import { formationProviders } from './formation/formation.providers';
import { sourceProviders } from './source/source.providers';
import { StructureSetSearchPhraseCommandHandler } from '../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';
import { SearchManagerFactory } from '../domain/structure/search/search.manager-factory';
import { SetSortOrderCommandHandler } from '../domain/structure/sort/order/set-sort-order.command-handler';
import { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';
import { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';
import { StructureSearchPhraseRepository } from './search/phrase/structure.search-phrase.repository';
import { StructureSearchPhraseSetEventHandler } from './search/phrase/structure.search-phrase-set.event-handler';
import { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';
import { StructureSearchEventService } from './search/structure-search-event.service';
import { StructureSearchHighlightArchive } from './search/highlight/structure.search-highlight.archive';
import { StructureSearchPlaceholderArchive } from './search/placeholder/structure.search-placeholder.archive';
import { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';
import { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';
import { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';
import { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';
import { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';
import { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';
import { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';
/** @type {?} */
const commandProviders = [
    ...inMemoryStructureCommandProviders,
    VerticalFormationFactory,
    FieldCollectionFactory,
    FilterManagerFactory,
    SearchManagerFactory,
    FieldIdGenerator,
    StructureFilterCommandDispatcher,
    FieldFactory,
    StructureSearchDispatcher,
    ...summariesProviders
];
/** @type {?} */
const readProviders = [
    {
        provide: DOMAIN_EVENT_HANDLERS,
        useClass: StructureConfigFilterSetEventHandler,
        multi: true
    }, {
        provide: DOMAIN_EVENT_HANDLERS,
        useClass: StructureConfigSearchingSetEventHandler,
        multi: true
    }, {
        provide: DOMAIN_EVENT_HANDLERS,
        useClass: StructureConfigQuickFilterSetEventHandler,
        multi: true
    }, {
        provide: DOMAIN_EVENT_HANDLERS,
        useClass: StructureFieldsInitedEventHandler,
        multi: true
    }, {
        provide: DOMAIN_EVENT_HANDLERS,
        useClass: StructureSearchPhraseSetEventHandler,
        multi: true
    }, {
        provide: DOMAIN_EVENT_HANDLERS,
        useClass: StructureCreatedEventHandler,
        multi: true
    }, {
        provide: DOMAIN_EVENT_HANDLERS,
        useClass: StructureSummariesEnabledSetEventHandler,
        multi: true
    },
    ...inMemoryStructureReadProviders,
    VerticalFormationConverter,
    VerticalFormationRepository,
    StructureFilterWarehouse,
    StructureFilterRepository,
    StructureQuickFilterRepository,
    StructureSearchingRepository,
    StructureSearchWarehouse,
    StructureSummariesRepository,
    StructureSummariesWarehouse,
    StructureFieldUiArchive,
    StructureFieldUiConverter,
    StructureFieldUiRepository,
    StructureSearchPhraseRepository,
    StructureSearchHighlightArchive,
    StructureSearchPlaceholderArchive
];
/** @type {?} */
export const structureCommandHandlers = [
    ...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),
    ...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')
];
/** @type {?} */
export const structureProviders = [
    ...inMemoryStructureProviders,
    ...commandProviders,
    ...readProviders,
    StructureSearchEventService,
    StructureSummariesCommandDispatcher,
    StructureSummariesUiEventsRepository,
    StructureAggregateFactory,
    StructureReadModelRootConverter,
    StructureVerticalFormationWarehouse,
    StructureWarehouse,
    StructureCommandDispatcher,
    ...formationProviders,
    ...sourceProviders
];
//# sourceMappingURL=data:application/json;base64,