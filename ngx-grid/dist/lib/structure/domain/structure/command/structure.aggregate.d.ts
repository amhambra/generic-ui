import { OriginAggregate } from 'structure/domain/origin/command/origin.aggregate';
import { FormationAggregate } from 'structure/domain/formation/command/formation-aggregate';
import { Column } from 'structure/domain/presentation/column';
import { SchemaAggregate } from 'structure/domain/schema/command/schema-aggregate';
import { PagingAggregate } from 'structure/domain/paging/command/paging-aggregate';
import { OriginItemEntity } from 'structure/domain/origin/command/origin-item-entity';
import { PresentationAggregate } from 'structure/domain/presentation/command/presentation-aggregate';
import { PagingConfig } from 'structure/domain/paging/paging-config';
import { Aggregate } from 'generic-ui-cqrs';
export declare class StructureAggregate extends Aggregate {
    static default(uid: string, paging: PagingAggregate): StructureAggregate;
    private origin;
    private formation;
    private schema;
    private paging;
    private presentation;
    private source;
    private constructor();
    getOrigin(): OriginAggregate;
    setOrigin(items: Array<any>): void;
    setOrigin(origin: OriginAggregate): void;
    setFormation(formation: FormationAggregate): void;
    getFormation(): FormationAggregate;
    setSchema(schema: SchemaAggregate): void;
    getSchema(): SchemaAggregate;
    getPaging(): PagingAggregate;
    changePaging(config: PagingConfig): void;
    setPaging(paging: PagingAggregate): void;
    nextPage(): void;
    prevPage(): void;
    changePageSize(pageSize: number): void;
    calculateSource(): void;
    getSource(): Array<OriginItemEntity>;
    setColumns(columns: Array<Column>): void;
    setPresentation(presentation: PresentationAggregate): void;
    getPresentation(): PresentationAggregate;
}
