import { AfterViewInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, OnInit } from '@angular/core';
import { ResizeDetector } from '@generic-ui/fabric';
import { SmartComponent } from '../../../../common/cdk/component/smart-component';
import { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';
import { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';
import { StructureId } from '../../../core/api/structure.id';
import { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';
import { StructureWarehouse } from '../../core/api/structure.warehouse';
import { SourceWarehouse } from '../../../source/core/api/source.warehouse';
import { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';
import { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';
import { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';
import { ItemEntity } from '../../../source/core/domain/core/item/item.entity';
import { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';
export declare class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {
    private readonly elRef;
    private readonly ngZone;
    private readonly structureId;
    private readonly structureCommandService;
    private readonly structureWarehouse;
    private readonly structureVerticalFormationWarehouse;
    private readonly sourceWarehouse;
    private readonly compositionCommandInvoker;
    private readonly compositionWarehouse;
    private readonly formationWarehouse;
    private readonly resizeDetector;
    private readonly structureParent;
    sourceCollectionRef: ElementRef;
    columns: Array<CellTemplateWithAccessor>;
    source: Array<ItemEntity>;
    height: number;
    rowColoring: SchemaRowColoring;
    private autoResizeWidthEnabled;
    private scrollObservation$;
    private readonly styleModifier;
    constructor(changeDetectorRef: ChangeDetectorRef, elRef: ElementRef, ngZone: NgZone, structureId: StructureId, structureCommandService: StructureCommandDispatcher, structureWarehouse: StructureWarehouse, structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse, sourceWarehouse: SourceWarehouse, compositionCommandInvoker: CompositionCommandInvoker, compositionWarehouse: CompositionWarehouse, formationWarehouse: FormationWarehouse, resizeDetector: ResizeDetector, structureParent: any);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private setContainerHeight;
    private setSourceHeight;
    private recalculateContainer;
    private enableScrollObservation;
    private disableScrollObservation;
    protected getSelectorName(): string;
}
