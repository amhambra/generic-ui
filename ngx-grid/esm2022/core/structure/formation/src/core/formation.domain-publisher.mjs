import { FormationPublisher } from '../api/formation.publisher';
import { CommandDispatcher } from '@generic-ui/hermes';
import { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';
import { SetSelectionModeCommand } from './mode/set-selection-mode.command';
import { SetSelectionTypeCommand } from './type/set-selection-type.command';
import { SetEnabledSelectionCommand } from './set-enabled/set-enabled-selection.command';
import { SelectAllRowsCommand } from './select-all/select-all-rows.command';
import { UnselectAllRowsCommand } from './unselect-all/unselect-all-rows.command';
import { SelectRowByIndexCommand } from './select-by-index/select-row-by-index.command';
import { SetSelectedRowCommand } from './set-selected/set-selected-row.command';
import { SelectRowByIdCommand } from './select-by-id/select-row-by-id.command';
import { FormationSetMatcherCommand } from './set-matcher/formation.set-matcher.command';
import { FormationCustomSelectCommand } from './custom/select/formation.custom-select.command';
import { FormationSetCustomSelectConfigCommand } from './custom/config/formation.set-custom-select-config.command';
export class FormationDomainPublisher extends FormationPublisher {
    commandDispatcher;
    constructor(commandDispatcher) {
        super();
        this.commandDispatcher = commandDispatcher;
    }
    static services = [CommandDispatcher];
    setSelection(enabled, structureId) {
        this.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));
    }
    selectRows(selectedRow, structureId) {
        this.commandDispatcher.dispatch(new SetSelectedRowCommand(structureId, selectedRow));
    }
    selectByIndex(indexes, structureId) {
        this.commandDispatcher.dispatch(new SelectRowByIndexCommand(structureId, indexes));
    }
    selectByIds(ids, structureId) {
        this.commandDispatcher.dispatch(new SelectRowByIdCommand(structureId, ids));
    }
    toggleSelectedRow(selectedRow, type, structureId) {
        this.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));
    }
    changeMode(mode, structureId) {
        this.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));
    }
    changeType(type, structureId) {
        this.commandDispatcher.dispatch(new SetSelectionTypeCommand(structureId, type));
    }
    setMatcher(matcher, structureId) {
        this.commandDispatcher.dispatch(new FormationSetMatcherCommand(structureId, matcher));
    }
    selectAll(structureId) {
        this.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));
    }
    unselectAll(structureId) {
        this.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));
    }
    selectCustom(id, structureId) {
        this.commandDispatcher.dispatch(new FormationCustomSelectCommand(structureId, id));
    }
    setCustomSelection(config, structureId) {
        this.commandDispatcher.dispatch(new FormationSetCustomSelectConfigCommand(structureId, config));
    }
}
//# sourceMappingURL=data:application/json;base64,