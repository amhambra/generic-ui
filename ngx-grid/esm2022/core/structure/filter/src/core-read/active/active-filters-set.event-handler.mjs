import { ActiveFiltersSetEvent } from '../../core/active-filters-set.event';
import { ActiveFilterArchive } from './active-filter.archive';
import { FilterDiContainer } from '../../api/di/filter.di-container';
export class ActiveFiltersSetEventHandler {
    activeFilterRepository = FilterDiContainer.resolve(ActiveFilterArchive);
    forEvent() {
        return ActiveFiltersSetEvent;
    }
    handle(activeFiltersSetEvent) {
        if (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {
            const activeFilters = activeFiltersSetEvent.getFilters();
            this.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZlLWZpbHRlcnMtc2V0LmV2ZW50LWhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL2NvcmUvc3RydWN0dXJlL2ZpbHRlci9zcmMvY29yZS1yZWFkL2FjdGl2ZS9hY3RpdmUtZmlsdGVycy1zZXQuZXZlbnQtaGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM1RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUU5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUdyRSxNQUFNLE9BQU8sNEJBQTRCO0lBRXZCLHNCQUFzQixHQUF3QixpQkFBaUIsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUU5RyxRQUFRO1FBQ1AsT0FBTyxxQkFBcUIsQ0FBQztJQUM5QixDQUFDO0lBRUQsTUFBTSxDQUFDLHFCQUE0QztRQUVsRCxJQUFJLHFCQUFxQixDQUFDLGFBQWEsQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFO1lBRWpFLE1BQU0sYUFBYSxHQUFxQyxxQkFBcUIsQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUUzRixJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGNBQWMsRUFBRSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1NBQ3hGO0lBQ0YsQ0FBQztDQUVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRG9tYWluRXZlbnRIYW5kbGVyLCBEb21haW5FdmVudFR5cGUgfSBmcm9tICdAZ2VuZXJpYy11aS9oZXJtZXMnO1xuXG5pbXBvcnQgeyBTdHJ1Y3R1cmVJZCB9IGZyb20gJy4uLy4uLy4uLy4uL3N0cnVjdHVyZS1jb3JlL3NyYy9hcGkvZ2xvYmFsL3N0cnVjdHVyZS5pZCc7XG5pbXBvcnQgeyBBY3RpdmVGaWx0ZXJzU2V0RXZlbnQgfSBmcm9tICcuLi8uLi9jb3JlL2FjdGl2ZS1maWx0ZXJzLXNldC5ldmVudCc7XG5pbXBvcnQgeyBBY3RpdmVGaWx0ZXJBcmNoaXZlIH0gZnJvbSAnLi9hY3RpdmUtZmlsdGVyLmFyY2hpdmUnO1xuaW1wb3J0IHsgQWN0aXZlRmlsdGVyTW9kZWwgfSBmcm9tICcuLi8uLi9hcGkvYWN0aXZlL2FjdGl2ZS1maWx0ZXIubW9kZWwnO1xuaW1wb3J0IHsgRmlsdGVyRGlDb250YWluZXIgfSBmcm9tICcuLi8uLi9hcGkvZGkvZmlsdGVyLmRpLWNvbnRhaW5lcic7XG5cblxuZXhwb3J0IGNsYXNzIEFjdGl2ZUZpbHRlcnNTZXRFdmVudEhhbmRsZXIgaW1wbGVtZW50cyBEb21haW5FdmVudEhhbmRsZXI8U3RydWN0dXJlSWQsIEFjdGl2ZUZpbHRlcnNTZXRFdmVudD4ge1xuXG5cdHByaXZhdGUgcmVhZG9ubHkgYWN0aXZlRmlsdGVyUmVwb3NpdG9yeTogQWN0aXZlRmlsdGVyQXJjaGl2ZSA9IEZpbHRlckRpQ29udGFpbmVyLnJlc29sdmUoQWN0aXZlRmlsdGVyQXJjaGl2ZSk7XG5cblx0Zm9yRXZlbnQoKTogRG9tYWluRXZlbnRUeXBlPEFjdGl2ZUZpbHRlcnNTZXRFdmVudD4ge1xuXHRcdHJldHVybiBBY3RpdmVGaWx0ZXJzU2V0RXZlbnQ7XG5cdH1cblxuXHRoYW5kbGUoYWN0aXZlRmlsdGVyc1NldEV2ZW50OiBBY3RpdmVGaWx0ZXJzU2V0RXZlbnQpOiB2b2lkIHtcblxuXHRcdGlmIChhY3RpdmVGaWx0ZXJzU2V0RXZlbnQub2ZNZXNzYWdlVHlwZSgnQWN0aXZlRmlsdGVyc1NldEV2ZW50JykpIHtcblxuXHRcdFx0Y29uc3QgYWN0aXZlRmlsdGVyczogUmVhZG9ubHlBcnJheTxBY3RpdmVGaWx0ZXJNb2RlbD4gPSBhY3RpdmVGaWx0ZXJzU2V0RXZlbnQuZ2V0RmlsdGVycygpO1xuXG5cdFx0XHR0aGlzLmFjdGl2ZUZpbHRlclJlcG9zaXRvcnkubmV4dChhY3RpdmVGaWx0ZXJzU2V0RXZlbnQuZ2V0QWdncmVnYXRlSWQoKSwgYWN0aXZlRmlsdGVycyk7XG5cdFx0fVxuXHR9XG5cbn1cbiJdfQ==