export class UniqueValueCollectionModel {
    map = new Map();
    allSelected = new Map();
    allDisabled = new Map();
    constructor(map) {
        this.map = map;
        this.calculateSelection();
    }
    getValues(fieldId) {
        return this.map.get(fieldId.toString());
    }
    areAllSelected(fieldId) {
        return this.allSelected.get(fieldId.toString());
    }
    areAllDisabled(fieldId) {
        return this.allDisabled.get(fieldId.toString());
    }
    isSelectAllChecked(fieldId) {
        return this.areAllSelected(fieldId);
    }
    isIndeterminate(fieldId) {
        return !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));
    }
    calculateSelection() {
        for (const key of Array.from(this.map.keys())) {
            const values = this.map.get(key);
            this.allSelected.set(key, !values.some((r) => !r.isEnabled()));
            this.allDisabled.set(key, !values.some((r) => r.isEnabled()));
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pcXVlLXZhbHVlLWNvbGxlY3Rpb24ubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL2NvcmUvc3RydWN0dXJlL2ZpbHRlci9zcmMvYXBpL3VuaXF1ZS91bmlxdWUtdmFsdWUtY29sbGVjdGlvbi5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLE9BQU8sMEJBQTBCO0lBRXJCLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBbUMsQ0FBQztJQUVqRCxXQUFXLEdBQXlCLElBQUksR0FBRyxFQUFtQixDQUFDO0lBRS9ELFdBQVcsR0FBeUIsSUFBSSxHQUFHLEVBQW1CLENBQUM7SUFFaEYsWUFBWSxHQUF5QztRQUNwRCxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUNmLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFRCxTQUFTLENBQUMsT0FBZ0I7UUFDekIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsY0FBYyxDQUFDLE9BQWdCO1FBQzlCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELGNBQWMsQ0FBQyxPQUFnQjtRQUM5QixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRCxrQkFBa0IsQ0FBQyxPQUFnQjtRQUNsQyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELGVBQWUsQ0FBQyxPQUFnQjtRQUMvQixPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRU8sa0JBQWtCO1FBRXpCLEtBQUssTUFBTSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUU7WUFFOUMsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFakMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQ25CLEdBQUcsRUFDSCxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQ25DLENBQUM7WUFFRixJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FDbkIsR0FBRyxFQUNILENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQ2xDLENBQUM7U0FDRjtJQUNGLENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZpZWxkSWQgfSBmcm9tICcuLi8uLi8uLi8uLi9maWVsZC9zcmMvZG9tYWluL2ZpZWxkL2ZpZWxkLmlkJztcbmltcG9ydCB7IFVuaXF1ZVZhbHVlTW9kZWwgfSBmcm9tICcuL3VuaXF1ZS12YWx1ZS5tb2RlbCc7XG5cbmV4cG9ydCBjbGFzcyBVbmlxdWVWYWx1ZUNvbGxlY3Rpb25Nb2RlbCB7XG5cblx0cHJpdmF0ZSByZWFkb25seSBtYXAgPSBuZXcgTWFwPHN0cmluZywgQXJyYXk8VW5pcXVlVmFsdWVNb2RlbD4+KCk7XG5cblx0cHJpdmF0ZSByZWFkb25seSBhbGxTZWxlY3RlZDogTWFwPHN0cmluZywgYm9vbGVhbj4gPSBuZXcgTWFwPHN0cmluZywgYm9vbGVhbj4oKTtcblxuXHRwcml2YXRlIHJlYWRvbmx5IGFsbERpc2FibGVkOiBNYXA8c3RyaW5nLCBib29sZWFuPiA9IG5ldyBNYXA8c3RyaW5nLCBib29sZWFuPigpO1xuXG5cdGNvbnN0cnVjdG9yKG1hcDogTWFwPHN0cmluZywgQXJyYXk8VW5pcXVlVmFsdWVNb2RlbD4+KSB7XG5cdFx0dGhpcy5tYXAgPSBtYXA7XG5cdFx0dGhpcy5jYWxjdWxhdGVTZWxlY3Rpb24oKTtcblx0fVxuXG5cdGdldFZhbHVlcyhmaWVsZElkOiBGaWVsZElkKTogQXJyYXk8VW5pcXVlVmFsdWVNb2RlbD4ge1xuXHRcdHJldHVybiB0aGlzLm1hcC5nZXQoZmllbGRJZC50b1N0cmluZygpKTtcblx0fVxuXG5cdGFyZUFsbFNlbGVjdGVkKGZpZWxkSWQ6IEZpZWxkSWQpOiBib29sZWFuIHtcblx0XHRyZXR1cm4gdGhpcy5hbGxTZWxlY3RlZC5nZXQoZmllbGRJZC50b1N0cmluZygpKTtcblx0fVxuXG5cdGFyZUFsbERpc2FibGVkKGZpZWxkSWQ6IEZpZWxkSWQpOiBib29sZWFuIHtcblx0XHRyZXR1cm4gdGhpcy5hbGxEaXNhYmxlZC5nZXQoZmllbGRJZC50b1N0cmluZygpKTtcblx0fVxuXG5cdGlzU2VsZWN0QWxsQ2hlY2tlZChmaWVsZElkOiBGaWVsZElkKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMuYXJlQWxsU2VsZWN0ZWQoZmllbGRJZCk7XG5cdH1cblxuXHRpc0luZGV0ZXJtaW5hdGUoZmllbGRJZDogRmllbGRJZCk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiAhKHRoaXMuYXJlQWxsU2VsZWN0ZWQoZmllbGRJZCkgfHwgdGhpcy5hcmVBbGxEaXNhYmxlZChmaWVsZElkKSk7XG5cdH1cblxuXHRwcml2YXRlIGNhbGN1bGF0ZVNlbGVjdGlvbigpOiB2b2lkIHtcblxuXHRcdGZvciAoY29uc3Qga2V5IG9mIEFycmF5LmZyb20odGhpcy5tYXAua2V5cygpKSkge1xuXG5cdFx0XHRjb25zdCB2YWx1ZXMgPSB0aGlzLm1hcC5nZXQoa2V5KTtcblxuXHRcdFx0dGhpcy5hbGxTZWxlY3RlZC5zZXQoXG5cdFx0XHRcdGtleSxcblx0XHRcdFx0IXZhbHVlcy5zb21lKChyKSA9PiAhci5pc0VuYWJsZWQoKSlcblx0XHRcdCk7XG5cblx0XHRcdHRoaXMuYWxsRGlzYWJsZWQuc2V0KFxuXHRcdFx0XHRrZXksXG5cdFx0XHRcdCF2YWx1ZXMuc29tZSgocikgPT4gci5pc0VuYWJsZWQoKSlcblx0XHRcdCk7XG5cdFx0fVxuXHR9XG59XG4iXX0=