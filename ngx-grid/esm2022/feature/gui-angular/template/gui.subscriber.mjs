import { hermesDistinctUntilChanged, HermesReplaySubject, hermesTakeUntil } from '@generic-ui/hermes';
export class GuiSubscriber {
    destroy$ = new HermesReplaySubject(1);
    subscription;
    subscribe(obs$, next) {
        if (this.subscription !== undefined) {
            this.subscription.unsubscribe();
        }
        this.subscription =
            obs$
                .pipe(hermesDistinctUntilChanged(), hermesTakeUntil(this.destroy$))
                .subscribe((v) => next(v), (error) => this.onError(error), () => this.onComplete());
    }
    destroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    onError(_error) {
    }
    onComplete() {
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3VpLnN1YnNjcmliZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL2ZlYXR1cmUvZ3VpLWFuZ3VsYXIvdGVtcGxhdGUvZ3VpLnN1YnNjcmliZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLDBCQUEwQixFQUFvQixtQkFBbUIsRUFBc0IsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFNUksTUFBTSxPQUFPLGFBQWE7SUFFUixRQUFRLEdBQUcsSUFBSSxtQkFBbUIsQ0FBTyxDQUFDLENBQUMsQ0FBQztJQUVyRCxZQUFZLENBQXFCO0lBRXpDLFNBQVMsQ0FDUixJQUEyQixFQUMzQixJQUFzQjtRQUd0QixJQUFJLElBQUksQ0FBQyxZQUFZLEtBQUssU0FBUyxFQUFFO1lBQ3BDLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDaEM7UUFFRCxJQUFJLENBQUMsWUFBWTtZQUNoQixJQUFJO2lCQUNGLElBQUksQ0FDSiwwQkFBMEIsRUFBRSxFQUM1QixlQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUM5QjtpQkFDQSxTQUFTLENBQ1QsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDbkIsQ0FBQyxLQUFVLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQ25DLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FDdkIsQ0FBQztJQUNMLENBQUM7SUFFRCxPQUFPO1FBQ04sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxPQUFPLENBQUMsTUFBVztJQUVuQixDQUFDO0lBRUQsVUFBVTtJQUVWLENBQUM7Q0FFRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhlcm1lc0Rpc3RpbmN0VW50aWxDaGFuZ2VkLCBIZXJtZXNPYnNlcnZhYmxlLCBIZXJtZXNSZXBsYXlTdWJqZWN0LCBIZXJtZXNTdWJzY3JpcHRpb24sIGhlcm1lc1Rha2VVbnRpbCB9IGZyb20gJ0BnZW5lcmljLXVpL2hlcm1lcyc7XG5cbmV4cG9ydCBjbGFzcyBHdWlTdWJzY3JpYmVyIHtcblxuXHRwcml2YXRlIHJlYWRvbmx5IGRlc3Ryb3kkID0gbmV3IEhlcm1lc1JlcGxheVN1YmplY3Q8dm9pZD4oMSk7XG5cblx0cHJpdmF0ZSBzdWJzY3JpcHRpb246IEhlcm1lc1N1YnNjcmlwdGlvbjtcblxuXHRzdWJzY3JpYmUoXG5cdFx0b2JzJDogSGVybWVzT2JzZXJ2YWJsZTxhbnk+LFxuXHRcdG5leHQ6ICh2OiBhbnkpID0+IHZvaWRcblx0KTogdm9pZCB7XG5cblx0XHRpZiAodGhpcy5zdWJzY3JpcHRpb24gIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0dGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcblx0XHR9XG5cblx0XHR0aGlzLnN1YnNjcmlwdGlvbiA9XG5cdFx0XHRvYnMkXG5cdFx0XHRcdC5waXBlKFxuXHRcdFx0XHRcdGhlcm1lc0Rpc3RpbmN0VW50aWxDaGFuZ2VkKCksXG5cdFx0XHRcdFx0aGVybWVzVGFrZVVudGlsKHRoaXMuZGVzdHJveSQpXG5cdFx0XHRcdClcblx0XHRcdFx0LnN1YnNjcmliZShcblx0XHRcdFx0XHQodjogYW55KSA9PiBuZXh0KHYpLFxuXHRcdFx0XHRcdChlcnJvcjogYW55KSA9PiB0aGlzLm9uRXJyb3IoZXJyb3IpLFxuXHRcdFx0XHRcdCgpID0+IHRoaXMub25Db21wbGV0ZSgpXG5cdFx0XHRcdCk7XG5cdH1cblxuXHRkZXN0cm95KCk6IHZvaWQge1xuXHRcdHRoaXMuZGVzdHJveSQubmV4dCgpO1xuXHRcdHRoaXMuZGVzdHJveSQuY29tcGxldGUoKTtcblx0fVxuXG5cdG9uRXJyb3IoX2Vycm9yOiBhbnkpOiB2b2lkIHtcblxuXHR9XG5cblx0b25Db21wbGV0ZSgpOiB2b2lkIHtcblxuXHR9XG5cbn1cbiJdfQ==